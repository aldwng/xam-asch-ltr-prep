/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.xiaomi.miui.ad.appstore.feature;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class AppExt implements TBase<AppExt, AppExt._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("AppExt");

  private static final TField APP_ID_FIELD_DESC = new TField("appId", TType.I64, (short)1);
  private static final TField PACKAGE_NAME_FIELD_DESC = new TField("packageName", TType.STRING, (short)2);
  private static final TField DISPLAY_NAME_FIELD_DESC = new TField("displayName", TType.STRING, (short)3);
  private static final TField LEVEL1_CATEGORY_NAME_FIELD_DESC = new TField("level1CategoryName", TType.STRING, (short)5);
  private static final TField LEVEL2_CATEGORY_NAME_FIELD_DESC = new TField("level2CategoryName", TType.STRING, (short)6);
  private static final TField TAGS_FIELD_DESC = new TField("tags", TType.LIST, (short)7);
  private static final TField DESC_FIELD_DESC = new TField("desc", TType.STRING, (short)8);
  private static final TField BRIEF_FIELD_DESC = new TField("brief", TType.STRING, (short)9);
  private static final TField DEVELOPER_APP_COUNT_FIELD_DESC = new TField("developerAppCount", TType.I32, (short)10);
  private static final TField APK_SIZE_FIELD_DESC = new TField("apkSize", TType.I64, (short)11);
  private static final TField STAR_FIELD_DESC = new TField("star", TType.I32, (short)12);
  private static final TField RANK_ORDER_FIELD_DESC = new TField("rankOrder", TType.I64, (short)13);
  private static final TField RANK_ORDER_FOR_PAD_FIELD_DESC = new TField("rankOrderForPad", TType.I64, (short)14);
  private static final TField LAST_WEEK_UPDATE_COUNT_FIELD_DESC = new TField("lastWeekUpdateCount", TType.I32, (short)15);
  private static final TField LAST_MONTH_UPDATE_COUNT_FIELD_DESC = new TField("lastMonthUpdateCount", TType.I32, (short)16);
  private static final TField FAVORITE_COUNT_FIELD_DESC = new TField("favoriteCount", TType.I32, (short)17);
  private static final TField FEEDBACK_COUNT_FIELD_DESC = new TField("feedbackCount", TType.I32, (short)18);
  private static final TField PERMISSION_COUNT_FIELD_DESC = new TField("permissionCount", TType.I32, (short)19);
  private static final TField CREATE_TIME_FIELD_DESC = new TField("createTime", TType.I64, (short)20);
  private static final TField BAD_CMT_FIELD_DESC = new TField("badCmt", TType.I32, (short)21);
  private static final TField GOOD_CMT_FIELD_DESC = new TField("goodCmt", TType.I32, (short)22);
  private static final TField YSTD_DOWNLOAD_FIELD_DESC = new TField("ystdDownload", TType.I32, (short)30);
  private static final TField YSTD_INSTALL_FIELD_DESC = new TField("ystdInstall", TType.I32, (short)31);
  private static final TField YSTD_BROWSER_FIELD_DESC = new TField("ystdBrowser", TType.I32, (short)32);
  private static final TField YSTD_ACTIVE_FIELD_DESC = new TField("ystdActive", TType.I32, (short)33);
  private static final TField LAST_WEEK_DOWNLOAD_FIELD_DESC = new TField("lastWeekDownload", TType.I32, (short)34);
  private static final TField LAST_WEEK_INSTALL_FIELD_DESC = new TField("lastWeekInstall", TType.I32, (short)35);
  private static final TField LAST_WEEK_BROWSER_FIELD_DESC = new TField("lastWeekBrowser", TType.I32, (short)36);
  private static final TField LAST_WEEK_ACTIVE_FIELD_DESC = new TField("lastWeekActive", TType.I32, (short)37);
  private static final TField LAST_MONTH_DOWNLOAD_FIELD_DESC = new TField("lastMonthDownload", TType.I32, (short)38);
  private static final TField LAST_MONTH_INSTALL_FIELD_DESC = new TField("lastMonthInstall", TType.I32, (short)39);
  private static final TField LAST_MONTH_BROWSER_FIELD_DESC = new TField("lastMonthBrowser", TType.I32, (short)40);
  private static final TField LAST_MONTH_ACTIVE_FIELD_DESC = new TField("lastMonthActive", TType.I32, (short)41);
  private static final TField DISPLAY_NAME_SEG_FIELD_DESC = new TField("displayNameSeg", TType.LIST, (short)50);
  private static final TField DESC_SEG_FIELD_DESC = new TField("descSeg", TType.LIST, (short)51);
  private static final TField BRIEF_SEG_FIELD_DESC = new TField("briefSeg", TType.LIST, (short)52);
  private static final TField COCLICK_TF_IDF_FIELD_DESC = new TField("coclickTfIdf", TType.LIST, (short)53);
  private static final TField APP_ACTIVE_RANK_FIELD_DESC = new TField("appActiveRank", TType.DOUBLE, (short)60);
  private static final TField APP_CDR_FIELD_DESC = new TField("appCdr", TType.DOUBLE, (short)61);
  private static final TField APP_DOWNLOAD_RANK_FIELD_DESC = new TField("appDownloadRank", TType.DOUBLE, (short)62);
  private static final TField APP_HOT_FIELD_DESC = new TField("appHot", TType.DOUBLE, (short)63);
  private static final TField APP_RANK_FIELD_DESC = new TField("appRank", TType.DOUBLE, (short)64);
  private static final TField FOLDER_TAGS_FIELD_DESC = new TField("folderTags", TType.LIST, (short)65);
  private static final TField GAME_ARPU_FIELD_DESC = new TField("gameArpu", TType.DOUBLE, (short)66);
  private static final TField GAME_CDR_FIELD_DESC = new TField("gameCdr", TType.DOUBLE, (short)67);
  private static final TField GAME_RANK_FIELD_DESC = new TField("gameRank", TType.DOUBLE, (short)68);
  private static final TField RATING_SCORE_FIELD_DESC = new TField("ratingScore", TType.DOUBLE, (short)69);
  private static final TField KEYWORDS_FIELD_DESC = new TField("keywords", TType.LIST, (short)70);
  private static final TField RELATED_TAGS_FIELD_DESC = new TField("relatedTags", TType.LIST, (short)71);
  private static final TField SEARCH_KEYWORDS_FIELD_DESC = new TField("searchKeywords", TType.LIST, (short)72);
  private static final TField PUBLISHER_FIELD_DESC = new TField("publisher", TType.STRING, (short)73);
  private static final TField WDJ_CATEGORY_FIELD_DESC = new TField("wdjCategory", TType.STRING, (short)74);
  private static final TField GOOGLE_CATES_FIELD_DESC = new TField("googleCates", TType.LIST, (short)80);
  private static final TField EMI_CATES_FIELD_DESC = new TField("emiCates", TType.LIST, (short)81);
  private static final TField TOPICS_FIELD_DESC = new TField("topics", TType.LIST, (short)83);
  private static final TField SIMILAR_APPS_FIELD_DESC = new TField("similarApps", TType.LIST, (short)90);
  private static final TField STORE_QUERIES_FIELD_DESC = new TField("storeQueries", TType.LIST, (short)91);
  private static final TField BROWSER_QUERIES_FIELD_DESC = new TField("browserQueries", TType.LIST, (short)92);
  private static final TField SPECIAL_WORDS_FIELD_DESC = new TField("specialWords", TType.LIST, (short)93);

  private long appId;
  private String packageName;
  private String displayName;
  private String level1CategoryName;
  private String level2CategoryName;
  private List<String> tags;
  private String desc;
  private String brief;
  private int developerAppCount;
  private long apkSize;
  private int star;
  private long rankOrder;
  private long rankOrderForPad;
  private int lastWeekUpdateCount;
  private int lastMonthUpdateCount;
  private int favoriteCount;
  private int feedbackCount;
  private int permissionCount;
  private long createTime;
  private int badCmt;
  private int goodCmt;
  private int ystdDownload;
  private int ystdInstall;
  private int ystdBrowser;
  private int ystdActive;
  private int lastWeekDownload;
  private int lastWeekInstall;
  private int lastWeekBrowser;
  private int lastWeekActive;
  private int lastMonthDownload;
  private int lastMonthInstall;
  private int lastMonthBrowser;
  private int lastMonthActive;
  private List<String> displayNameSeg;
  private List<String> descSeg;
  private List<String> briefSeg;
  private List<String> coclickTfIdf;
  private double appActiveRank;
  private double appCdr;
  private double appDownloadRank;
  private double appHot;
  private double appRank;
  private List<String> folderTags;
  private double gameArpu;
  private double gameCdr;
  private double gameRank;
  private double ratingScore;
  private List<String> keywords;
  private List<String> relatedTags;
  private List<String> searchKeywords;
  private String publisher;
  private String wdjCategory;
  private List<Cate> googleCates;
  private List<Cate> emiCates;
  private List<Cate> topics;
  private List<SimilarApp> similarApps;
  private List<StoreQuery> storeQueries;
  private List<BrowserQuery> browserQueries;
  private List<SpecialWord> specialWords;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    APP_ID((short)1, "appId"),
    PACKAGE_NAME((short)2, "packageName"),
    DISPLAY_NAME((short)3, "displayName"),
    LEVEL1_CATEGORY_NAME((short)5, "level1CategoryName"),
    LEVEL2_CATEGORY_NAME((short)6, "level2CategoryName"),
    TAGS((short)7, "tags"),
    DESC((short)8, "desc"),
    BRIEF((short)9, "brief"),
    DEVELOPER_APP_COUNT((short)10, "developerAppCount"),
    APK_SIZE((short)11, "apkSize"),
    STAR((short)12, "star"),
    RANK_ORDER((short)13, "rankOrder"),
    RANK_ORDER_FOR_PAD((short)14, "rankOrderForPad"),
    LAST_WEEK_UPDATE_COUNT((short)15, "lastWeekUpdateCount"),
    LAST_MONTH_UPDATE_COUNT((short)16, "lastMonthUpdateCount"),
    FAVORITE_COUNT((short)17, "favoriteCount"),
    FEEDBACK_COUNT((short)18, "feedbackCount"),
    PERMISSION_COUNT((short)19, "permissionCount"),
    CREATE_TIME((short)20, "createTime"),
    BAD_CMT((short)21, "badCmt"),
    GOOD_CMT((short)22, "goodCmt"),
    YSTD_DOWNLOAD((short)30, "ystdDownload"),
    YSTD_INSTALL((short)31, "ystdInstall"),
    YSTD_BROWSER((short)32, "ystdBrowser"),
    YSTD_ACTIVE((short)33, "ystdActive"),
    LAST_WEEK_DOWNLOAD((short)34, "lastWeekDownload"),
    LAST_WEEK_INSTALL((short)35, "lastWeekInstall"),
    LAST_WEEK_BROWSER((short)36, "lastWeekBrowser"),
    LAST_WEEK_ACTIVE((short)37, "lastWeekActive"),
    LAST_MONTH_DOWNLOAD((short)38, "lastMonthDownload"),
    LAST_MONTH_INSTALL((short)39, "lastMonthInstall"),
    LAST_MONTH_BROWSER((short)40, "lastMonthBrowser"),
    LAST_MONTH_ACTIVE((short)41, "lastMonthActive"),
    DISPLAY_NAME_SEG((short)50, "displayNameSeg"),
    DESC_SEG((short)51, "descSeg"),
    BRIEF_SEG((short)52, "briefSeg"),
    COCLICK_TF_IDF((short)53, "coclickTfIdf"),
    APP_ACTIVE_RANK((short)60, "appActiveRank"),
    APP_CDR((short)61, "appCdr"),
    APP_DOWNLOAD_RANK((short)62, "appDownloadRank"),
    APP_HOT((short)63, "appHot"),
    APP_RANK((short)64, "appRank"),
    FOLDER_TAGS((short)65, "folderTags"),
    GAME_ARPU((short)66, "gameArpu"),
    GAME_CDR((short)67, "gameCdr"),
    GAME_RANK((short)68, "gameRank"),
    RATING_SCORE((short)69, "ratingScore"),
    KEYWORDS((short)70, "keywords"),
    RELATED_TAGS((short)71, "relatedTags"),
    SEARCH_KEYWORDS((short)72, "searchKeywords"),
    PUBLISHER((short)73, "publisher"),
    WDJ_CATEGORY((short)74, "wdjCategory"),
    GOOGLE_CATES((short)80, "googleCates"),
    EMI_CATES((short)81, "emiCates"),
    TOPICS((short)83, "topics"),
    SIMILAR_APPS((short)90, "similarApps"),
    STORE_QUERIES((short)91, "storeQueries"),
    BROWSER_QUERIES((short)92, "browserQueries"),
    SPECIAL_WORDS((short)93, "specialWords");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // APP_ID
          return APP_ID;
        case 2: // PACKAGE_NAME
          return PACKAGE_NAME;
        case 3: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 5: // LEVEL1_CATEGORY_NAME
          return LEVEL1_CATEGORY_NAME;
        case 6: // LEVEL2_CATEGORY_NAME
          return LEVEL2_CATEGORY_NAME;
        case 7: // TAGS
          return TAGS;
        case 8: // DESC
          return DESC;
        case 9: // BRIEF
          return BRIEF;
        case 10: // DEVELOPER_APP_COUNT
          return DEVELOPER_APP_COUNT;
        case 11: // APK_SIZE
          return APK_SIZE;
        case 12: // STAR
          return STAR;
        case 13: // RANK_ORDER
          return RANK_ORDER;
        case 14: // RANK_ORDER_FOR_PAD
          return RANK_ORDER_FOR_PAD;
        case 15: // LAST_WEEK_UPDATE_COUNT
          return LAST_WEEK_UPDATE_COUNT;
        case 16: // LAST_MONTH_UPDATE_COUNT
          return LAST_MONTH_UPDATE_COUNT;
        case 17: // FAVORITE_COUNT
          return FAVORITE_COUNT;
        case 18: // FEEDBACK_COUNT
          return FEEDBACK_COUNT;
        case 19: // PERMISSION_COUNT
          return PERMISSION_COUNT;
        case 20: // CREATE_TIME
          return CREATE_TIME;
        case 21: // BAD_CMT
          return BAD_CMT;
        case 22: // GOOD_CMT
          return GOOD_CMT;
        case 30: // YSTD_DOWNLOAD
          return YSTD_DOWNLOAD;
        case 31: // YSTD_INSTALL
          return YSTD_INSTALL;
        case 32: // YSTD_BROWSER
          return YSTD_BROWSER;
        case 33: // YSTD_ACTIVE
          return YSTD_ACTIVE;
        case 34: // LAST_WEEK_DOWNLOAD
          return LAST_WEEK_DOWNLOAD;
        case 35: // LAST_WEEK_INSTALL
          return LAST_WEEK_INSTALL;
        case 36: // LAST_WEEK_BROWSER
          return LAST_WEEK_BROWSER;
        case 37: // LAST_WEEK_ACTIVE
          return LAST_WEEK_ACTIVE;
        case 38: // LAST_MONTH_DOWNLOAD
          return LAST_MONTH_DOWNLOAD;
        case 39: // LAST_MONTH_INSTALL
          return LAST_MONTH_INSTALL;
        case 40: // LAST_MONTH_BROWSER
          return LAST_MONTH_BROWSER;
        case 41: // LAST_MONTH_ACTIVE
          return LAST_MONTH_ACTIVE;
        case 50: // DISPLAY_NAME_SEG
          return DISPLAY_NAME_SEG;
        case 51: // DESC_SEG
          return DESC_SEG;
        case 52: // BRIEF_SEG
          return BRIEF_SEG;
        case 53: // COCLICK_TF_IDF
          return COCLICK_TF_IDF;
        case 60: // APP_ACTIVE_RANK
          return APP_ACTIVE_RANK;
        case 61: // APP_CDR
          return APP_CDR;
        case 62: // APP_DOWNLOAD_RANK
          return APP_DOWNLOAD_RANK;
        case 63: // APP_HOT
          return APP_HOT;
        case 64: // APP_RANK
          return APP_RANK;
        case 65: // FOLDER_TAGS
          return FOLDER_TAGS;
        case 66: // GAME_ARPU
          return GAME_ARPU;
        case 67: // GAME_CDR
          return GAME_CDR;
        case 68: // GAME_RANK
          return GAME_RANK;
        case 69: // RATING_SCORE
          return RATING_SCORE;
        case 70: // KEYWORDS
          return KEYWORDS;
        case 71: // RELATED_TAGS
          return RELATED_TAGS;
        case 72: // SEARCH_KEYWORDS
          return SEARCH_KEYWORDS;
        case 73: // PUBLISHER
          return PUBLISHER;
        case 74: // WDJ_CATEGORY
          return WDJ_CATEGORY;
        case 80: // GOOGLE_CATES
          return GOOGLE_CATES;
        case 81: // EMI_CATES
          return EMI_CATES;
        case 83: // TOPICS
          return TOPICS;
        case 90: // SIMILAR_APPS
          return SIMILAR_APPS;
        case 91: // STORE_QUERIES
          return STORE_QUERIES;
        case 92: // BROWSER_QUERIES
          return BROWSER_QUERIES;
        case 93: // SPECIAL_WORDS
          return SPECIAL_WORDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __APPID_ISSET_ID = 0;
  private static final int __DEVELOPERAPPCOUNT_ISSET_ID = 1;
  private static final int __APKSIZE_ISSET_ID = 2;
  private static final int __STAR_ISSET_ID = 3;
  private static final int __RANKORDER_ISSET_ID = 4;
  private static final int __RANKORDERFORPAD_ISSET_ID = 5;
  private static final int __LASTWEEKUPDATECOUNT_ISSET_ID = 6;
  private static final int __LASTMONTHUPDATECOUNT_ISSET_ID = 7;
  private static final int __FAVORITECOUNT_ISSET_ID = 8;
  private static final int __FEEDBACKCOUNT_ISSET_ID = 9;
  private static final int __PERMISSIONCOUNT_ISSET_ID = 10;
  private static final int __CREATETIME_ISSET_ID = 11;
  private static final int __BADCMT_ISSET_ID = 12;
  private static final int __GOODCMT_ISSET_ID = 13;
  private static final int __YSTDDOWNLOAD_ISSET_ID = 14;
  private static final int __YSTDINSTALL_ISSET_ID = 15;
  private static final int __YSTDBROWSER_ISSET_ID = 16;
  private static final int __YSTDACTIVE_ISSET_ID = 17;
  private static final int __LASTWEEKDOWNLOAD_ISSET_ID = 18;
  private static final int __LASTWEEKINSTALL_ISSET_ID = 19;
  private static final int __LASTWEEKBROWSER_ISSET_ID = 20;
  private static final int __LASTWEEKACTIVE_ISSET_ID = 21;
  private static final int __LASTMONTHDOWNLOAD_ISSET_ID = 22;
  private static final int __LASTMONTHINSTALL_ISSET_ID = 23;
  private static final int __LASTMONTHBROWSER_ISSET_ID = 24;
  private static final int __LASTMONTHACTIVE_ISSET_ID = 25;
  private static final int __APPACTIVERANK_ISSET_ID = 26;
  private static final int __APPCDR_ISSET_ID = 27;
  private static final int __APPDOWNLOADRANK_ISSET_ID = 28;
  private static final int __APPHOT_ISSET_ID = 29;
  private static final int __APPRANK_ISSET_ID = 30;
  private static final int __GAMEARPU_ISSET_ID = 31;
  private static final int __GAMECDR_ISSET_ID = 32;
  private static final int __GAMERANK_ISSET_ID = 33;
  private static final int __RATINGSCORE_ISSET_ID = 34;
  private BitSet __isset_bit_vector = new BitSet(35);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APP_ID, new FieldMetaData("appId", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.PACKAGE_NAME, new FieldMetaData("packageName", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.DISPLAY_NAME, new FieldMetaData("displayName", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LEVEL1_CATEGORY_NAME, new FieldMetaData("level1CategoryName", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.LEVEL2_CATEGORY_NAME, new FieldMetaData("level2CategoryName", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.TAGS, new FieldMetaData("tags", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.DESC, new FieldMetaData("desc", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.BRIEF, new FieldMetaData("brief", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.DEVELOPER_APP_COUNT, new FieldMetaData("developerAppCount", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.APK_SIZE, new FieldMetaData("apkSize", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.STAR, new FieldMetaData("star", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.RANK_ORDER, new FieldMetaData("rankOrder", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.RANK_ORDER_FOR_PAD, new FieldMetaData("rankOrderForPad", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.LAST_WEEK_UPDATE_COUNT, new FieldMetaData("lastWeekUpdateCount", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_MONTH_UPDATE_COUNT, new FieldMetaData("lastMonthUpdateCount", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.FAVORITE_COUNT, new FieldMetaData("favoriteCount", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.FEEDBACK_COUNT, new FieldMetaData("feedbackCount", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.PERMISSION_COUNT, new FieldMetaData("permissionCount", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new FieldMetaData("createTime", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.BAD_CMT, new FieldMetaData("badCmt", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.GOOD_CMT, new FieldMetaData("goodCmt", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.YSTD_DOWNLOAD, new FieldMetaData("ystdDownload", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.YSTD_INSTALL, new FieldMetaData("ystdInstall", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.YSTD_BROWSER, new FieldMetaData("ystdBrowser", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.YSTD_ACTIVE, new FieldMetaData("ystdActive", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_WEEK_DOWNLOAD, new FieldMetaData("lastWeekDownload", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_WEEK_INSTALL, new FieldMetaData("lastWeekInstall", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_WEEK_BROWSER, new FieldMetaData("lastWeekBrowser", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_WEEK_ACTIVE, new FieldMetaData("lastWeekActive", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_MONTH_DOWNLOAD, new FieldMetaData("lastMonthDownload", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_MONTH_INSTALL, new FieldMetaData("lastMonthInstall", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_MONTH_BROWSER, new FieldMetaData("lastMonthBrowser", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.LAST_MONTH_ACTIVE, new FieldMetaData("lastMonthActive", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.DISPLAY_NAME_SEG, new FieldMetaData("displayNameSeg", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.DESC_SEG, new FieldMetaData("descSeg", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.BRIEF_SEG, new FieldMetaData("briefSeg", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.COCLICK_TF_IDF, new FieldMetaData("coclickTfIdf", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.APP_ACTIVE_RANK, new FieldMetaData("appActiveRank", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.APP_CDR, new FieldMetaData("appCdr", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.APP_DOWNLOAD_RANK, new FieldMetaData("appDownloadRank", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.APP_HOT, new FieldMetaData("appHot", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.APP_RANK, new FieldMetaData("appRank", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.FOLDER_TAGS, new FieldMetaData("folderTags", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.GAME_ARPU, new FieldMetaData("gameArpu", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.GAME_CDR, new FieldMetaData("gameCdr", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.GAME_RANK, new FieldMetaData("gameRank", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.RATING_SCORE, new FieldMetaData("ratingScore", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.DOUBLE)));
    tmpMap.put(_Fields.KEYWORDS, new FieldMetaData("keywords", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.RELATED_TAGS, new FieldMetaData("relatedTags", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.SEARCH_KEYWORDS, new FieldMetaData("searchKeywords", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.PUBLISHER, new FieldMetaData("publisher", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.WDJ_CATEGORY, new FieldMetaData("wdjCategory", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.GOOGLE_CATES, new FieldMetaData("googleCates", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, Cate.class))));
    tmpMap.put(_Fields.EMI_CATES, new FieldMetaData("emiCates", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, Cate.class))));
    tmpMap.put(_Fields.TOPICS, new FieldMetaData("topics", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, Cate.class))));
    tmpMap.put(_Fields.SIMILAR_APPS, new FieldMetaData("similarApps", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, SimilarApp.class))));
    tmpMap.put(_Fields.STORE_QUERIES, new FieldMetaData("storeQueries", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, StoreQuery.class))));
    tmpMap.put(_Fields.BROWSER_QUERIES, new FieldMetaData("browserQueries", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, BrowserQuery.class))));
    tmpMap.put(_Fields.SPECIAL_WORDS, new FieldMetaData("specialWords", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, SpecialWord.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(AppExt.class, metaDataMap);
  }

  public AppExt() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AppExt(AppExt other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.appId = other.appId;
    if (other.isSetPackageName()) {
      this.packageName = other.packageName;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetLevel1CategoryName()) {
      this.level1CategoryName = other.level1CategoryName;
    }
    if (other.isSetLevel2CategoryName()) {
      this.level2CategoryName = other.level2CategoryName;
    }
    if (other.isSetTags()) {
      List<String> __this__tags = new ArrayList<String>();
      for (String other_element : other.tags) {
        __this__tags.add(other_element);
      }
      this.tags = __this__tags;
    }
    if (other.isSetDesc()) {
      this.desc = other.desc;
    }
    if (other.isSetBrief()) {
      this.brief = other.brief;
    }
    this.developerAppCount = other.developerAppCount;
    this.apkSize = other.apkSize;
    this.star = other.star;
    this.rankOrder = other.rankOrder;
    this.rankOrderForPad = other.rankOrderForPad;
    this.lastWeekUpdateCount = other.lastWeekUpdateCount;
    this.lastMonthUpdateCount = other.lastMonthUpdateCount;
    this.favoriteCount = other.favoriteCount;
    this.feedbackCount = other.feedbackCount;
    this.permissionCount = other.permissionCount;
    this.createTime = other.createTime;
    this.badCmt = other.badCmt;
    this.goodCmt = other.goodCmt;
    this.ystdDownload = other.ystdDownload;
    this.ystdInstall = other.ystdInstall;
    this.ystdBrowser = other.ystdBrowser;
    this.ystdActive = other.ystdActive;
    this.lastWeekDownload = other.lastWeekDownload;
    this.lastWeekInstall = other.lastWeekInstall;
    this.lastWeekBrowser = other.lastWeekBrowser;
    this.lastWeekActive = other.lastWeekActive;
    this.lastMonthDownload = other.lastMonthDownload;
    this.lastMonthInstall = other.lastMonthInstall;
    this.lastMonthBrowser = other.lastMonthBrowser;
    this.lastMonthActive = other.lastMonthActive;
    if (other.isSetDisplayNameSeg()) {
      List<String> __this__displayNameSeg = new ArrayList<String>();
      for (String other_element : other.displayNameSeg) {
        __this__displayNameSeg.add(other_element);
      }
      this.displayNameSeg = __this__displayNameSeg;
    }
    if (other.isSetDescSeg()) {
      List<String> __this__descSeg = new ArrayList<String>();
      for (String other_element : other.descSeg) {
        __this__descSeg.add(other_element);
      }
      this.descSeg = __this__descSeg;
    }
    if (other.isSetBriefSeg()) {
      List<String> __this__briefSeg = new ArrayList<String>();
      for (String other_element : other.briefSeg) {
        __this__briefSeg.add(other_element);
      }
      this.briefSeg = __this__briefSeg;
    }
    if (other.isSetCoclickTfIdf()) {
      List<String> __this__coclickTfIdf = new ArrayList<String>();
      for (String other_element : other.coclickTfIdf) {
        __this__coclickTfIdf.add(other_element);
      }
      this.coclickTfIdf = __this__coclickTfIdf;
    }
    this.appActiveRank = other.appActiveRank;
    this.appCdr = other.appCdr;
    this.appDownloadRank = other.appDownloadRank;
    this.appHot = other.appHot;
    this.appRank = other.appRank;
    if (other.isSetFolderTags()) {
      List<String> __this__folderTags = new ArrayList<String>();
      for (String other_element : other.folderTags) {
        __this__folderTags.add(other_element);
      }
      this.folderTags = __this__folderTags;
    }
    this.gameArpu = other.gameArpu;
    this.gameCdr = other.gameCdr;
    this.gameRank = other.gameRank;
    this.ratingScore = other.ratingScore;
    if (other.isSetKeywords()) {
      List<String> __this__keywords = new ArrayList<String>();
      for (String other_element : other.keywords) {
        __this__keywords.add(other_element);
      }
      this.keywords = __this__keywords;
    }
    if (other.isSetRelatedTags()) {
      List<String> __this__relatedTags = new ArrayList<String>();
      for (String other_element : other.relatedTags) {
        __this__relatedTags.add(other_element);
      }
      this.relatedTags = __this__relatedTags;
    }
    if (other.isSetSearchKeywords()) {
      List<String> __this__searchKeywords = new ArrayList<String>();
      for (String other_element : other.searchKeywords) {
        __this__searchKeywords.add(other_element);
      }
      this.searchKeywords = __this__searchKeywords;
    }
    if (other.isSetPublisher()) {
      this.publisher = other.publisher;
    }
    if (other.isSetWdjCategory()) {
      this.wdjCategory = other.wdjCategory;
    }
    if (other.isSetGoogleCates()) {
      List<Cate> __this__googleCates = new ArrayList<Cate>();
      for (Cate other_element : other.googleCates) {
        __this__googleCates.add(new Cate(other_element));
      }
      this.googleCates = __this__googleCates;
    }
    if (other.isSetEmiCates()) {
      List<Cate> __this__emiCates = new ArrayList<Cate>();
      for (Cate other_element : other.emiCates) {
        __this__emiCates.add(new Cate(other_element));
      }
      this.emiCates = __this__emiCates;
    }
    if (other.isSetTopics()) {
      List<Cate> __this__topics = new ArrayList<Cate>();
      for (Cate other_element : other.topics) {
        __this__topics.add(new Cate(other_element));
      }
      this.topics = __this__topics;
    }
    if (other.isSetSimilarApps()) {
      List<SimilarApp> __this__similarApps = new ArrayList<SimilarApp>();
      for (SimilarApp other_element : other.similarApps) {
        __this__similarApps.add(new SimilarApp(other_element));
      }
      this.similarApps = __this__similarApps;
    }
    if (other.isSetStoreQueries()) {
      List<StoreQuery> __this__storeQueries = new ArrayList<StoreQuery>();
      for (StoreQuery other_element : other.storeQueries) {
        __this__storeQueries.add(new StoreQuery(other_element));
      }
      this.storeQueries = __this__storeQueries;
    }
    if (other.isSetBrowserQueries()) {
      List<BrowserQuery> __this__browserQueries = new ArrayList<BrowserQuery>();
      for (BrowserQuery other_element : other.browserQueries) {
        __this__browserQueries.add(new BrowserQuery(other_element));
      }
      this.browserQueries = __this__browserQueries;
    }
    if (other.isSetSpecialWords()) {
      List<SpecialWord> __this__specialWords = new ArrayList<SpecialWord>();
      for (SpecialWord other_element : other.specialWords) {
        __this__specialWords.add(new SpecialWord(other_element));
      }
      this.specialWords = __this__specialWords;
    }
  }

  public AppExt deepCopy() {
    return new AppExt(this);
  }

  @Override
  public void clear() {
    setAppIdIsSet(false);
    this.appId = 0;
    this.packageName = null;
    this.displayName = null;
    this.level1CategoryName = null;
    this.level2CategoryName = null;
    this.tags = null;
    this.desc = null;
    this.brief = null;
    setDeveloperAppCountIsSet(false);
    this.developerAppCount = 0;
    setApkSizeIsSet(false);
    this.apkSize = 0;
    setStarIsSet(false);
    this.star = 0;
    setRankOrderIsSet(false);
    this.rankOrder = 0;
    setRankOrderForPadIsSet(false);
    this.rankOrderForPad = 0;
    setLastWeekUpdateCountIsSet(false);
    this.lastWeekUpdateCount = 0;
    setLastMonthUpdateCountIsSet(false);
    this.lastMonthUpdateCount = 0;
    setFavoriteCountIsSet(false);
    this.favoriteCount = 0;
    setFeedbackCountIsSet(false);
    this.feedbackCount = 0;
    setPermissionCountIsSet(false);
    this.permissionCount = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setBadCmtIsSet(false);
    this.badCmt = 0;
    setGoodCmtIsSet(false);
    this.goodCmt = 0;
    setYstdDownloadIsSet(false);
    this.ystdDownload = 0;
    setYstdInstallIsSet(false);
    this.ystdInstall = 0;
    setYstdBrowserIsSet(false);
    this.ystdBrowser = 0;
    setYstdActiveIsSet(false);
    this.ystdActive = 0;
    setLastWeekDownloadIsSet(false);
    this.lastWeekDownload = 0;
    setLastWeekInstallIsSet(false);
    this.lastWeekInstall = 0;
    setLastWeekBrowserIsSet(false);
    this.lastWeekBrowser = 0;
    setLastWeekActiveIsSet(false);
    this.lastWeekActive = 0;
    setLastMonthDownloadIsSet(false);
    this.lastMonthDownload = 0;
    setLastMonthInstallIsSet(false);
    this.lastMonthInstall = 0;
    setLastMonthBrowserIsSet(false);
    this.lastMonthBrowser = 0;
    setLastMonthActiveIsSet(false);
    this.lastMonthActive = 0;
    this.displayNameSeg = null;
    this.descSeg = null;
    this.briefSeg = null;
    this.coclickTfIdf = null;
    setAppActiveRankIsSet(false);
    this.appActiveRank = 0.0;
    setAppCdrIsSet(false);
    this.appCdr = 0.0;
    setAppDownloadRankIsSet(false);
    this.appDownloadRank = 0.0;
    setAppHotIsSet(false);
    this.appHot = 0.0;
    setAppRankIsSet(false);
    this.appRank = 0.0;
    this.folderTags = null;
    setGameArpuIsSet(false);
    this.gameArpu = 0.0;
    setGameCdrIsSet(false);
    this.gameCdr = 0.0;
    setGameRankIsSet(false);
    this.gameRank = 0.0;
    setRatingScoreIsSet(false);
    this.ratingScore = 0.0;
    this.keywords = null;
    this.relatedTags = null;
    this.searchKeywords = null;
    this.publisher = null;
    this.wdjCategory = null;
    this.googleCates = null;
    this.emiCates = null;
    this.topics = null;
    this.similarApps = null;
    this.storeQueries = null;
    this.browserQueries = null;
    this.specialWords = null;
  }

  public long getAppId() {
    return this.appId;
  }

  public AppExt setAppId(long appId) {
    this.appId = appId;
    setAppIdIsSet(true);
    return this;
  }

  public void unsetAppId() {
    __isset_bit_vector.clear(__APPID_ISSET_ID);
  }

  /** Returns true if field appId is set (has been asigned a value) and false otherwise */
  public boolean isSetAppId() {
    return __isset_bit_vector.get(__APPID_ISSET_ID);
  }

  public void setAppIdIsSet(boolean value) {
    __isset_bit_vector.set(__APPID_ISSET_ID, value);
  }

  public String getPackageName() {
    return this.packageName;
  }

  public AppExt setPackageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

  public void unsetPackageName() {
    this.packageName = null;
  }

  /** Returns true if field packageName is set (has been asigned a value) and false otherwise */
  public boolean isSetPackageName() {
    return this.packageName != null;
  }

  public void setPackageNameIsSet(boolean value) {
    if (!value) {
      this.packageName = null;
    }
  }

  public String getDisplayName() {
    return this.displayName;
  }

  public AppExt setDisplayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been asigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public String getLevel1CategoryName() {
    return this.level1CategoryName;
  }

  public AppExt setLevel1CategoryName(String level1CategoryName) {
    this.level1CategoryName = level1CategoryName;
    return this;
  }

  public void unsetLevel1CategoryName() {
    this.level1CategoryName = null;
  }

  /** Returns true if field level1CategoryName is set (has been asigned a value) and false otherwise */
  public boolean isSetLevel1CategoryName() {
    return this.level1CategoryName != null;
  }

  public void setLevel1CategoryNameIsSet(boolean value) {
    if (!value) {
      this.level1CategoryName = null;
    }
  }

  public String getLevel2CategoryName() {
    return this.level2CategoryName;
  }

  public AppExt setLevel2CategoryName(String level2CategoryName) {
    this.level2CategoryName = level2CategoryName;
    return this;
  }

  public void unsetLevel2CategoryName() {
    this.level2CategoryName = null;
  }

  /** Returns true if field level2CategoryName is set (has been asigned a value) and false otherwise */
  public boolean isSetLevel2CategoryName() {
    return this.level2CategoryName != null;
  }

  public void setLevel2CategoryNameIsSet(boolean value) {
    if (!value) {
      this.level2CategoryName = null;
    }
  }

  public int getTagsSize() {
    return (this.tags == null) ? 0 : this.tags.size();
  }

  public java.util.Iterator<String> getTagsIterator() {
    return (this.tags == null) ? null : this.tags.iterator();
  }

  public void addToTags(String elem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(elem);
  }

  public List<String> getTags() {
    return this.tags;
  }

  public AppExt setTags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public void unsetTags() {
    this.tags = null;
  }

  /** Returns true if field tags is set (has been asigned a value) and false otherwise */
  public boolean isSetTags() {
    return this.tags != null;
  }

  public void setTagsIsSet(boolean value) {
    if (!value) {
      this.tags = null;
    }
  }

  public String getDesc() {
    return this.desc;
  }

  public AppExt setDesc(String desc) {
    this.desc = desc;
    return this;
  }

  public void unsetDesc() {
    this.desc = null;
  }

  /** Returns true if field desc is set (has been asigned a value) and false otherwise */
  public boolean isSetDesc() {
    return this.desc != null;
  }

  public void setDescIsSet(boolean value) {
    if (!value) {
      this.desc = null;
    }
  }

  public String getBrief() {
    return this.brief;
  }

  public AppExt setBrief(String brief) {
    this.brief = brief;
    return this;
  }

  public void unsetBrief() {
    this.brief = null;
  }

  /** Returns true if field brief is set (has been asigned a value) and false otherwise */
  public boolean isSetBrief() {
    return this.brief != null;
  }

  public void setBriefIsSet(boolean value) {
    if (!value) {
      this.brief = null;
    }
  }

  public int getDeveloperAppCount() {
    return this.developerAppCount;
  }

  public AppExt setDeveloperAppCount(int developerAppCount) {
    this.developerAppCount = developerAppCount;
    setDeveloperAppCountIsSet(true);
    return this;
  }

  public void unsetDeveloperAppCount() {
    __isset_bit_vector.clear(__DEVELOPERAPPCOUNT_ISSET_ID);
  }

  /** Returns true if field developerAppCount is set (has been asigned a value) and false otherwise */
  public boolean isSetDeveloperAppCount() {
    return __isset_bit_vector.get(__DEVELOPERAPPCOUNT_ISSET_ID);
  }

  public void setDeveloperAppCountIsSet(boolean value) {
    __isset_bit_vector.set(__DEVELOPERAPPCOUNT_ISSET_ID, value);
  }

  public long getApkSize() {
    return this.apkSize;
  }

  public AppExt setApkSize(long apkSize) {
    this.apkSize = apkSize;
    setApkSizeIsSet(true);
    return this;
  }

  public void unsetApkSize() {
    __isset_bit_vector.clear(__APKSIZE_ISSET_ID);
  }

  /** Returns true if field apkSize is set (has been asigned a value) and false otherwise */
  public boolean isSetApkSize() {
    return __isset_bit_vector.get(__APKSIZE_ISSET_ID);
  }

  public void setApkSizeIsSet(boolean value) {
    __isset_bit_vector.set(__APKSIZE_ISSET_ID, value);
  }

  public int getStar() {
    return this.star;
  }

  public AppExt setStar(int star) {
    this.star = star;
    setStarIsSet(true);
    return this;
  }

  public void unsetStar() {
    __isset_bit_vector.clear(__STAR_ISSET_ID);
  }

  /** Returns true if field star is set (has been asigned a value) and false otherwise */
  public boolean isSetStar() {
    return __isset_bit_vector.get(__STAR_ISSET_ID);
  }

  public void setStarIsSet(boolean value) {
    __isset_bit_vector.set(__STAR_ISSET_ID, value);
  }

  public long getRankOrder() {
    return this.rankOrder;
  }

  public AppExt setRankOrder(long rankOrder) {
    this.rankOrder = rankOrder;
    setRankOrderIsSet(true);
    return this;
  }

  public void unsetRankOrder() {
    __isset_bit_vector.clear(__RANKORDER_ISSET_ID);
  }

  /** Returns true if field rankOrder is set (has been asigned a value) and false otherwise */
  public boolean isSetRankOrder() {
    return __isset_bit_vector.get(__RANKORDER_ISSET_ID);
  }

  public void setRankOrderIsSet(boolean value) {
    __isset_bit_vector.set(__RANKORDER_ISSET_ID, value);
  }

  public long getRankOrderForPad() {
    return this.rankOrderForPad;
  }

  public AppExt setRankOrderForPad(long rankOrderForPad) {
    this.rankOrderForPad = rankOrderForPad;
    setRankOrderForPadIsSet(true);
    return this;
  }

  public void unsetRankOrderForPad() {
    __isset_bit_vector.clear(__RANKORDERFORPAD_ISSET_ID);
  }

  /** Returns true if field rankOrderForPad is set (has been asigned a value) and false otherwise */
  public boolean isSetRankOrderForPad() {
    return __isset_bit_vector.get(__RANKORDERFORPAD_ISSET_ID);
  }

  public void setRankOrderForPadIsSet(boolean value) {
    __isset_bit_vector.set(__RANKORDERFORPAD_ISSET_ID, value);
  }

  public int getLastWeekUpdateCount() {
    return this.lastWeekUpdateCount;
  }

  public AppExt setLastWeekUpdateCount(int lastWeekUpdateCount) {
    this.lastWeekUpdateCount = lastWeekUpdateCount;
    setLastWeekUpdateCountIsSet(true);
    return this;
  }

  public void unsetLastWeekUpdateCount() {
    __isset_bit_vector.clear(__LASTWEEKUPDATECOUNT_ISSET_ID);
  }

  /** Returns true if field lastWeekUpdateCount is set (has been asigned a value) and false otherwise */
  public boolean isSetLastWeekUpdateCount() {
    return __isset_bit_vector.get(__LASTWEEKUPDATECOUNT_ISSET_ID);
  }

  public void setLastWeekUpdateCountIsSet(boolean value) {
    __isset_bit_vector.set(__LASTWEEKUPDATECOUNT_ISSET_ID, value);
  }

  public int getLastMonthUpdateCount() {
    return this.lastMonthUpdateCount;
  }

  public AppExt setLastMonthUpdateCount(int lastMonthUpdateCount) {
    this.lastMonthUpdateCount = lastMonthUpdateCount;
    setLastMonthUpdateCountIsSet(true);
    return this;
  }

  public void unsetLastMonthUpdateCount() {
    __isset_bit_vector.clear(__LASTMONTHUPDATECOUNT_ISSET_ID);
  }

  /** Returns true if field lastMonthUpdateCount is set (has been asigned a value) and false otherwise */
  public boolean isSetLastMonthUpdateCount() {
    return __isset_bit_vector.get(__LASTMONTHUPDATECOUNT_ISSET_ID);
  }

  public void setLastMonthUpdateCountIsSet(boolean value) {
    __isset_bit_vector.set(__LASTMONTHUPDATECOUNT_ISSET_ID, value);
  }

  public int getFavoriteCount() {
    return this.favoriteCount;
  }

  public AppExt setFavoriteCount(int favoriteCount) {
    this.favoriteCount = favoriteCount;
    setFavoriteCountIsSet(true);
    return this;
  }

  public void unsetFavoriteCount() {
    __isset_bit_vector.clear(__FAVORITECOUNT_ISSET_ID);
  }

  /** Returns true if field favoriteCount is set (has been asigned a value) and false otherwise */
  public boolean isSetFavoriteCount() {
    return __isset_bit_vector.get(__FAVORITECOUNT_ISSET_ID);
  }

  public void setFavoriteCountIsSet(boolean value) {
    __isset_bit_vector.set(__FAVORITECOUNT_ISSET_ID, value);
  }

  public int getFeedbackCount() {
    return this.feedbackCount;
  }

  public AppExt setFeedbackCount(int feedbackCount) {
    this.feedbackCount = feedbackCount;
    setFeedbackCountIsSet(true);
    return this;
  }

  public void unsetFeedbackCount() {
    __isset_bit_vector.clear(__FEEDBACKCOUNT_ISSET_ID);
  }

  /** Returns true if field feedbackCount is set (has been asigned a value) and false otherwise */
  public boolean isSetFeedbackCount() {
    return __isset_bit_vector.get(__FEEDBACKCOUNT_ISSET_ID);
  }

  public void setFeedbackCountIsSet(boolean value) {
    __isset_bit_vector.set(__FEEDBACKCOUNT_ISSET_ID, value);
  }

  public int getPermissionCount() {
    return this.permissionCount;
  }

  public AppExt setPermissionCount(int permissionCount) {
    this.permissionCount = permissionCount;
    setPermissionCountIsSet(true);
    return this;
  }

  public void unsetPermissionCount() {
    __isset_bit_vector.clear(__PERMISSIONCOUNT_ISSET_ID);
  }

  /** Returns true if field permissionCount is set (has been asigned a value) and false otherwise */
  public boolean isSetPermissionCount() {
    return __isset_bit_vector.get(__PERMISSIONCOUNT_ISSET_ID);
  }

  public void setPermissionCountIsSet(boolean value) {
    __isset_bit_vector.set(__PERMISSIONCOUNT_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public AppExt setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bit_vector.clear(__CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been asigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return __isset_bit_vector.get(__CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bit_vector.set(__CREATETIME_ISSET_ID, value);
  }

  public int getBadCmt() {
    return this.badCmt;
  }

  public AppExt setBadCmt(int badCmt) {
    this.badCmt = badCmt;
    setBadCmtIsSet(true);
    return this;
  }

  public void unsetBadCmt() {
    __isset_bit_vector.clear(__BADCMT_ISSET_ID);
  }

  /** Returns true if field badCmt is set (has been asigned a value) and false otherwise */
  public boolean isSetBadCmt() {
    return __isset_bit_vector.get(__BADCMT_ISSET_ID);
  }

  public void setBadCmtIsSet(boolean value) {
    __isset_bit_vector.set(__BADCMT_ISSET_ID, value);
  }

  public int getGoodCmt() {
    return this.goodCmt;
  }

  public AppExt setGoodCmt(int goodCmt) {
    this.goodCmt = goodCmt;
    setGoodCmtIsSet(true);
    return this;
  }

  public void unsetGoodCmt() {
    __isset_bit_vector.clear(__GOODCMT_ISSET_ID);
  }

  /** Returns true if field goodCmt is set (has been asigned a value) and false otherwise */
  public boolean isSetGoodCmt() {
    return __isset_bit_vector.get(__GOODCMT_ISSET_ID);
  }

  public void setGoodCmtIsSet(boolean value) {
    __isset_bit_vector.set(__GOODCMT_ISSET_ID, value);
  }

  public int getYstdDownload() {
    return this.ystdDownload;
  }

  public AppExt setYstdDownload(int ystdDownload) {
    this.ystdDownload = ystdDownload;
    setYstdDownloadIsSet(true);
    return this;
  }

  public void unsetYstdDownload() {
    __isset_bit_vector.clear(__YSTDDOWNLOAD_ISSET_ID);
  }

  /** Returns true if field ystdDownload is set (has been asigned a value) and false otherwise */
  public boolean isSetYstdDownload() {
    return __isset_bit_vector.get(__YSTDDOWNLOAD_ISSET_ID);
  }

  public void setYstdDownloadIsSet(boolean value) {
    __isset_bit_vector.set(__YSTDDOWNLOAD_ISSET_ID, value);
  }

  public int getYstdInstall() {
    return this.ystdInstall;
  }

  public AppExt setYstdInstall(int ystdInstall) {
    this.ystdInstall = ystdInstall;
    setYstdInstallIsSet(true);
    return this;
  }

  public void unsetYstdInstall() {
    __isset_bit_vector.clear(__YSTDINSTALL_ISSET_ID);
  }

  /** Returns true if field ystdInstall is set (has been asigned a value) and false otherwise */
  public boolean isSetYstdInstall() {
    return __isset_bit_vector.get(__YSTDINSTALL_ISSET_ID);
  }

  public void setYstdInstallIsSet(boolean value) {
    __isset_bit_vector.set(__YSTDINSTALL_ISSET_ID, value);
  }

  public int getYstdBrowser() {
    return this.ystdBrowser;
  }

  public AppExt setYstdBrowser(int ystdBrowser) {
    this.ystdBrowser = ystdBrowser;
    setYstdBrowserIsSet(true);
    return this;
  }

  public void unsetYstdBrowser() {
    __isset_bit_vector.clear(__YSTDBROWSER_ISSET_ID);
  }

  /** Returns true if field ystdBrowser is set (has been asigned a value) and false otherwise */
  public boolean isSetYstdBrowser() {
    return __isset_bit_vector.get(__YSTDBROWSER_ISSET_ID);
  }

  public void setYstdBrowserIsSet(boolean value) {
    __isset_bit_vector.set(__YSTDBROWSER_ISSET_ID, value);
  }

  public int getYstdActive() {
    return this.ystdActive;
  }

  public AppExt setYstdActive(int ystdActive) {
    this.ystdActive = ystdActive;
    setYstdActiveIsSet(true);
    return this;
  }

  public void unsetYstdActive() {
    __isset_bit_vector.clear(__YSTDACTIVE_ISSET_ID);
  }

  /** Returns true if field ystdActive is set (has been asigned a value) and false otherwise */
  public boolean isSetYstdActive() {
    return __isset_bit_vector.get(__YSTDACTIVE_ISSET_ID);
  }

  public void setYstdActiveIsSet(boolean value) {
    __isset_bit_vector.set(__YSTDACTIVE_ISSET_ID, value);
  }

  public int getLastWeekDownload() {
    return this.lastWeekDownload;
  }

  public AppExt setLastWeekDownload(int lastWeekDownload) {
    this.lastWeekDownload = lastWeekDownload;
    setLastWeekDownloadIsSet(true);
    return this;
  }

  public void unsetLastWeekDownload() {
    __isset_bit_vector.clear(__LASTWEEKDOWNLOAD_ISSET_ID);
  }

  /** Returns true if field lastWeekDownload is set (has been asigned a value) and false otherwise */
  public boolean isSetLastWeekDownload() {
    return __isset_bit_vector.get(__LASTWEEKDOWNLOAD_ISSET_ID);
  }

  public void setLastWeekDownloadIsSet(boolean value) {
    __isset_bit_vector.set(__LASTWEEKDOWNLOAD_ISSET_ID, value);
  }

  public int getLastWeekInstall() {
    return this.lastWeekInstall;
  }

  public AppExt setLastWeekInstall(int lastWeekInstall) {
    this.lastWeekInstall = lastWeekInstall;
    setLastWeekInstallIsSet(true);
    return this;
  }

  public void unsetLastWeekInstall() {
    __isset_bit_vector.clear(__LASTWEEKINSTALL_ISSET_ID);
  }

  /** Returns true if field lastWeekInstall is set (has been asigned a value) and false otherwise */
  public boolean isSetLastWeekInstall() {
    return __isset_bit_vector.get(__LASTWEEKINSTALL_ISSET_ID);
  }

  public void setLastWeekInstallIsSet(boolean value) {
    __isset_bit_vector.set(__LASTWEEKINSTALL_ISSET_ID, value);
  }

  public int getLastWeekBrowser() {
    return this.lastWeekBrowser;
  }

  public AppExt setLastWeekBrowser(int lastWeekBrowser) {
    this.lastWeekBrowser = lastWeekBrowser;
    setLastWeekBrowserIsSet(true);
    return this;
  }

  public void unsetLastWeekBrowser() {
    __isset_bit_vector.clear(__LASTWEEKBROWSER_ISSET_ID);
  }

  /** Returns true if field lastWeekBrowser is set (has been asigned a value) and false otherwise */
  public boolean isSetLastWeekBrowser() {
    return __isset_bit_vector.get(__LASTWEEKBROWSER_ISSET_ID);
  }

  public void setLastWeekBrowserIsSet(boolean value) {
    __isset_bit_vector.set(__LASTWEEKBROWSER_ISSET_ID, value);
  }

  public int getLastWeekActive() {
    return this.lastWeekActive;
  }

  public AppExt setLastWeekActive(int lastWeekActive) {
    this.lastWeekActive = lastWeekActive;
    setLastWeekActiveIsSet(true);
    return this;
  }

  public void unsetLastWeekActive() {
    __isset_bit_vector.clear(__LASTWEEKACTIVE_ISSET_ID);
  }

  /** Returns true if field lastWeekActive is set (has been asigned a value) and false otherwise */
  public boolean isSetLastWeekActive() {
    return __isset_bit_vector.get(__LASTWEEKACTIVE_ISSET_ID);
  }

  public void setLastWeekActiveIsSet(boolean value) {
    __isset_bit_vector.set(__LASTWEEKACTIVE_ISSET_ID, value);
  }

  public int getLastMonthDownload() {
    return this.lastMonthDownload;
  }

  public AppExt setLastMonthDownload(int lastMonthDownload) {
    this.lastMonthDownload = lastMonthDownload;
    setLastMonthDownloadIsSet(true);
    return this;
  }

  public void unsetLastMonthDownload() {
    __isset_bit_vector.clear(__LASTMONTHDOWNLOAD_ISSET_ID);
  }

  /** Returns true if field lastMonthDownload is set (has been asigned a value) and false otherwise */
  public boolean isSetLastMonthDownload() {
    return __isset_bit_vector.get(__LASTMONTHDOWNLOAD_ISSET_ID);
  }

  public void setLastMonthDownloadIsSet(boolean value) {
    __isset_bit_vector.set(__LASTMONTHDOWNLOAD_ISSET_ID, value);
  }

  public int getLastMonthInstall() {
    return this.lastMonthInstall;
  }

  public AppExt setLastMonthInstall(int lastMonthInstall) {
    this.lastMonthInstall = lastMonthInstall;
    setLastMonthInstallIsSet(true);
    return this;
  }

  public void unsetLastMonthInstall() {
    __isset_bit_vector.clear(__LASTMONTHINSTALL_ISSET_ID);
  }

  /** Returns true if field lastMonthInstall is set (has been asigned a value) and false otherwise */
  public boolean isSetLastMonthInstall() {
    return __isset_bit_vector.get(__LASTMONTHINSTALL_ISSET_ID);
  }

  public void setLastMonthInstallIsSet(boolean value) {
    __isset_bit_vector.set(__LASTMONTHINSTALL_ISSET_ID, value);
  }

  public int getLastMonthBrowser() {
    return this.lastMonthBrowser;
  }

  public AppExt setLastMonthBrowser(int lastMonthBrowser) {
    this.lastMonthBrowser = lastMonthBrowser;
    setLastMonthBrowserIsSet(true);
    return this;
  }

  public void unsetLastMonthBrowser() {
    __isset_bit_vector.clear(__LASTMONTHBROWSER_ISSET_ID);
  }

  /** Returns true if field lastMonthBrowser is set (has been asigned a value) and false otherwise */
  public boolean isSetLastMonthBrowser() {
    return __isset_bit_vector.get(__LASTMONTHBROWSER_ISSET_ID);
  }

  public void setLastMonthBrowserIsSet(boolean value) {
    __isset_bit_vector.set(__LASTMONTHBROWSER_ISSET_ID, value);
  }

  public int getLastMonthActive() {
    return this.lastMonthActive;
  }

  public AppExt setLastMonthActive(int lastMonthActive) {
    this.lastMonthActive = lastMonthActive;
    setLastMonthActiveIsSet(true);
    return this;
  }

  public void unsetLastMonthActive() {
    __isset_bit_vector.clear(__LASTMONTHACTIVE_ISSET_ID);
  }

  /** Returns true if field lastMonthActive is set (has been asigned a value) and false otherwise */
  public boolean isSetLastMonthActive() {
    return __isset_bit_vector.get(__LASTMONTHACTIVE_ISSET_ID);
  }

  public void setLastMonthActiveIsSet(boolean value) {
    __isset_bit_vector.set(__LASTMONTHACTIVE_ISSET_ID, value);
  }

  public int getDisplayNameSegSize() {
    return (this.displayNameSeg == null) ? 0 : this.displayNameSeg.size();
  }

  public java.util.Iterator<String> getDisplayNameSegIterator() {
    return (this.displayNameSeg == null) ? null : this.displayNameSeg.iterator();
  }

  public void addToDisplayNameSeg(String elem) {
    if (this.displayNameSeg == null) {
      this.displayNameSeg = new ArrayList<String>();
    }
    this.displayNameSeg.add(elem);
  }

  public List<String> getDisplayNameSeg() {
    return this.displayNameSeg;
  }

  public AppExt setDisplayNameSeg(List<String> displayNameSeg) {
    this.displayNameSeg = displayNameSeg;
    return this;
  }

  public void unsetDisplayNameSeg() {
    this.displayNameSeg = null;
  }

  /** Returns true if field displayNameSeg is set (has been asigned a value) and false otherwise */
  public boolean isSetDisplayNameSeg() {
    return this.displayNameSeg != null;
  }

  public void setDisplayNameSegIsSet(boolean value) {
    if (!value) {
      this.displayNameSeg = null;
    }
  }

  public int getDescSegSize() {
    return (this.descSeg == null) ? 0 : this.descSeg.size();
  }

  public java.util.Iterator<String> getDescSegIterator() {
    return (this.descSeg == null) ? null : this.descSeg.iterator();
  }

  public void addToDescSeg(String elem) {
    if (this.descSeg == null) {
      this.descSeg = new ArrayList<String>();
    }
    this.descSeg.add(elem);
  }

  public List<String> getDescSeg() {
    return this.descSeg;
  }

  public AppExt setDescSeg(List<String> descSeg) {
    this.descSeg = descSeg;
    return this;
  }

  public void unsetDescSeg() {
    this.descSeg = null;
  }

  /** Returns true if field descSeg is set (has been asigned a value) and false otherwise */
  public boolean isSetDescSeg() {
    return this.descSeg != null;
  }

  public void setDescSegIsSet(boolean value) {
    if (!value) {
      this.descSeg = null;
    }
  }

  public int getBriefSegSize() {
    return (this.briefSeg == null) ? 0 : this.briefSeg.size();
  }

  public java.util.Iterator<String> getBriefSegIterator() {
    return (this.briefSeg == null) ? null : this.briefSeg.iterator();
  }

  public void addToBriefSeg(String elem) {
    if (this.briefSeg == null) {
      this.briefSeg = new ArrayList<String>();
    }
    this.briefSeg.add(elem);
  }

  public List<String> getBriefSeg() {
    return this.briefSeg;
  }

  public AppExt setBriefSeg(List<String> briefSeg) {
    this.briefSeg = briefSeg;
    return this;
  }

  public void unsetBriefSeg() {
    this.briefSeg = null;
  }

  /** Returns true if field briefSeg is set (has been asigned a value) and false otherwise */
  public boolean isSetBriefSeg() {
    return this.briefSeg != null;
  }

  public void setBriefSegIsSet(boolean value) {
    if (!value) {
      this.briefSeg = null;
    }
  }

  public int getCoclickTfIdfSize() {
    return (this.coclickTfIdf == null) ? 0 : this.coclickTfIdf.size();
  }

  public java.util.Iterator<String> getCoclickTfIdfIterator() {
    return (this.coclickTfIdf == null) ? null : this.coclickTfIdf.iterator();
  }

  public void addToCoclickTfIdf(String elem) {
    if (this.coclickTfIdf == null) {
      this.coclickTfIdf = new ArrayList<String>();
    }
    this.coclickTfIdf.add(elem);
  }

  public List<String> getCoclickTfIdf() {
    return this.coclickTfIdf;
  }

  public AppExt setCoclickTfIdf(List<String> coclickTfIdf) {
    this.coclickTfIdf = coclickTfIdf;
    return this;
  }

  public void unsetCoclickTfIdf() {
    this.coclickTfIdf = null;
  }

  /** Returns true if field coclickTfIdf is set (has been asigned a value) and false otherwise */
  public boolean isSetCoclickTfIdf() {
    return this.coclickTfIdf != null;
  }

  public void setCoclickTfIdfIsSet(boolean value) {
    if (!value) {
      this.coclickTfIdf = null;
    }
  }

  public double getAppActiveRank() {
    return this.appActiveRank;
  }

  public AppExt setAppActiveRank(double appActiveRank) {
    this.appActiveRank = appActiveRank;
    setAppActiveRankIsSet(true);
    return this;
  }

  public void unsetAppActiveRank() {
    __isset_bit_vector.clear(__APPACTIVERANK_ISSET_ID);
  }

  /** Returns true if field appActiveRank is set (has been asigned a value) and false otherwise */
  public boolean isSetAppActiveRank() {
    return __isset_bit_vector.get(__APPACTIVERANK_ISSET_ID);
  }

  public void setAppActiveRankIsSet(boolean value) {
    __isset_bit_vector.set(__APPACTIVERANK_ISSET_ID, value);
  }

  public double getAppCdr() {
    return this.appCdr;
  }

  public AppExt setAppCdr(double appCdr) {
    this.appCdr = appCdr;
    setAppCdrIsSet(true);
    return this;
  }

  public void unsetAppCdr() {
    __isset_bit_vector.clear(__APPCDR_ISSET_ID);
  }

  /** Returns true if field appCdr is set (has been asigned a value) and false otherwise */
  public boolean isSetAppCdr() {
    return __isset_bit_vector.get(__APPCDR_ISSET_ID);
  }

  public void setAppCdrIsSet(boolean value) {
    __isset_bit_vector.set(__APPCDR_ISSET_ID, value);
  }

  public double getAppDownloadRank() {
    return this.appDownloadRank;
  }

  public AppExt setAppDownloadRank(double appDownloadRank) {
    this.appDownloadRank = appDownloadRank;
    setAppDownloadRankIsSet(true);
    return this;
  }

  public void unsetAppDownloadRank() {
    __isset_bit_vector.clear(__APPDOWNLOADRANK_ISSET_ID);
  }

  /** Returns true if field appDownloadRank is set (has been asigned a value) and false otherwise */
  public boolean isSetAppDownloadRank() {
    return __isset_bit_vector.get(__APPDOWNLOADRANK_ISSET_ID);
  }

  public void setAppDownloadRankIsSet(boolean value) {
    __isset_bit_vector.set(__APPDOWNLOADRANK_ISSET_ID, value);
  }

  public double getAppHot() {
    return this.appHot;
  }

  public AppExt setAppHot(double appHot) {
    this.appHot = appHot;
    setAppHotIsSet(true);
    return this;
  }

  public void unsetAppHot() {
    __isset_bit_vector.clear(__APPHOT_ISSET_ID);
  }

  /** Returns true if field appHot is set (has been asigned a value) and false otherwise */
  public boolean isSetAppHot() {
    return __isset_bit_vector.get(__APPHOT_ISSET_ID);
  }

  public void setAppHotIsSet(boolean value) {
    __isset_bit_vector.set(__APPHOT_ISSET_ID, value);
  }

  public double getAppRank() {
    return this.appRank;
  }

  public AppExt setAppRank(double appRank) {
    this.appRank = appRank;
    setAppRankIsSet(true);
    return this;
  }

  public void unsetAppRank() {
    __isset_bit_vector.clear(__APPRANK_ISSET_ID);
  }

  /** Returns true if field appRank is set (has been asigned a value) and false otherwise */
  public boolean isSetAppRank() {
    return __isset_bit_vector.get(__APPRANK_ISSET_ID);
  }

  public void setAppRankIsSet(boolean value) {
    __isset_bit_vector.set(__APPRANK_ISSET_ID, value);
  }

  public int getFolderTagsSize() {
    return (this.folderTags == null) ? 0 : this.folderTags.size();
  }

  public java.util.Iterator<String> getFolderTagsIterator() {
    return (this.folderTags == null) ? null : this.folderTags.iterator();
  }

  public void addToFolderTags(String elem) {
    if (this.folderTags == null) {
      this.folderTags = new ArrayList<String>();
    }
    this.folderTags.add(elem);
  }

  public List<String> getFolderTags() {
    return this.folderTags;
  }

  public AppExt setFolderTags(List<String> folderTags) {
    this.folderTags = folderTags;
    return this;
  }

  public void unsetFolderTags() {
    this.folderTags = null;
  }

  /** Returns true if field folderTags is set (has been asigned a value) and false otherwise */
  public boolean isSetFolderTags() {
    return this.folderTags != null;
  }

  public void setFolderTagsIsSet(boolean value) {
    if (!value) {
      this.folderTags = null;
    }
  }

  public double getGameArpu() {
    return this.gameArpu;
  }

  public AppExt setGameArpu(double gameArpu) {
    this.gameArpu = gameArpu;
    setGameArpuIsSet(true);
    return this;
  }

  public void unsetGameArpu() {
    __isset_bit_vector.clear(__GAMEARPU_ISSET_ID);
  }

  /** Returns true if field gameArpu is set (has been asigned a value) and false otherwise */
  public boolean isSetGameArpu() {
    return __isset_bit_vector.get(__GAMEARPU_ISSET_ID);
  }

  public void setGameArpuIsSet(boolean value) {
    __isset_bit_vector.set(__GAMEARPU_ISSET_ID, value);
  }

  public double getGameCdr() {
    return this.gameCdr;
  }

  public AppExt setGameCdr(double gameCdr) {
    this.gameCdr = gameCdr;
    setGameCdrIsSet(true);
    return this;
  }

  public void unsetGameCdr() {
    __isset_bit_vector.clear(__GAMECDR_ISSET_ID);
  }

  /** Returns true if field gameCdr is set (has been asigned a value) and false otherwise */
  public boolean isSetGameCdr() {
    return __isset_bit_vector.get(__GAMECDR_ISSET_ID);
  }

  public void setGameCdrIsSet(boolean value) {
    __isset_bit_vector.set(__GAMECDR_ISSET_ID, value);
  }

  public double getGameRank() {
    return this.gameRank;
  }

  public AppExt setGameRank(double gameRank) {
    this.gameRank = gameRank;
    setGameRankIsSet(true);
    return this;
  }

  public void unsetGameRank() {
    __isset_bit_vector.clear(__GAMERANK_ISSET_ID);
  }

  /** Returns true if field gameRank is set (has been asigned a value) and false otherwise */
  public boolean isSetGameRank() {
    return __isset_bit_vector.get(__GAMERANK_ISSET_ID);
  }

  public void setGameRankIsSet(boolean value) {
    __isset_bit_vector.set(__GAMERANK_ISSET_ID, value);
  }

  public double getRatingScore() {
    return this.ratingScore;
  }

  public AppExt setRatingScore(double ratingScore) {
    this.ratingScore = ratingScore;
    setRatingScoreIsSet(true);
    return this;
  }

  public void unsetRatingScore() {
    __isset_bit_vector.clear(__RATINGSCORE_ISSET_ID);
  }

  /** Returns true if field ratingScore is set (has been asigned a value) and false otherwise */
  public boolean isSetRatingScore() {
    return __isset_bit_vector.get(__RATINGSCORE_ISSET_ID);
  }

  public void setRatingScoreIsSet(boolean value) {
    __isset_bit_vector.set(__RATINGSCORE_ISSET_ID, value);
  }

  public int getKeywordsSize() {
    return (this.keywords == null) ? 0 : this.keywords.size();
  }

  public java.util.Iterator<String> getKeywordsIterator() {
    return (this.keywords == null) ? null : this.keywords.iterator();
  }

  public void addToKeywords(String elem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<String>();
    }
    this.keywords.add(elem);
  }

  public List<String> getKeywords() {
    return this.keywords;
  }

  public AppExt setKeywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public void unsetKeywords() {
    this.keywords = null;
  }

  /** Returns true if field keywords is set (has been asigned a value) and false otherwise */
  public boolean isSetKeywords() {
    return this.keywords != null;
  }

  public void setKeywordsIsSet(boolean value) {
    if (!value) {
      this.keywords = null;
    }
  }

  public int getRelatedTagsSize() {
    return (this.relatedTags == null) ? 0 : this.relatedTags.size();
  }

  public java.util.Iterator<String> getRelatedTagsIterator() {
    return (this.relatedTags == null) ? null : this.relatedTags.iterator();
  }

  public void addToRelatedTags(String elem) {
    if (this.relatedTags == null) {
      this.relatedTags = new ArrayList<String>();
    }
    this.relatedTags.add(elem);
  }

  public List<String> getRelatedTags() {
    return this.relatedTags;
  }

  public AppExt setRelatedTags(List<String> relatedTags) {
    this.relatedTags = relatedTags;
    return this;
  }

  public void unsetRelatedTags() {
    this.relatedTags = null;
  }

  /** Returns true if field relatedTags is set (has been asigned a value) and false otherwise */
  public boolean isSetRelatedTags() {
    return this.relatedTags != null;
  }

  public void setRelatedTagsIsSet(boolean value) {
    if (!value) {
      this.relatedTags = null;
    }
  }

  public int getSearchKeywordsSize() {
    return (this.searchKeywords == null) ? 0 : this.searchKeywords.size();
  }

  public java.util.Iterator<String> getSearchKeywordsIterator() {
    return (this.searchKeywords == null) ? null : this.searchKeywords.iterator();
  }

  public void addToSearchKeywords(String elem) {
    if (this.searchKeywords == null) {
      this.searchKeywords = new ArrayList<String>();
    }
    this.searchKeywords.add(elem);
  }

  public List<String> getSearchKeywords() {
    return this.searchKeywords;
  }

  public AppExt setSearchKeywords(List<String> searchKeywords) {
    this.searchKeywords = searchKeywords;
    return this;
  }

  public void unsetSearchKeywords() {
    this.searchKeywords = null;
  }

  /** Returns true if field searchKeywords is set (has been asigned a value) and false otherwise */
  public boolean isSetSearchKeywords() {
    return this.searchKeywords != null;
  }

  public void setSearchKeywordsIsSet(boolean value) {
    if (!value) {
      this.searchKeywords = null;
    }
  }

  public String getPublisher() {
    return this.publisher;
  }

  public AppExt setPublisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

  public void unsetPublisher() {
    this.publisher = null;
  }

  /** Returns true if field publisher is set (has been asigned a value) and false otherwise */
  public boolean isSetPublisher() {
    return this.publisher != null;
  }

  public void setPublisherIsSet(boolean value) {
    if (!value) {
      this.publisher = null;
    }
  }

  public String getWdjCategory() {
    return this.wdjCategory;
  }

  public AppExt setWdjCategory(String wdjCategory) {
    this.wdjCategory = wdjCategory;
    return this;
  }

  public void unsetWdjCategory() {
    this.wdjCategory = null;
  }

  /** Returns true if field wdjCategory is set (has been asigned a value) and false otherwise */
  public boolean isSetWdjCategory() {
    return this.wdjCategory != null;
  }

  public void setWdjCategoryIsSet(boolean value) {
    if (!value) {
      this.wdjCategory = null;
    }
  }

  public int getGoogleCatesSize() {
    return (this.googleCates == null) ? 0 : this.googleCates.size();
  }

  public java.util.Iterator<Cate> getGoogleCatesIterator() {
    return (this.googleCates == null) ? null : this.googleCates.iterator();
  }

  public void addToGoogleCates(Cate elem) {
    if (this.googleCates == null) {
      this.googleCates = new ArrayList<Cate>();
    }
    this.googleCates.add(elem);
  }

  public List<Cate> getGoogleCates() {
    return this.googleCates;
  }

  public AppExt setGoogleCates(List<Cate> googleCates) {
    this.googleCates = googleCates;
    return this;
  }

  public void unsetGoogleCates() {
    this.googleCates = null;
  }

  /** Returns true if field googleCates is set (has been asigned a value) and false otherwise */
  public boolean isSetGoogleCates() {
    return this.googleCates != null;
  }

  public void setGoogleCatesIsSet(boolean value) {
    if (!value) {
      this.googleCates = null;
    }
  }

  public int getEmiCatesSize() {
    return (this.emiCates == null) ? 0 : this.emiCates.size();
  }

  public java.util.Iterator<Cate> getEmiCatesIterator() {
    return (this.emiCates == null) ? null : this.emiCates.iterator();
  }

  public void addToEmiCates(Cate elem) {
    if (this.emiCates == null) {
      this.emiCates = new ArrayList<Cate>();
    }
    this.emiCates.add(elem);
  }

  public List<Cate> getEmiCates() {
    return this.emiCates;
  }

  public AppExt setEmiCates(List<Cate> emiCates) {
    this.emiCates = emiCates;
    return this;
  }

  public void unsetEmiCates() {
    this.emiCates = null;
  }

  /** Returns true if field emiCates is set (has been asigned a value) and false otherwise */
  public boolean isSetEmiCates() {
    return this.emiCates != null;
  }

  public void setEmiCatesIsSet(boolean value) {
    if (!value) {
      this.emiCates = null;
    }
  }

  public int getTopicsSize() {
    return (this.topics == null) ? 0 : this.topics.size();
  }

  public java.util.Iterator<Cate> getTopicsIterator() {
    return (this.topics == null) ? null : this.topics.iterator();
  }

  public void addToTopics(Cate elem) {
    if (this.topics == null) {
      this.topics = new ArrayList<Cate>();
    }
    this.topics.add(elem);
  }

  public List<Cate> getTopics() {
    return this.topics;
  }

  public AppExt setTopics(List<Cate> topics) {
    this.topics = topics;
    return this;
  }

  public void unsetTopics() {
    this.topics = null;
  }

  /** Returns true if field topics is set (has been asigned a value) and false otherwise */
  public boolean isSetTopics() {
    return this.topics != null;
  }

  public void setTopicsIsSet(boolean value) {
    if (!value) {
      this.topics = null;
    }
  }

  public int getSimilarAppsSize() {
    return (this.similarApps == null) ? 0 : this.similarApps.size();
  }

  public java.util.Iterator<SimilarApp> getSimilarAppsIterator() {
    return (this.similarApps == null) ? null : this.similarApps.iterator();
  }

  public void addToSimilarApps(SimilarApp elem) {
    if (this.similarApps == null) {
      this.similarApps = new ArrayList<SimilarApp>();
    }
    this.similarApps.add(elem);
  }

  public List<SimilarApp> getSimilarApps() {
    return this.similarApps;
  }

  public AppExt setSimilarApps(List<SimilarApp> similarApps) {
    this.similarApps = similarApps;
    return this;
  }

  public void unsetSimilarApps() {
    this.similarApps = null;
  }

  /** Returns true if field similarApps is set (has been asigned a value) and false otherwise */
  public boolean isSetSimilarApps() {
    return this.similarApps != null;
  }

  public void setSimilarAppsIsSet(boolean value) {
    if (!value) {
      this.similarApps = null;
    }
  }

  public int getStoreQueriesSize() {
    return (this.storeQueries == null) ? 0 : this.storeQueries.size();
  }

  public java.util.Iterator<StoreQuery> getStoreQueriesIterator() {
    return (this.storeQueries == null) ? null : this.storeQueries.iterator();
  }

  public void addToStoreQueries(StoreQuery elem) {
    if (this.storeQueries == null) {
      this.storeQueries = new ArrayList<StoreQuery>();
    }
    this.storeQueries.add(elem);
  }

  public List<StoreQuery> getStoreQueries() {
    return this.storeQueries;
  }

  public AppExt setStoreQueries(List<StoreQuery> storeQueries) {
    this.storeQueries = storeQueries;
    return this;
  }

  public void unsetStoreQueries() {
    this.storeQueries = null;
  }

  /** Returns true if field storeQueries is set (has been asigned a value) and false otherwise */
  public boolean isSetStoreQueries() {
    return this.storeQueries != null;
  }

  public void setStoreQueriesIsSet(boolean value) {
    if (!value) {
      this.storeQueries = null;
    }
  }

  public int getBrowserQueriesSize() {
    return (this.browserQueries == null) ? 0 : this.browserQueries.size();
  }

  public java.util.Iterator<BrowserQuery> getBrowserQueriesIterator() {
    return (this.browserQueries == null) ? null : this.browserQueries.iterator();
  }

  public void addToBrowserQueries(BrowserQuery elem) {
    if (this.browserQueries == null) {
      this.browserQueries = new ArrayList<BrowserQuery>();
    }
    this.browserQueries.add(elem);
  }

  public List<BrowserQuery> getBrowserQueries() {
    return this.browserQueries;
  }

  public AppExt setBrowserQueries(List<BrowserQuery> browserQueries) {
    this.browserQueries = browserQueries;
    return this;
  }

  public void unsetBrowserQueries() {
    this.browserQueries = null;
  }

  /** Returns true if field browserQueries is set (has been asigned a value) and false otherwise */
  public boolean isSetBrowserQueries() {
    return this.browserQueries != null;
  }

  public void setBrowserQueriesIsSet(boolean value) {
    if (!value) {
      this.browserQueries = null;
    }
  }

  public int getSpecialWordsSize() {
    return (this.specialWords == null) ? 0 : this.specialWords.size();
  }

  public java.util.Iterator<SpecialWord> getSpecialWordsIterator() {
    return (this.specialWords == null) ? null : this.specialWords.iterator();
  }

  public void addToSpecialWords(SpecialWord elem) {
    if (this.specialWords == null) {
      this.specialWords = new ArrayList<SpecialWord>();
    }
    this.specialWords.add(elem);
  }

  public List<SpecialWord> getSpecialWords() {
    return this.specialWords;
  }

  public AppExt setSpecialWords(List<SpecialWord> specialWords) {
    this.specialWords = specialWords;
    return this;
  }

  public void unsetSpecialWords() {
    this.specialWords = null;
  }

  /** Returns true if field specialWords is set (has been asigned a value) and false otherwise */
  public boolean isSetSpecialWords() {
    return this.specialWords != null;
  }

  public void setSpecialWordsIsSet(boolean value) {
    if (!value) {
      this.specialWords = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case APP_ID:
      if (value == null) {
        unsetAppId();
      } else {
        setAppId((Long)value);
      }
      break;

    case PACKAGE_NAME:
      if (value == null) {
        unsetPackageName();
      } else {
        setPackageName((String)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((String)value);
      }
      break;

    case LEVEL1_CATEGORY_NAME:
      if (value == null) {
        unsetLevel1CategoryName();
      } else {
        setLevel1CategoryName((String)value);
      }
      break;

    case LEVEL2_CATEGORY_NAME:
      if (value == null) {
        unsetLevel2CategoryName();
      } else {
        setLevel2CategoryName((String)value);
      }
      break;

    case TAGS:
      if (value == null) {
        unsetTags();
      } else {
        setTags((List<String>)value);
      }
      break;

    case DESC:
      if (value == null) {
        unsetDesc();
      } else {
        setDesc((String)value);
      }
      break;

    case BRIEF:
      if (value == null) {
        unsetBrief();
      } else {
        setBrief((String)value);
      }
      break;

    case DEVELOPER_APP_COUNT:
      if (value == null) {
        unsetDeveloperAppCount();
      } else {
        setDeveloperAppCount((Integer)value);
      }
      break;

    case APK_SIZE:
      if (value == null) {
        unsetApkSize();
      } else {
        setApkSize((Long)value);
      }
      break;

    case STAR:
      if (value == null) {
        unsetStar();
      } else {
        setStar((Integer)value);
      }
      break;

    case RANK_ORDER:
      if (value == null) {
        unsetRankOrder();
      } else {
        setRankOrder((Long)value);
      }
      break;

    case RANK_ORDER_FOR_PAD:
      if (value == null) {
        unsetRankOrderForPad();
      } else {
        setRankOrderForPad((Long)value);
      }
      break;

    case LAST_WEEK_UPDATE_COUNT:
      if (value == null) {
        unsetLastWeekUpdateCount();
      } else {
        setLastWeekUpdateCount((Integer)value);
      }
      break;

    case LAST_MONTH_UPDATE_COUNT:
      if (value == null) {
        unsetLastMonthUpdateCount();
      } else {
        setLastMonthUpdateCount((Integer)value);
      }
      break;

    case FAVORITE_COUNT:
      if (value == null) {
        unsetFavoriteCount();
      } else {
        setFavoriteCount((Integer)value);
      }
      break;

    case FEEDBACK_COUNT:
      if (value == null) {
        unsetFeedbackCount();
      } else {
        setFeedbackCount((Integer)value);
      }
      break;

    case PERMISSION_COUNT:
      if (value == null) {
        unsetPermissionCount();
      } else {
        setPermissionCount((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case BAD_CMT:
      if (value == null) {
        unsetBadCmt();
      } else {
        setBadCmt((Integer)value);
      }
      break;

    case GOOD_CMT:
      if (value == null) {
        unsetGoodCmt();
      } else {
        setGoodCmt((Integer)value);
      }
      break;

    case YSTD_DOWNLOAD:
      if (value == null) {
        unsetYstdDownload();
      } else {
        setYstdDownload((Integer)value);
      }
      break;

    case YSTD_INSTALL:
      if (value == null) {
        unsetYstdInstall();
      } else {
        setYstdInstall((Integer)value);
      }
      break;

    case YSTD_BROWSER:
      if (value == null) {
        unsetYstdBrowser();
      } else {
        setYstdBrowser((Integer)value);
      }
      break;

    case YSTD_ACTIVE:
      if (value == null) {
        unsetYstdActive();
      } else {
        setYstdActive((Integer)value);
      }
      break;

    case LAST_WEEK_DOWNLOAD:
      if (value == null) {
        unsetLastWeekDownload();
      } else {
        setLastWeekDownload((Integer)value);
      }
      break;

    case LAST_WEEK_INSTALL:
      if (value == null) {
        unsetLastWeekInstall();
      } else {
        setLastWeekInstall((Integer)value);
      }
      break;

    case LAST_WEEK_BROWSER:
      if (value == null) {
        unsetLastWeekBrowser();
      } else {
        setLastWeekBrowser((Integer)value);
      }
      break;

    case LAST_WEEK_ACTIVE:
      if (value == null) {
        unsetLastWeekActive();
      } else {
        setLastWeekActive((Integer)value);
      }
      break;

    case LAST_MONTH_DOWNLOAD:
      if (value == null) {
        unsetLastMonthDownload();
      } else {
        setLastMonthDownload((Integer)value);
      }
      break;

    case LAST_MONTH_INSTALL:
      if (value == null) {
        unsetLastMonthInstall();
      } else {
        setLastMonthInstall((Integer)value);
      }
      break;

    case LAST_MONTH_BROWSER:
      if (value == null) {
        unsetLastMonthBrowser();
      } else {
        setLastMonthBrowser((Integer)value);
      }
      break;

    case LAST_MONTH_ACTIVE:
      if (value == null) {
        unsetLastMonthActive();
      } else {
        setLastMonthActive((Integer)value);
      }
      break;

    case DISPLAY_NAME_SEG:
      if (value == null) {
        unsetDisplayNameSeg();
      } else {
        setDisplayNameSeg((List<String>)value);
      }
      break;

    case DESC_SEG:
      if (value == null) {
        unsetDescSeg();
      } else {
        setDescSeg((List<String>)value);
      }
      break;

    case BRIEF_SEG:
      if (value == null) {
        unsetBriefSeg();
      } else {
        setBriefSeg((List<String>)value);
      }
      break;

    case COCLICK_TF_IDF:
      if (value == null) {
        unsetCoclickTfIdf();
      } else {
        setCoclickTfIdf((List<String>)value);
      }
      break;

    case APP_ACTIVE_RANK:
      if (value == null) {
        unsetAppActiveRank();
      } else {
        setAppActiveRank((Double)value);
      }
      break;

    case APP_CDR:
      if (value == null) {
        unsetAppCdr();
      } else {
        setAppCdr((Double)value);
      }
      break;

    case APP_DOWNLOAD_RANK:
      if (value == null) {
        unsetAppDownloadRank();
      } else {
        setAppDownloadRank((Double)value);
      }
      break;

    case APP_HOT:
      if (value == null) {
        unsetAppHot();
      } else {
        setAppHot((Double)value);
      }
      break;

    case APP_RANK:
      if (value == null) {
        unsetAppRank();
      } else {
        setAppRank((Double)value);
      }
      break;

    case FOLDER_TAGS:
      if (value == null) {
        unsetFolderTags();
      } else {
        setFolderTags((List<String>)value);
      }
      break;

    case GAME_ARPU:
      if (value == null) {
        unsetGameArpu();
      } else {
        setGameArpu((Double)value);
      }
      break;

    case GAME_CDR:
      if (value == null) {
        unsetGameCdr();
      } else {
        setGameCdr((Double)value);
      }
      break;

    case GAME_RANK:
      if (value == null) {
        unsetGameRank();
      } else {
        setGameRank((Double)value);
      }
      break;

    case RATING_SCORE:
      if (value == null) {
        unsetRatingScore();
      } else {
        setRatingScore((Double)value);
      }
      break;

    case KEYWORDS:
      if (value == null) {
        unsetKeywords();
      } else {
        setKeywords((List<String>)value);
      }
      break;

    case RELATED_TAGS:
      if (value == null) {
        unsetRelatedTags();
      } else {
        setRelatedTags((List<String>)value);
      }
      break;

    case SEARCH_KEYWORDS:
      if (value == null) {
        unsetSearchKeywords();
      } else {
        setSearchKeywords((List<String>)value);
      }
      break;

    case PUBLISHER:
      if (value == null) {
        unsetPublisher();
      } else {
        setPublisher((String)value);
      }
      break;

    case WDJ_CATEGORY:
      if (value == null) {
        unsetWdjCategory();
      } else {
        setWdjCategory((String)value);
      }
      break;

    case GOOGLE_CATES:
      if (value == null) {
        unsetGoogleCates();
      } else {
        setGoogleCates((List<Cate>)value);
      }
      break;

    case EMI_CATES:
      if (value == null) {
        unsetEmiCates();
      } else {
        setEmiCates((List<Cate>)value);
      }
      break;

    case TOPICS:
      if (value == null) {
        unsetTopics();
      } else {
        setTopics((List<Cate>)value);
      }
      break;

    case SIMILAR_APPS:
      if (value == null) {
        unsetSimilarApps();
      } else {
        setSimilarApps((List<SimilarApp>)value);
      }
      break;

    case STORE_QUERIES:
      if (value == null) {
        unsetStoreQueries();
      } else {
        setStoreQueries((List<StoreQuery>)value);
      }
      break;

    case BROWSER_QUERIES:
      if (value == null) {
        unsetBrowserQueries();
      } else {
        setBrowserQueries((List<BrowserQuery>)value);
      }
      break;

    case SPECIAL_WORDS:
      if (value == null) {
        unsetSpecialWords();
      } else {
        setSpecialWords((List<SpecialWord>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case APP_ID:
      return new Long(getAppId());

    case PACKAGE_NAME:
      return getPackageName();

    case DISPLAY_NAME:
      return getDisplayName();

    case LEVEL1_CATEGORY_NAME:
      return getLevel1CategoryName();

    case LEVEL2_CATEGORY_NAME:
      return getLevel2CategoryName();

    case TAGS:
      return getTags();

    case DESC:
      return getDesc();

    case BRIEF:
      return getBrief();

    case DEVELOPER_APP_COUNT:
      return new Integer(getDeveloperAppCount());

    case APK_SIZE:
      return new Long(getApkSize());

    case STAR:
      return new Integer(getStar());

    case RANK_ORDER:
      return new Long(getRankOrder());

    case RANK_ORDER_FOR_PAD:
      return new Long(getRankOrderForPad());

    case LAST_WEEK_UPDATE_COUNT:
      return new Integer(getLastWeekUpdateCount());

    case LAST_MONTH_UPDATE_COUNT:
      return new Integer(getLastMonthUpdateCount());

    case FAVORITE_COUNT:
      return new Integer(getFavoriteCount());

    case FEEDBACK_COUNT:
      return new Integer(getFeedbackCount());

    case PERMISSION_COUNT:
      return new Integer(getPermissionCount());

    case CREATE_TIME:
      return new Long(getCreateTime());

    case BAD_CMT:
      return new Integer(getBadCmt());

    case GOOD_CMT:
      return new Integer(getGoodCmt());

    case YSTD_DOWNLOAD:
      return new Integer(getYstdDownload());

    case YSTD_INSTALL:
      return new Integer(getYstdInstall());

    case YSTD_BROWSER:
      return new Integer(getYstdBrowser());

    case YSTD_ACTIVE:
      return new Integer(getYstdActive());

    case LAST_WEEK_DOWNLOAD:
      return new Integer(getLastWeekDownload());

    case LAST_WEEK_INSTALL:
      return new Integer(getLastWeekInstall());

    case LAST_WEEK_BROWSER:
      return new Integer(getLastWeekBrowser());

    case LAST_WEEK_ACTIVE:
      return new Integer(getLastWeekActive());

    case LAST_MONTH_DOWNLOAD:
      return new Integer(getLastMonthDownload());

    case LAST_MONTH_INSTALL:
      return new Integer(getLastMonthInstall());

    case LAST_MONTH_BROWSER:
      return new Integer(getLastMonthBrowser());

    case LAST_MONTH_ACTIVE:
      return new Integer(getLastMonthActive());

    case DISPLAY_NAME_SEG:
      return getDisplayNameSeg();

    case DESC_SEG:
      return getDescSeg();

    case BRIEF_SEG:
      return getBriefSeg();

    case COCLICK_TF_IDF:
      return getCoclickTfIdf();

    case APP_ACTIVE_RANK:
      return new Double(getAppActiveRank());

    case APP_CDR:
      return new Double(getAppCdr());

    case APP_DOWNLOAD_RANK:
      return new Double(getAppDownloadRank());

    case APP_HOT:
      return new Double(getAppHot());

    case APP_RANK:
      return new Double(getAppRank());

    case FOLDER_TAGS:
      return getFolderTags();

    case GAME_ARPU:
      return new Double(getGameArpu());

    case GAME_CDR:
      return new Double(getGameCdr());

    case GAME_RANK:
      return new Double(getGameRank());

    case RATING_SCORE:
      return new Double(getRatingScore());

    case KEYWORDS:
      return getKeywords();

    case RELATED_TAGS:
      return getRelatedTags();

    case SEARCH_KEYWORDS:
      return getSearchKeywords();

    case PUBLISHER:
      return getPublisher();

    case WDJ_CATEGORY:
      return getWdjCategory();

    case GOOGLE_CATES:
      return getGoogleCates();

    case EMI_CATES:
      return getEmiCates();

    case TOPICS:
      return getTopics();

    case SIMILAR_APPS:
      return getSimilarApps();

    case STORE_QUERIES:
      return getStoreQueries();

    case BROWSER_QUERIES:
      return getBrowserQueries();

    case SPECIAL_WORDS:
      return getSpecialWords();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case APP_ID:
      return isSetAppId();
    case PACKAGE_NAME:
      return isSetPackageName();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case LEVEL1_CATEGORY_NAME:
      return isSetLevel1CategoryName();
    case LEVEL2_CATEGORY_NAME:
      return isSetLevel2CategoryName();
    case TAGS:
      return isSetTags();
    case DESC:
      return isSetDesc();
    case BRIEF:
      return isSetBrief();
    case DEVELOPER_APP_COUNT:
      return isSetDeveloperAppCount();
    case APK_SIZE:
      return isSetApkSize();
    case STAR:
      return isSetStar();
    case RANK_ORDER:
      return isSetRankOrder();
    case RANK_ORDER_FOR_PAD:
      return isSetRankOrderForPad();
    case LAST_WEEK_UPDATE_COUNT:
      return isSetLastWeekUpdateCount();
    case LAST_MONTH_UPDATE_COUNT:
      return isSetLastMonthUpdateCount();
    case FAVORITE_COUNT:
      return isSetFavoriteCount();
    case FEEDBACK_COUNT:
      return isSetFeedbackCount();
    case PERMISSION_COUNT:
      return isSetPermissionCount();
    case CREATE_TIME:
      return isSetCreateTime();
    case BAD_CMT:
      return isSetBadCmt();
    case GOOD_CMT:
      return isSetGoodCmt();
    case YSTD_DOWNLOAD:
      return isSetYstdDownload();
    case YSTD_INSTALL:
      return isSetYstdInstall();
    case YSTD_BROWSER:
      return isSetYstdBrowser();
    case YSTD_ACTIVE:
      return isSetYstdActive();
    case LAST_WEEK_DOWNLOAD:
      return isSetLastWeekDownload();
    case LAST_WEEK_INSTALL:
      return isSetLastWeekInstall();
    case LAST_WEEK_BROWSER:
      return isSetLastWeekBrowser();
    case LAST_WEEK_ACTIVE:
      return isSetLastWeekActive();
    case LAST_MONTH_DOWNLOAD:
      return isSetLastMonthDownload();
    case LAST_MONTH_INSTALL:
      return isSetLastMonthInstall();
    case LAST_MONTH_BROWSER:
      return isSetLastMonthBrowser();
    case LAST_MONTH_ACTIVE:
      return isSetLastMonthActive();
    case DISPLAY_NAME_SEG:
      return isSetDisplayNameSeg();
    case DESC_SEG:
      return isSetDescSeg();
    case BRIEF_SEG:
      return isSetBriefSeg();
    case COCLICK_TF_IDF:
      return isSetCoclickTfIdf();
    case APP_ACTIVE_RANK:
      return isSetAppActiveRank();
    case APP_CDR:
      return isSetAppCdr();
    case APP_DOWNLOAD_RANK:
      return isSetAppDownloadRank();
    case APP_HOT:
      return isSetAppHot();
    case APP_RANK:
      return isSetAppRank();
    case FOLDER_TAGS:
      return isSetFolderTags();
    case GAME_ARPU:
      return isSetGameArpu();
    case GAME_CDR:
      return isSetGameCdr();
    case GAME_RANK:
      return isSetGameRank();
    case RATING_SCORE:
      return isSetRatingScore();
    case KEYWORDS:
      return isSetKeywords();
    case RELATED_TAGS:
      return isSetRelatedTags();
    case SEARCH_KEYWORDS:
      return isSetSearchKeywords();
    case PUBLISHER:
      return isSetPublisher();
    case WDJ_CATEGORY:
      return isSetWdjCategory();
    case GOOGLE_CATES:
      return isSetGoogleCates();
    case EMI_CATES:
      return isSetEmiCates();
    case TOPICS:
      return isSetTopics();
    case SIMILAR_APPS:
      return isSetSimilarApps();
    case STORE_QUERIES:
      return isSetStoreQueries();
    case BROWSER_QUERIES:
      return isSetBrowserQueries();
    case SPECIAL_WORDS:
      return isSetSpecialWords();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AppExt)
      return this.equals((AppExt)that);
    return false;
  }

  public boolean equals(AppExt that) {
    if (that == null)
      return false;

    boolean this_present_appId = true && this.isSetAppId();
    boolean that_present_appId = true && that.isSetAppId();
    if (this_present_appId || that_present_appId) {
      if (!(this_present_appId && that_present_appId))
        return false;
      if (this.appId != that.appId)
        return false;
    }

    boolean this_present_packageName = true && this.isSetPackageName();
    boolean that_present_packageName = true && that.isSetPackageName();
    if (this_present_packageName || that_present_packageName) {
      if (!(this_present_packageName && that_present_packageName))
        return false;
      if (!this.packageName.equals(that.packageName))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_level1CategoryName = true && this.isSetLevel1CategoryName();
    boolean that_present_level1CategoryName = true && that.isSetLevel1CategoryName();
    if (this_present_level1CategoryName || that_present_level1CategoryName) {
      if (!(this_present_level1CategoryName && that_present_level1CategoryName))
        return false;
      if (!this.level1CategoryName.equals(that.level1CategoryName))
        return false;
    }

    boolean this_present_level2CategoryName = true && this.isSetLevel2CategoryName();
    boolean that_present_level2CategoryName = true && that.isSetLevel2CategoryName();
    if (this_present_level2CategoryName || that_present_level2CategoryName) {
      if (!(this_present_level2CategoryName && that_present_level2CategoryName))
        return false;
      if (!this.level2CategoryName.equals(that.level2CategoryName))
        return false;
    }

    boolean this_present_tags = true && this.isSetTags();
    boolean that_present_tags = true && that.isSetTags();
    if (this_present_tags || that_present_tags) {
      if (!(this_present_tags && that_present_tags))
        return false;
      if (!this.tags.equals(that.tags))
        return false;
    }

    boolean this_present_desc = true && this.isSetDesc();
    boolean that_present_desc = true && that.isSetDesc();
    if (this_present_desc || that_present_desc) {
      if (!(this_present_desc && that_present_desc))
        return false;
      if (!this.desc.equals(that.desc))
        return false;
    }

    boolean this_present_brief = true && this.isSetBrief();
    boolean that_present_brief = true && that.isSetBrief();
    if (this_present_brief || that_present_brief) {
      if (!(this_present_brief && that_present_brief))
        return false;
      if (!this.brief.equals(that.brief))
        return false;
    }

    boolean this_present_developerAppCount = true && this.isSetDeveloperAppCount();
    boolean that_present_developerAppCount = true && that.isSetDeveloperAppCount();
    if (this_present_developerAppCount || that_present_developerAppCount) {
      if (!(this_present_developerAppCount && that_present_developerAppCount))
        return false;
      if (this.developerAppCount != that.developerAppCount)
        return false;
    }

    boolean this_present_apkSize = true && this.isSetApkSize();
    boolean that_present_apkSize = true && that.isSetApkSize();
    if (this_present_apkSize || that_present_apkSize) {
      if (!(this_present_apkSize && that_present_apkSize))
        return false;
      if (this.apkSize != that.apkSize)
        return false;
    }

    boolean this_present_star = true && this.isSetStar();
    boolean that_present_star = true && that.isSetStar();
    if (this_present_star || that_present_star) {
      if (!(this_present_star && that_present_star))
        return false;
      if (this.star != that.star)
        return false;
    }

    boolean this_present_rankOrder = true && this.isSetRankOrder();
    boolean that_present_rankOrder = true && that.isSetRankOrder();
    if (this_present_rankOrder || that_present_rankOrder) {
      if (!(this_present_rankOrder && that_present_rankOrder))
        return false;
      if (this.rankOrder != that.rankOrder)
        return false;
    }

    boolean this_present_rankOrderForPad = true && this.isSetRankOrderForPad();
    boolean that_present_rankOrderForPad = true && that.isSetRankOrderForPad();
    if (this_present_rankOrderForPad || that_present_rankOrderForPad) {
      if (!(this_present_rankOrderForPad && that_present_rankOrderForPad))
        return false;
      if (this.rankOrderForPad != that.rankOrderForPad)
        return false;
    }

    boolean this_present_lastWeekUpdateCount = true && this.isSetLastWeekUpdateCount();
    boolean that_present_lastWeekUpdateCount = true && that.isSetLastWeekUpdateCount();
    if (this_present_lastWeekUpdateCount || that_present_lastWeekUpdateCount) {
      if (!(this_present_lastWeekUpdateCount && that_present_lastWeekUpdateCount))
        return false;
      if (this.lastWeekUpdateCount != that.lastWeekUpdateCount)
        return false;
    }

    boolean this_present_lastMonthUpdateCount = true && this.isSetLastMonthUpdateCount();
    boolean that_present_lastMonthUpdateCount = true && that.isSetLastMonthUpdateCount();
    if (this_present_lastMonthUpdateCount || that_present_lastMonthUpdateCount) {
      if (!(this_present_lastMonthUpdateCount && that_present_lastMonthUpdateCount))
        return false;
      if (this.lastMonthUpdateCount != that.lastMonthUpdateCount)
        return false;
    }

    boolean this_present_favoriteCount = true && this.isSetFavoriteCount();
    boolean that_present_favoriteCount = true && that.isSetFavoriteCount();
    if (this_present_favoriteCount || that_present_favoriteCount) {
      if (!(this_present_favoriteCount && that_present_favoriteCount))
        return false;
      if (this.favoriteCount != that.favoriteCount)
        return false;
    }

    boolean this_present_feedbackCount = true && this.isSetFeedbackCount();
    boolean that_present_feedbackCount = true && that.isSetFeedbackCount();
    if (this_present_feedbackCount || that_present_feedbackCount) {
      if (!(this_present_feedbackCount && that_present_feedbackCount))
        return false;
      if (this.feedbackCount != that.feedbackCount)
        return false;
    }

    boolean this_present_permissionCount = true && this.isSetPermissionCount();
    boolean that_present_permissionCount = true && that.isSetPermissionCount();
    if (this_present_permissionCount || that_present_permissionCount) {
      if (!(this_present_permissionCount && that_present_permissionCount))
        return false;
      if (this.permissionCount != that.permissionCount)
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_badCmt = true && this.isSetBadCmt();
    boolean that_present_badCmt = true && that.isSetBadCmt();
    if (this_present_badCmt || that_present_badCmt) {
      if (!(this_present_badCmt && that_present_badCmt))
        return false;
      if (this.badCmt != that.badCmt)
        return false;
    }

    boolean this_present_goodCmt = true && this.isSetGoodCmt();
    boolean that_present_goodCmt = true && that.isSetGoodCmt();
    if (this_present_goodCmt || that_present_goodCmt) {
      if (!(this_present_goodCmt && that_present_goodCmt))
        return false;
      if (this.goodCmt != that.goodCmt)
        return false;
    }

    boolean this_present_ystdDownload = true && this.isSetYstdDownload();
    boolean that_present_ystdDownload = true && that.isSetYstdDownload();
    if (this_present_ystdDownload || that_present_ystdDownload) {
      if (!(this_present_ystdDownload && that_present_ystdDownload))
        return false;
      if (this.ystdDownload != that.ystdDownload)
        return false;
    }

    boolean this_present_ystdInstall = true && this.isSetYstdInstall();
    boolean that_present_ystdInstall = true && that.isSetYstdInstall();
    if (this_present_ystdInstall || that_present_ystdInstall) {
      if (!(this_present_ystdInstall && that_present_ystdInstall))
        return false;
      if (this.ystdInstall != that.ystdInstall)
        return false;
    }

    boolean this_present_ystdBrowser = true && this.isSetYstdBrowser();
    boolean that_present_ystdBrowser = true && that.isSetYstdBrowser();
    if (this_present_ystdBrowser || that_present_ystdBrowser) {
      if (!(this_present_ystdBrowser && that_present_ystdBrowser))
        return false;
      if (this.ystdBrowser != that.ystdBrowser)
        return false;
    }

    boolean this_present_ystdActive = true && this.isSetYstdActive();
    boolean that_present_ystdActive = true && that.isSetYstdActive();
    if (this_present_ystdActive || that_present_ystdActive) {
      if (!(this_present_ystdActive && that_present_ystdActive))
        return false;
      if (this.ystdActive != that.ystdActive)
        return false;
    }

    boolean this_present_lastWeekDownload = true && this.isSetLastWeekDownload();
    boolean that_present_lastWeekDownload = true && that.isSetLastWeekDownload();
    if (this_present_lastWeekDownload || that_present_lastWeekDownload) {
      if (!(this_present_lastWeekDownload && that_present_lastWeekDownload))
        return false;
      if (this.lastWeekDownload != that.lastWeekDownload)
        return false;
    }

    boolean this_present_lastWeekInstall = true && this.isSetLastWeekInstall();
    boolean that_present_lastWeekInstall = true && that.isSetLastWeekInstall();
    if (this_present_lastWeekInstall || that_present_lastWeekInstall) {
      if (!(this_present_lastWeekInstall && that_present_lastWeekInstall))
        return false;
      if (this.lastWeekInstall != that.lastWeekInstall)
        return false;
    }

    boolean this_present_lastWeekBrowser = true && this.isSetLastWeekBrowser();
    boolean that_present_lastWeekBrowser = true && that.isSetLastWeekBrowser();
    if (this_present_lastWeekBrowser || that_present_lastWeekBrowser) {
      if (!(this_present_lastWeekBrowser && that_present_lastWeekBrowser))
        return false;
      if (this.lastWeekBrowser != that.lastWeekBrowser)
        return false;
    }

    boolean this_present_lastWeekActive = true && this.isSetLastWeekActive();
    boolean that_present_lastWeekActive = true && that.isSetLastWeekActive();
    if (this_present_lastWeekActive || that_present_lastWeekActive) {
      if (!(this_present_lastWeekActive && that_present_lastWeekActive))
        return false;
      if (this.lastWeekActive != that.lastWeekActive)
        return false;
    }

    boolean this_present_lastMonthDownload = true && this.isSetLastMonthDownload();
    boolean that_present_lastMonthDownload = true && that.isSetLastMonthDownload();
    if (this_present_lastMonthDownload || that_present_lastMonthDownload) {
      if (!(this_present_lastMonthDownload && that_present_lastMonthDownload))
        return false;
      if (this.lastMonthDownload != that.lastMonthDownload)
        return false;
    }

    boolean this_present_lastMonthInstall = true && this.isSetLastMonthInstall();
    boolean that_present_lastMonthInstall = true && that.isSetLastMonthInstall();
    if (this_present_lastMonthInstall || that_present_lastMonthInstall) {
      if (!(this_present_lastMonthInstall && that_present_lastMonthInstall))
        return false;
      if (this.lastMonthInstall != that.lastMonthInstall)
        return false;
    }

    boolean this_present_lastMonthBrowser = true && this.isSetLastMonthBrowser();
    boolean that_present_lastMonthBrowser = true && that.isSetLastMonthBrowser();
    if (this_present_lastMonthBrowser || that_present_lastMonthBrowser) {
      if (!(this_present_lastMonthBrowser && that_present_lastMonthBrowser))
        return false;
      if (this.lastMonthBrowser != that.lastMonthBrowser)
        return false;
    }

    boolean this_present_lastMonthActive = true && this.isSetLastMonthActive();
    boolean that_present_lastMonthActive = true && that.isSetLastMonthActive();
    if (this_present_lastMonthActive || that_present_lastMonthActive) {
      if (!(this_present_lastMonthActive && that_present_lastMonthActive))
        return false;
      if (this.lastMonthActive != that.lastMonthActive)
        return false;
    }

    boolean this_present_displayNameSeg = true && this.isSetDisplayNameSeg();
    boolean that_present_displayNameSeg = true && that.isSetDisplayNameSeg();
    if (this_present_displayNameSeg || that_present_displayNameSeg) {
      if (!(this_present_displayNameSeg && that_present_displayNameSeg))
        return false;
      if (!this.displayNameSeg.equals(that.displayNameSeg))
        return false;
    }

    boolean this_present_descSeg = true && this.isSetDescSeg();
    boolean that_present_descSeg = true && that.isSetDescSeg();
    if (this_present_descSeg || that_present_descSeg) {
      if (!(this_present_descSeg && that_present_descSeg))
        return false;
      if (!this.descSeg.equals(that.descSeg))
        return false;
    }

    boolean this_present_briefSeg = true && this.isSetBriefSeg();
    boolean that_present_briefSeg = true && that.isSetBriefSeg();
    if (this_present_briefSeg || that_present_briefSeg) {
      if (!(this_present_briefSeg && that_present_briefSeg))
        return false;
      if (!this.briefSeg.equals(that.briefSeg))
        return false;
    }

    boolean this_present_coclickTfIdf = true && this.isSetCoclickTfIdf();
    boolean that_present_coclickTfIdf = true && that.isSetCoclickTfIdf();
    if (this_present_coclickTfIdf || that_present_coclickTfIdf) {
      if (!(this_present_coclickTfIdf && that_present_coclickTfIdf))
        return false;
      if (!this.coclickTfIdf.equals(that.coclickTfIdf))
        return false;
    }

    boolean this_present_appActiveRank = true && this.isSetAppActiveRank();
    boolean that_present_appActiveRank = true && that.isSetAppActiveRank();
    if (this_present_appActiveRank || that_present_appActiveRank) {
      if (!(this_present_appActiveRank && that_present_appActiveRank))
        return false;
      if (this.appActiveRank != that.appActiveRank)
        return false;
    }

    boolean this_present_appCdr = true && this.isSetAppCdr();
    boolean that_present_appCdr = true && that.isSetAppCdr();
    if (this_present_appCdr || that_present_appCdr) {
      if (!(this_present_appCdr && that_present_appCdr))
        return false;
      if (this.appCdr != that.appCdr)
        return false;
    }

    boolean this_present_appDownloadRank = true && this.isSetAppDownloadRank();
    boolean that_present_appDownloadRank = true && that.isSetAppDownloadRank();
    if (this_present_appDownloadRank || that_present_appDownloadRank) {
      if (!(this_present_appDownloadRank && that_present_appDownloadRank))
        return false;
      if (this.appDownloadRank != that.appDownloadRank)
        return false;
    }

    boolean this_present_appHot = true && this.isSetAppHot();
    boolean that_present_appHot = true && that.isSetAppHot();
    if (this_present_appHot || that_present_appHot) {
      if (!(this_present_appHot && that_present_appHot))
        return false;
      if (this.appHot != that.appHot)
        return false;
    }

    boolean this_present_appRank = true && this.isSetAppRank();
    boolean that_present_appRank = true && that.isSetAppRank();
    if (this_present_appRank || that_present_appRank) {
      if (!(this_present_appRank && that_present_appRank))
        return false;
      if (this.appRank != that.appRank)
        return false;
    }

    boolean this_present_folderTags = true && this.isSetFolderTags();
    boolean that_present_folderTags = true && that.isSetFolderTags();
    if (this_present_folderTags || that_present_folderTags) {
      if (!(this_present_folderTags && that_present_folderTags))
        return false;
      if (!this.folderTags.equals(that.folderTags))
        return false;
    }

    boolean this_present_gameArpu = true && this.isSetGameArpu();
    boolean that_present_gameArpu = true && that.isSetGameArpu();
    if (this_present_gameArpu || that_present_gameArpu) {
      if (!(this_present_gameArpu && that_present_gameArpu))
        return false;
      if (this.gameArpu != that.gameArpu)
        return false;
    }

    boolean this_present_gameCdr = true && this.isSetGameCdr();
    boolean that_present_gameCdr = true && that.isSetGameCdr();
    if (this_present_gameCdr || that_present_gameCdr) {
      if (!(this_present_gameCdr && that_present_gameCdr))
        return false;
      if (this.gameCdr != that.gameCdr)
        return false;
    }

    boolean this_present_gameRank = true && this.isSetGameRank();
    boolean that_present_gameRank = true && that.isSetGameRank();
    if (this_present_gameRank || that_present_gameRank) {
      if (!(this_present_gameRank && that_present_gameRank))
        return false;
      if (this.gameRank != that.gameRank)
        return false;
    }

    boolean this_present_ratingScore = true && this.isSetRatingScore();
    boolean that_present_ratingScore = true && that.isSetRatingScore();
    if (this_present_ratingScore || that_present_ratingScore) {
      if (!(this_present_ratingScore && that_present_ratingScore))
        return false;
      if (this.ratingScore != that.ratingScore)
        return false;
    }

    boolean this_present_keywords = true && this.isSetKeywords();
    boolean that_present_keywords = true && that.isSetKeywords();
    if (this_present_keywords || that_present_keywords) {
      if (!(this_present_keywords && that_present_keywords))
        return false;
      if (!this.keywords.equals(that.keywords))
        return false;
    }

    boolean this_present_relatedTags = true && this.isSetRelatedTags();
    boolean that_present_relatedTags = true && that.isSetRelatedTags();
    if (this_present_relatedTags || that_present_relatedTags) {
      if (!(this_present_relatedTags && that_present_relatedTags))
        return false;
      if (!this.relatedTags.equals(that.relatedTags))
        return false;
    }

    boolean this_present_searchKeywords = true && this.isSetSearchKeywords();
    boolean that_present_searchKeywords = true && that.isSetSearchKeywords();
    if (this_present_searchKeywords || that_present_searchKeywords) {
      if (!(this_present_searchKeywords && that_present_searchKeywords))
        return false;
      if (!this.searchKeywords.equals(that.searchKeywords))
        return false;
    }

    boolean this_present_publisher = true && this.isSetPublisher();
    boolean that_present_publisher = true && that.isSetPublisher();
    if (this_present_publisher || that_present_publisher) {
      if (!(this_present_publisher && that_present_publisher))
        return false;
      if (!this.publisher.equals(that.publisher))
        return false;
    }

    boolean this_present_wdjCategory = true && this.isSetWdjCategory();
    boolean that_present_wdjCategory = true && that.isSetWdjCategory();
    if (this_present_wdjCategory || that_present_wdjCategory) {
      if (!(this_present_wdjCategory && that_present_wdjCategory))
        return false;
      if (!this.wdjCategory.equals(that.wdjCategory))
        return false;
    }

    boolean this_present_googleCates = true && this.isSetGoogleCates();
    boolean that_present_googleCates = true && that.isSetGoogleCates();
    if (this_present_googleCates || that_present_googleCates) {
      if (!(this_present_googleCates && that_present_googleCates))
        return false;
      if (!this.googleCates.equals(that.googleCates))
        return false;
    }

    boolean this_present_emiCates = true && this.isSetEmiCates();
    boolean that_present_emiCates = true && that.isSetEmiCates();
    if (this_present_emiCates || that_present_emiCates) {
      if (!(this_present_emiCates && that_present_emiCates))
        return false;
      if (!this.emiCates.equals(that.emiCates))
        return false;
    }

    boolean this_present_topics = true && this.isSetTopics();
    boolean that_present_topics = true && that.isSetTopics();
    if (this_present_topics || that_present_topics) {
      if (!(this_present_topics && that_present_topics))
        return false;
      if (!this.topics.equals(that.topics))
        return false;
    }

    boolean this_present_similarApps = true && this.isSetSimilarApps();
    boolean that_present_similarApps = true && that.isSetSimilarApps();
    if (this_present_similarApps || that_present_similarApps) {
      if (!(this_present_similarApps && that_present_similarApps))
        return false;
      if (!this.similarApps.equals(that.similarApps))
        return false;
    }

    boolean this_present_storeQueries = true && this.isSetStoreQueries();
    boolean that_present_storeQueries = true && that.isSetStoreQueries();
    if (this_present_storeQueries || that_present_storeQueries) {
      if (!(this_present_storeQueries && that_present_storeQueries))
        return false;
      if (!this.storeQueries.equals(that.storeQueries))
        return false;
    }

    boolean this_present_browserQueries = true && this.isSetBrowserQueries();
    boolean that_present_browserQueries = true && that.isSetBrowserQueries();
    if (this_present_browserQueries || that_present_browserQueries) {
      if (!(this_present_browserQueries && that_present_browserQueries))
        return false;
      if (!this.browserQueries.equals(that.browserQueries))
        return false;
    }

    boolean this_present_specialWords = true && this.isSetSpecialWords();
    boolean that_present_specialWords = true && that.isSetSpecialWords();
    if (this_present_specialWords || that_present_specialWords) {
      if (!(this_present_specialWords && that_present_specialWords))
        return false;
      if (!this.specialWords.equals(that.specialWords))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_appId = true && (isSetAppId());
    builder.append(present_appId);
    if (present_appId)
      builder.append(appId);

    boolean present_packageName = true && (isSetPackageName());
    builder.append(present_packageName);
    if (present_packageName)
      builder.append(packageName);

    boolean present_displayName = true && (isSetDisplayName());
    builder.append(present_displayName);
    if (present_displayName)
      builder.append(displayName);

    boolean present_level1CategoryName = true && (isSetLevel1CategoryName());
    builder.append(present_level1CategoryName);
    if (present_level1CategoryName)
      builder.append(level1CategoryName);

    boolean present_level2CategoryName = true && (isSetLevel2CategoryName());
    builder.append(present_level2CategoryName);
    if (present_level2CategoryName)
      builder.append(level2CategoryName);

    boolean present_tags = true && (isSetTags());
    builder.append(present_tags);
    if (present_tags)
      builder.append(tags);

    boolean present_desc = true && (isSetDesc());
    builder.append(present_desc);
    if (present_desc)
      builder.append(desc);

    boolean present_brief = true && (isSetBrief());
    builder.append(present_brief);
    if (present_brief)
      builder.append(brief);

    boolean present_developerAppCount = true && (isSetDeveloperAppCount());
    builder.append(present_developerAppCount);
    if (present_developerAppCount)
      builder.append(developerAppCount);

    boolean present_apkSize = true && (isSetApkSize());
    builder.append(present_apkSize);
    if (present_apkSize)
      builder.append(apkSize);

    boolean present_star = true && (isSetStar());
    builder.append(present_star);
    if (present_star)
      builder.append(star);

    boolean present_rankOrder = true && (isSetRankOrder());
    builder.append(present_rankOrder);
    if (present_rankOrder)
      builder.append(rankOrder);

    boolean present_rankOrderForPad = true && (isSetRankOrderForPad());
    builder.append(present_rankOrderForPad);
    if (present_rankOrderForPad)
      builder.append(rankOrderForPad);

    boolean present_lastWeekUpdateCount = true && (isSetLastWeekUpdateCount());
    builder.append(present_lastWeekUpdateCount);
    if (present_lastWeekUpdateCount)
      builder.append(lastWeekUpdateCount);

    boolean present_lastMonthUpdateCount = true && (isSetLastMonthUpdateCount());
    builder.append(present_lastMonthUpdateCount);
    if (present_lastMonthUpdateCount)
      builder.append(lastMonthUpdateCount);

    boolean present_favoriteCount = true && (isSetFavoriteCount());
    builder.append(present_favoriteCount);
    if (present_favoriteCount)
      builder.append(favoriteCount);

    boolean present_feedbackCount = true && (isSetFeedbackCount());
    builder.append(present_feedbackCount);
    if (present_feedbackCount)
      builder.append(feedbackCount);

    boolean present_permissionCount = true && (isSetPermissionCount());
    builder.append(present_permissionCount);
    if (present_permissionCount)
      builder.append(permissionCount);

    boolean present_createTime = true && (isSetCreateTime());
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_badCmt = true && (isSetBadCmt());
    builder.append(present_badCmt);
    if (present_badCmt)
      builder.append(badCmt);

    boolean present_goodCmt = true && (isSetGoodCmt());
    builder.append(present_goodCmt);
    if (present_goodCmt)
      builder.append(goodCmt);

    boolean present_ystdDownload = true && (isSetYstdDownload());
    builder.append(present_ystdDownload);
    if (present_ystdDownload)
      builder.append(ystdDownload);

    boolean present_ystdInstall = true && (isSetYstdInstall());
    builder.append(present_ystdInstall);
    if (present_ystdInstall)
      builder.append(ystdInstall);

    boolean present_ystdBrowser = true && (isSetYstdBrowser());
    builder.append(present_ystdBrowser);
    if (present_ystdBrowser)
      builder.append(ystdBrowser);

    boolean present_ystdActive = true && (isSetYstdActive());
    builder.append(present_ystdActive);
    if (present_ystdActive)
      builder.append(ystdActive);

    boolean present_lastWeekDownload = true && (isSetLastWeekDownload());
    builder.append(present_lastWeekDownload);
    if (present_lastWeekDownload)
      builder.append(lastWeekDownload);

    boolean present_lastWeekInstall = true && (isSetLastWeekInstall());
    builder.append(present_lastWeekInstall);
    if (present_lastWeekInstall)
      builder.append(lastWeekInstall);

    boolean present_lastWeekBrowser = true && (isSetLastWeekBrowser());
    builder.append(present_lastWeekBrowser);
    if (present_lastWeekBrowser)
      builder.append(lastWeekBrowser);

    boolean present_lastWeekActive = true && (isSetLastWeekActive());
    builder.append(present_lastWeekActive);
    if (present_lastWeekActive)
      builder.append(lastWeekActive);

    boolean present_lastMonthDownload = true && (isSetLastMonthDownload());
    builder.append(present_lastMonthDownload);
    if (present_lastMonthDownload)
      builder.append(lastMonthDownload);

    boolean present_lastMonthInstall = true && (isSetLastMonthInstall());
    builder.append(present_lastMonthInstall);
    if (present_lastMonthInstall)
      builder.append(lastMonthInstall);

    boolean present_lastMonthBrowser = true && (isSetLastMonthBrowser());
    builder.append(present_lastMonthBrowser);
    if (present_lastMonthBrowser)
      builder.append(lastMonthBrowser);

    boolean present_lastMonthActive = true && (isSetLastMonthActive());
    builder.append(present_lastMonthActive);
    if (present_lastMonthActive)
      builder.append(lastMonthActive);

    boolean present_displayNameSeg = true && (isSetDisplayNameSeg());
    builder.append(present_displayNameSeg);
    if (present_displayNameSeg)
      builder.append(displayNameSeg);

    boolean present_descSeg = true && (isSetDescSeg());
    builder.append(present_descSeg);
    if (present_descSeg)
      builder.append(descSeg);

    boolean present_briefSeg = true && (isSetBriefSeg());
    builder.append(present_briefSeg);
    if (present_briefSeg)
      builder.append(briefSeg);

    boolean present_coclickTfIdf = true && (isSetCoclickTfIdf());
    builder.append(present_coclickTfIdf);
    if (present_coclickTfIdf)
      builder.append(coclickTfIdf);

    boolean present_appActiveRank = true && (isSetAppActiveRank());
    builder.append(present_appActiveRank);
    if (present_appActiveRank)
      builder.append(appActiveRank);

    boolean present_appCdr = true && (isSetAppCdr());
    builder.append(present_appCdr);
    if (present_appCdr)
      builder.append(appCdr);

    boolean present_appDownloadRank = true && (isSetAppDownloadRank());
    builder.append(present_appDownloadRank);
    if (present_appDownloadRank)
      builder.append(appDownloadRank);

    boolean present_appHot = true && (isSetAppHot());
    builder.append(present_appHot);
    if (present_appHot)
      builder.append(appHot);

    boolean present_appRank = true && (isSetAppRank());
    builder.append(present_appRank);
    if (present_appRank)
      builder.append(appRank);

    boolean present_folderTags = true && (isSetFolderTags());
    builder.append(present_folderTags);
    if (present_folderTags)
      builder.append(folderTags);

    boolean present_gameArpu = true && (isSetGameArpu());
    builder.append(present_gameArpu);
    if (present_gameArpu)
      builder.append(gameArpu);

    boolean present_gameCdr = true && (isSetGameCdr());
    builder.append(present_gameCdr);
    if (present_gameCdr)
      builder.append(gameCdr);

    boolean present_gameRank = true && (isSetGameRank());
    builder.append(present_gameRank);
    if (present_gameRank)
      builder.append(gameRank);

    boolean present_ratingScore = true && (isSetRatingScore());
    builder.append(present_ratingScore);
    if (present_ratingScore)
      builder.append(ratingScore);

    boolean present_keywords = true && (isSetKeywords());
    builder.append(present_keywords);
    if (present_keywords)
      builder.append(keywords);

    boolean present_relatedTags = true && (isSetRelatedTags());
    builder.append(present_relatedTags);
    if (present_relatedTags)
      builder.append(relatedTags);

    boolean present_searchKeywords = true && (isSetSearchKeywords());
    builder.append(present_searchKeywords);
    if (present_searchKeywords)
      builder.append(searchKeywords);

    boolean present_publisher = true && (isSetPublisher());
    builder.append(present_publisher);
    if (present_publisher)
      builder.append(publisher);

    boolean present_wdjCategory = true && (isSetWdjCategory());
    builder.append(present_wdjCategory);
    if (present_wdjCategory)
      builder.append(wdjCategory);

    boolean present_googleCates = true && (isSetGoogleCates());
    builder.append(present_googleCates);
    if (present_googleCates)
      builder.append(googleCates);

    boolean present_emiCates = true && (isSetEmiCates());
    builder.append(present_emiCates);
    if (present_emiCates)
      builder.append(emiCates);

    boolean present_topics = true && (isSetTopics());
    builder.append(present_topics);
    if (present_topics)
      builder.append(topics);

    boolean present_similarApps = true && (isSetSimilarApps());
    builder.append(present_similarApps);
    if (present_similarApps)
      builder.append(similarApps);

    boolean present_storeQueries = true && (isSetStoreQueries());
    builder.append(present_storeQueries);
    if (present_storeQueries)
      builder.append(storeQueries);

    boolean present_browserQueries = true && (isSetBrowserQueries());
    builder.append(present_browserQueries);
    if (present_browserQueries)
      builder.append(browserQueries);

    boolean present_specialWords = true && (isSetSpecialWords());
    builder.append(present_specialWords);
    if (present_specialWords)
      builder.append(specialWords);

    return builder.toHashCode();
  }

  public int compareTo(AppExt other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AppExt typedOther = (AppExt)other;

    lastComparison = Boolean.valueOf(isSetAppId()).compareTo(typedOther.isSetAppId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppId()) {
      lastComparison = TBaseHelper.compareTo(this.appId, typedOther.appId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageName()).compareTo(typedOther.isSetPackageName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageName()) {
      lastComparison = TBaseHelper.compareTo(this.packageName, typedOther.packageName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayName()).compareTo(typedOther.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = TBaseHelper.compareTo(this.displayName, typedOther.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLevel1CategoryName()).compareTo(typedOther.isSetLevel1CategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel1CategoryName()) {
      lastComparison = TBaseHelper.compareTo(this.level1CategoryName, typedOther.level1CategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLevel2CategoryName()).compareTo(typedOther.isSetLevel2CategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel2CategoryName()) {
      lastComparison = TBaseHelper.compareTo(this.level2CategoryName, typedOther.level2CategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTags()).compareTo(typedOther.isSetTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTags()) {
      lastComparison = TBaseHelper.compareTo(this.tags, typedOther.tags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesc()).compareTo(typedOther.isSetDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesc()) {
      lastComparison = TBaseHelper.compareTo(this.desc, typedOther.desc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrief()).compareTo(typedOther.isSetBrief());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrief()) {
      lastComparison = TBaseHelper.compareTo(this.brief, typedOther.brief);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDeveloperAppCount()).compareTo(typedOther.isSetDeveloperAppCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeveloperAppCount()) {
      lastComparison = TBaseHelper.compareTo(this.developerAppCount, typedOther.developerAppCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApkSize()).compareTo(typedOther.isSetApkSize());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApkSize()) {
      lastComparison = TBaseHelper.compareTo(this.apkSize, typedOther.apkSize);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStar()).compareTo(typedOther.isSetStar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStar()) {
      lastComparison = TBaseHelper.compareTo(this.star, typedOther.star);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRankOrder()).compareTo(typedOther.isSetRankOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRankOrder()) {
      lastComparison = TBaseHelper.compareTo(this.rankOrder, typedOther.rankOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRankOrderForPad()).compareTo(typedOther.isSetRankOrderForPad());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRankOrderForPad()) {
      lastComparison = TBaseHelper.compareTo(this.rankOrderForPad, typedOther.rankOrderForPad);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastWeekUpdateCount()).compareTo(typedOther.isSetLastWeekUpdateCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastWeekUpdateCount()) {
      lastComparison = TBaseHelper.compareTo(this.lastWeekUpdateCount, typedOther.lastWeekUpdateCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastMonthUpdateCount()).compareTo(typedOther.isSetLastMonthUpdateCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastMonthUpdateCount()) {
      lastComparison = TBaseHelper.compareTo(this.lastMonthUpdateCount, typedOther.lastMonthUpdateCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFavoriteCount()).compareTo(typedOther.isSetFavoriteCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFavoriteCount()) {
      lastComparison = TBaseHelper.compareTo(this.favoriteCount, typedOther.favoriteCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeedbackCount()).compareTo(typedOther.isSetFeedbackCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeedbackCount()) {
      lastComparison = TBaseHelper.compareTo(this.feedbackCount, typedOther.feedbackCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPermissionCount()).compareTo(typedOther.isSetPermissionCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPermissionCount()) {
      lastComparison = TBaseHelper.compareTo(this.permissionCount, typedOther.permissionCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(typedOther.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = TBaseHelper.compareTo(this.createTime, typedOther.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBadCmt()).compareTo(typedOther.isSetBadCmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBadCmt()) {
      lastComparison = TBaseHelper.compareTo(this.badCmt, typedOther.badCmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodCmt()).compareTo(typedOther.isSetGoodCmt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodCmt()) {
      lastComparison = TBaseHelper.compareTo(this.goodCmt, typedOther.goodCmt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetYstdDownload()).compareTo(typedOther.isSetYstdDownload());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYstdDownload()) {
      lastComparison = TBaseHelper.compareTo(this.ystdDownload, typedOther.ystdDownload);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetYstdInstall()).compareTo(typedOther.isSetYstdInstall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYstdInstall()) {
      lastComparison = TBaseHelper.compareTo(this.ystdInstall, typedOther.ystdInstall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetYstdBrowser()).compareTo(typedOther.isSetYstdBrowser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYstdBrowser()) {
      lastComparison = TBaseHelper.compareTo(this.ystdBrowser, typedOther.ystdBrowser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetYstdActive()).compareTo(typedOther.isSetYstdActive());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYstdActive()) {
      lastComparison = TBaseHelper.compareTo(this.ystdActive, typedOther.ystdActive);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastWeekDownload()).compareTo(typedOther.isSetLastWeekDownload());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastWeekDownload()) {
      lastComparison = TBaseHelper.compareTo(this.lastWeekDownload, typedOther.lastWeekDownload);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastWeekInstall()).compareTo(typedOther.isSetLastWeekInstall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastWeekInstall()) {
      lastComparison = TBaseHelper.compareTo(this.lastWeekInstall, typedOther.lastWeekInstall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastWeekBrowser()).compareTo(typedOther.isSetLastWeekBrowser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastWeekBrowser()) {
      lastComparison = TBaseHelper.compareTo(this.lastWeekBrowser, typedOther.lastWeekBrowser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastWeekActive()).compareTo(typedOther.isSetLastWeekActive());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastWeekActive()) {
      lastComparison = TBaseHelper.compareTo(this.lastWeekActive, typedOther.lastWeekActive);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastMonthDownload()).compareTo(typedOther.isSetLastMonthDownload());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastMonthDownload()) {
      lastComparison = TBaseHelper.compareTo(this.lastMonthDownload, typedOther.lastMonthDownload);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastMonthInstall()).compareTo(typedOther.isSetLastMonthInstall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastMonthInstall()) {
      lastComparison = TBaseHelper.compareTo(this.lastMonthInstall, typedOther.lastMonthInstall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastMonthBrowser()).compareTo(typedOther.isSetLastMonthBrowser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastMonthBrowser()) {
      lastComparison = TBaseHelper.compareTo(this.lastMonthBrowser, typedOther.lastMonthBrowser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastMonthActive()).compareTo(typedOther.isSetLastMonthActive());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastMonthActive()) {
      lastComparison = TBaseHelper.compareTo(this.lastMonthActive, typedOther.lastMonthActive);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayNameSeg()).compareTo(typedOther.isSetDisplayNameSeg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayNameSeg()) {
      lastComparison = TBaseHelper.compareTo(this.displayNameSeg, typedOther.displayNameSeg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescSeg()).compareTo(typedOther.isSetDescSeg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescSeg()) {
      lastComparison = TBaseHelper.compareTo(this.descSeg, typedOther.descSeg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBriefSeg()).compareTo(typedOther.isSetBriefSeg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBriefSeg()) {
      lastComparison = TBaseHelper.compareTo(this.briefSeg, typedOther.briefSeg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCoclickTfIdf()).compareTo(typedOther.isSetCoclickTfIdf());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoclickTfIdf()) {
      lastComparison = TBaseHelper.compareTo(this.coclickTfIdf, typedOther.coclickTfIdf);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppActiveRank()).compareTo(typedOther.isSetAppActiveRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppActiveRank()) {
      lastComparison = TBaseHelper.compareTo(this.appActiveRank, typedOther.appActiveRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppCdr()).compareTo(typedOther.isSetAppCdr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppCdr()) {
      lastComparison = TBaseHelper.compareTo(this.appCdr, typedOther.appCdr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppDownloadRank()).compareTo(typedOther.isSetAppDownloadRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppDownloadRank()) {
      lastComparison = TBaseHelper.compareTo(this.appDownloadRank, typedOther.appDownloadRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppHot()).compareTo(typedOther.isSetAppHot());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppHot()) {
      lastComparison = TBaseHelper.compareTo(this.appHot, typedOther.appHot);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppRank()).compareTo(typedOther.isSetAppRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppRank()) {
      lastComparison = TBaseHelper.compareTo(this.appRank, typedOther.appRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFolderTags()).compareTo(typedOther.isSetFolderTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFolderTags()) {
      lastComparison = TBaseHelper.compareTo(this.folderTags, typedOther.folderTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGameArpu()).compareTo(typedOther.isSetGameArpu());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameArpu()) {
      lastComparison = TBaseHelper.compareTo(this.gameArpu, typedOther.gameArpu);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGameCdr()).compareTo(typedOther.isSetGameCdr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameCdr()) {
      lastComparison = TBaseHelper.compareTo(this.gameCdr, typedOther.gameCdr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGameRank()).compareTo(typedOther.isSetGameRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameRank()) {
      lastComparison = TBaseHelper.compareTo(this.gameRank, typedOther.gameRank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRatingScore()).compareTo(typedOther.isSetRatingScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRatingScore()) {
      lastComparison = TBaseHelper.compareTo(this.ratingScore, typedOther.ratingScore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKeywords()).compareTo(typedOther.isSetKeywords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeywords()) {
      lastComparison = TBaseHelper.compareTo(this.keywords, typedOther.keywords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRelatedTags()).compareTo(typedOther.isSetRelatedTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelatedTags()) {
      lastComparison = TBaseHelper.compareTo(this.relatedTags, typedOther.relatedTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSearchKeywords()).compareTo(typedOther.isSetSearchKeywords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSearchKeywords()) {
      lastComparison = TBaseHelper.compareTo(this.searchKeywords, typedOther.searchKeywords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublisher()).compareTo(typedOther.isSetPublisher());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisher()) {
      lastComparison = TBaseHelper.compareTo(this.publisher, typedOther.publisher);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWdjCategory()).compareTo(typedOther.isSetWdjCategory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWdjCategory()) {
      lastComparison = TBaseHelper.compareTo(this.wdjCategory, typedOther.wdjCategory);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoogleCates()).compareTo(typedOther.isSetGoogleCates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoogleCates()) {
      lastComparison = TBaseHelper.compareTo(this.googleCates, typedOther.googleCates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmiCates()).compareTo(typedOther.isSetEmiCates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmiCates()) {
      lastComparison = TBaseHelper.compareTo(this.emiCates, typedOther.emiCates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTopics()).compareTo(typedOther.isSetTopics());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTopics()) {
      lastComparison = TBaseHelper.compareTo(this.topics, typedOther.topics);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSimilarApps()).compareTo(typedOther.isSetSimilarApps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimilarApps()) {
      lastComparison = TBaseHelper.compareTo(this.similarApps, typedOther.similarApps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStoreQueries()).compareTo(typedOther.isSetStoreQueries());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStoreQueries()) {
      lastComparison = TBaseHelper.compareTo(this.storeQueries, typedOther.storeQueries);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrowserQueries()).compareTo(typedOther.isSetBrowserQueries());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrowserQueries()) {
      lastComparison = TBaseHelper.compareTo(this.browserQueries, typedOther.browserQueries);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSpecialWords()).compareTo(typedOther.isSetSpecialWords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpecialWords()) {
      lastComparison = TBaseHelper.compareTo(this.specialWords, typedOther.specialWords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // APP_ID
          if (field.type == TType.I64) {
            this.appId = iprot.readI64();
            setAppIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // PACKAGE_NAME
          if (field.type == TType.STRING) {
            this.packageName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // DISPLAY_NAME
          if (field.type == TType.STRING) {
            this.displayName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // LEVEL1_CATEGORY_NAME
          if (field.type == TType.STRING) {
            this.level1CategoryName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // LEVEL2_CATEGORY_NAME
          if (field.type == TType.STRING) {
            this.level2CategoryName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // TAGS
          if (field.type == TType.LIST) {
            {
              TList _list4 = iprot.readListBegin();
              this.tags = new ArrayList<String>(_list4.size);
              for (int _i5 = 0; _i5 < _list4.size; ++_i5)
              {
                String _elem6;
                _elem6 = iprot.readString();
                this.tags.add(_elem6);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // DESC
          if (field.type == TType.STRING) {
            this.desc = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // BRIEF
          if (field.type == TType.STRING) {
            this.brief = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // DEVELOPER_APP_COUNT
          if (field.type == TType.I32) {
            this.developerAppCount = iprot.readI32();
            setDeveloperAppCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // APK_SIZE
          if (field.type == TType.I64) {
            this.apkSize = iprot.readI64();
            setApkSizeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // STAR
          if (field.type == TType.I32) {
            this.star = iprot.readI32();
            setStarIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // RANK_ORDER
          if (field.type == TType.I64) {
            this.rankOrder = iprot.readI64();
            setRankOrderIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // RANK_ORDER_FOR_PAD
          if (field.type == TType.I64) {
            this.rankOrderForPad = iprot.readI64();
            setRankOrderForPadIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // LAST_WEEK_UPDATE_COUNT
          if (field.type == TType.I32) {
            this.lastWeekUpdateCount = iprot.readI32();
            setLastWeekUpdateCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // LAST_MONTH_UPDATE_COUNT
          if (field.type == TType.I32) {
            this.lastMonthUpdateCount = iprot.readI32();
            setLastMonthUpdateCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // FAVORITE_COUNT
          if (field.type == TType.I32) {
            this.favoriteCount = iprot.readI32();
            setFavoriteCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // FEEDBACK_COUNT
          if (field.type == TType.I32) {
            this.feedbackCount = iprot.readI32();
            setFeedbackCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // PERMISSION_COUNT
          if (field.type == TType.I32) {
            this.permissionCount = iprot.readI32();
            setPermissionCountIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // CREATE_TIME
          if (field.type == TType.I64) {
            this.createTime = iprot.readI64();
            setCreateTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // BAD_CMT
          if (field.type == TType.I32) {
            this.badCmt = iprot.readI32();
            setBadCmtIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // GOOD_CMT
          if (field.type == TType.I32) {
            this.goodCmt = iprot.readI32();
            setGoodCmtIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 30: // YSTD_DOWNLOAD
          if (field.type == TType.I32) {
            this.ystdDownload = iprot.readI32();
            setYstdDownloadIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 31: // YSTD_INSTALL
          if (field.type == TType.I32) {
            this.ystdInstall = iprot.readI32();
            setYstdInstallIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 32: // YSTD_BROWSER
          if (field.type == TType.I32) {
            this.ystdBrowser = iprot.readI32();
            setYstdBrowserIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 33: // YSTD_ACTIVE
          if (field.type == TType.I32) {
            this.ystdActive = iprot.readI32();
            setYstdActiveIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 34: // LAST_WEEK_DOWNLOAD
          if (field.type == TType.I32) {
            this.lastWeekDownload = iprot.readI32();
            setLastWeekDownloadIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 35: // LAST_WEEK_INSTALL
          if (field.type == TType.I32) {
            this.lastWeekInstall = iprot.readI32();
            setLastWeekInstallIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 36: // LAST_WEEK_BROWSER
          if (field.type == TType.I32) {
            this.lastWeekBrowser = iprot.readI32();
            setLastWeekBrowserIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 37: // LAST_WEEK_ACTIVE
          if (field.type == TType.I32) {
            this.lastWeekActive = iprot.readI32();
            setLastWeekActiveIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 38: // LAST_MONTH_DOWNLOAD
          if (field.type == TType.I32) {
            this.lastMonthDownload = iprot.readI32();
            setLastMonthDownloadIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 39: // LAST_MONTH_INSTALL
          if (field.type == TType.I32) {
            this.lastMonthInstall = iprot.readI32();
            setLastMonthInstallIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 40: // LAST_MONTH_BROWSER
          if (field.type == TType.I32) {
            this.lastMonthBrowser = iprot.readI32();
            setLastMonthBrowserIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 41: // LAST_MONTH_ACTIVE
          if (field.type == TType.I32) {
            this.lastMonthActive = iprot.readI32();
            setLastMonthActiveIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 50: // DISPLAY_NAME_SEG
          if (field.type == TType.LIST) {
            {
              TList _list7 = iprot.readListBegin();
              this.displayNameSeg = new ArrayList<String>(_list7.size);
              for (int _i8 = 0; _i8 < _list7.size; ++_i8)
              {
                String _elem9;
                _elem9 = iprot.readString();
                this.displayNameSeg.add(_elem9);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 51: // DESC_SEG
          if (field.type == TType.LIST) {
            {
              TList _list10 = iprot.readListBegin();
              this.descSeg = new ArrayList<String>(_list10.size);
              for (int _i11 = 0; _i11 < _list10.size; ++_i11)
              {
                String _elem12;
                _elem12 = iprot.readString();
                this.descSeg.add(_elem12);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 52: // BRIEF_SEG
          if (field.type == TType.LIST) {
            {
              TList _list13 = iprot.readListBegin();
              this.briefSeg = new ArrayList<String>(_list13.size);
              for (int _i14 = 0; _i14 < _list13.size; ++_i14)
              {
                String _elem15;
                _elem15 = iprot.readString();
                this.briefSeg.add(_elem15);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 53: // COCLICK_TF_IDF
          if (field.type == TType.LIST) {
            {
              TList _list16 = iprot.readListBegin();
              this.coclickTfIdf = new ArrayList<String>(_list16.size);
              for (int _i17 = 0; _i17 < _list16.size; ++_i17)
              {
                String _elem18;
                _elem18 = iprot.readString();
                this.coclickTfIdf.add(_elem18);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 60: // APP_ACTIVE_RANK
          if (field.type == TType.DOUBLE) {
            this.appActiveRank = iprot.readDouble();
            setAppActiveRankIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 61: // APP_CDR
          if (field.type == TType.DOUBLE) {
            this.appCdr = iprot.readDouble();
            setAppCdrIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 62: // APP_DOWNLOAD_RANK
          if (field.type == TType.DOUBLE) {
            this.appDownloadRank = iprot.readDouble();
            setAppDownloadRankIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 63: // APP_HOT
          if (field.type == TType.DOUBLE) {
            this.appHot = iprot.readDouble();
            setAppHotIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 64: // APP_RANK
          if (field.type == TType.DOUBLE) {
            this.appRank = iprot.readDouble();
            setAppRankIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 65: // FOLDER_TAGS
          if (field.type == TType.LIST) {
            {
              TList _list19 = iprot.readListBegin();
              this.folderTags = new ArrayList<String>(_list19.size);
              for (int _i20 = 0; _i20 < _list19.size; ++_i20)
              {
                String _elem21;
                _elem21 = iprot.readString();
                this.folderTags.add(_elem21);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 66: // GAME_ARPU
          if (field.type == TType.DOUBLE) {
            this.gameArpu = iprot.readDouble();
            setGameArpuIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 67: // GAME_CDR
          if (field.type == TType.DOUBLE) {
            this.gameCdr = iprot.readDouble();
            setGameCdrIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 68: // GAME_RANK
          if (field.type == TType.DOUBLE) {
            this.gameRank = iprot.readDouble();
            setGameRankIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 69: // RATING_SCORE
          if (field.type == TType.DOUBLE) {
            this.ratingScore = iprot.readDouble();
            setRatingScoreIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 70: // KEYWORDS
          if (field.type == TType.LIST) {
            {
              TList _list22 = iprot.readListBegin();
              this.keywords = new ArrayList<String>(_list22.size);
              for (int _i23 = 0; _i23 < _list22.size; ++_i23)
              {
                String _elem24;
                _elem24 = iprot.readString();
                this.keywords.add(_elem24);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 71: // RELATED_TAGS
          if (field.type == TType.LIST) {
            {
              TList _list25 = iprot.readListBegin();
              this.relatedTags = new ArrayList<String>(_list25.size);
              for (int _i26 = 0; _i26 < _list25.size; ++_i26)
              {
                String _elem27;
                _elem27 = iprot.readString();
                this.relatedTags.add(_elem27);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 72: // SEARCH_KEYWORDS
          if (field.type == TType.LIST) {
            {
              TList _list28 = iprot.readListBegin();
              this.searchKeywords = new ArrayList<String>(_list28.size);
              for (int _i29 = 0; _i29 < _list28.size; ++_i29)
              {
                String _elem30;
                _elem30 = iprot.readString();
                this.searchKeywords.add(_elem30);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 73: // PUBLISHER
          if (field.type == TType.STRING) {
            this.publisher = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 74: // WDJ_CATEGORY
          if (field.type == TType.STRING) {
            this.wdjCategory = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 80: // GOOGLE_CATES
          if (field.type == TType.LIST) {
            {
              TList _list31 = iprot.readListBegin();
              this.googleCates = new ArrayList<Cate>(_list31.size);
              for (int _i32 = 0; _i32 < _list31.size; ++_i32)
              {
                Cate _elem33;
                _elem33 = new Cate();
                _elem33.read(iprot);
                this.googleCates.add(_elem33);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 81: // EMI_CATES
          if (field.type == TType.LIST) {
            {
              TList _list34 = iprot.readListBegin();
              this.emiCates = new ArrayList<Cate>(_list34.size);
              for (int _i35 = 0; _i35 < _list34.size; ++_i35)
              {
                Cate _elem36;
                _elem36 = new Cate();
                _elem36.read(iprot);
                this.emiCates.add(_elem36);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 83: // TOPICS
          if (field.type == TType.LIST) {
            {
              TList _list37 = iprot.readListBegin();
              this.topics = new ArrayList<Cate>(_list37.size);
              for (int _i38 = 0; _i38 < _list37.size; ++_i38)
              {
                Cate _elem39;
                _elem39 = new Cate();
                _elem39.read(iprot);
                this.topics.add(_elem39);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 90: // SIMILAR_APPS
          if (field.type == TType.LIST) {
            {
              TList _list40 = iprot.readListBegin();
              this.similarApps = new ArrayList<SimilarApp>(_list40.size);
              for (int _i41 = 0; _i41 < _list40.size; ++_i41)
              {
                SimilarApp _elem42;
                _elem42 = new SimilarApp();
                _elem42.read(iprot);
                this.similarApps.add(_elem42);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 91: // STORE_QUERIES
          if (field.type == TType.LIST) {
            {
              TList _list43 = iprot.readListBegin();
              this.storeQueries = new ArrayList<StoreQuery>(_list43.size);
              for (int _i44 = 0; _i44 < _list43.size; ++_i44)
              {
                StoreQuery _elem45;
                _elem45 = new StoreQuery();
                _elem45.read(iprot);
                this.storeQueries.add(_elem45);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 92: // BROWSER_QUERIES
          if (field.type == TType.LIST) {
            {
              TList _list46 = iprot.readListBegin();
              this.browserQueries = new ArrayList<BrowserQuery>(_list46.size);
              for (int _i47 = 0; _i47 < _list46.size; ++_i47)
              {
                BrowserQuery _elem48;
                _elem48 = new BrowserQuery();
                _elem48.read(iprot);
                this.browserQueries.add(_elem48);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 93: // SPECIAL_WORDS
          if (field.type == TType.LIST) {
            {
              TList _list49 = iprot.readListBegin();
              this.specialWords = new ArrayList<SpecialWord>(_list49.size);
              for (int _i50 = 0; _i50 < _list49.size; ++_i50)
              {
                SpecialWord _elem51;
                _elem51 = new SpecialWord();
                _elem51.read(iprot);
                this.specialWords.add(_elem51);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (isSetAppId()) {
      oprot.writeFieldBegin(APP_ID_FIELD_DESC);
      oprot.writeI64(this.appId);
      oprot.writeFieldEnd();
    }
    if (this.packageName != null) {
      if (isSetPackageName()) {
        oprot.writeFieldBegin(PACKAGE_NAME_FIELD_DESC);
        oprot.writeString(this.packageName);
        oprot.writeFieldEnd();
      }
    }
    if (this.displayName != null) {
      if (isSetDisplayName()) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(this.displayName);
        oprot.writeFieldEnd();
      }
    }
    if (this.level1CategoryName != null) {
      if (isSetLevel1CategoryName()) {
        oprot.writeFieldBegin(LEVEL1_CATEGORY_NAME_FIELD_DESC);
        oprot.writeString(this.level1CategoryName);
        oprot.writeFieldEnd();
      }
    }
    if (this.level2CategoryName != null) {
      if (isSetLevel2CategoryName()) {
        oprot.writeFieldBegin(LEVEL2_CATEGORY_NAME_FIELD_DESC);
        oprot.writeString(this.level2CategoryName);
        oprot.writeFieldEnd();
      }
    }
    if (this.tags != null) {
      if (isSetTags()) {
        oprot.writeFieldBegin(TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.tags.size()));
          for (String _iter52 : this.tags)
          {
            oprot.writeString(_iter52);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.desc != null) {
      if (isSetDesc()) {
        oprot.writeFieldBegin(DESC_FIELD_DESC);
        oprot.writeString(this.desc);
        oprot.writeFieldEnd();
      }
    }
    if (this.brief != null) {
      if (isSetBrief()) {
        oprot.writeFieldBegin(BRIEF_FIELD_DESC);
        oprot.writeString(this.brief);
        oprot.writeFieldEnd();
      }
    }
    if (isSetDeveloperAppCount()) {
      oprot.writeFieldBegin(DEVELOPER_APP_COUNT_FIELD_DESC);
      oprot.writeI32(this.developerAppCount);
      oprot.writeFieldEnd();
    }
    if (isSetApkSize()) {
      oprot.writeFieldBegin(APK_SIZE_FIELD_DESC);
      oprot.writeI64(this.apkSize);
      oprot.writeFieldEnd();
    }
    if (isSetStar()) {
      oprot.writeFieldBegin(STAR_FIELD_DESC);
      oprot.writeI32(this.star);
      oprot.writeFieldEnd();
    }
    if (isSetRankOrder()) {
      oprot.writeFieldBegin(RANK_ORDER_FIELD_DESC);
      oprot.writeI64(this.rankOrder);
      oprot.writeFieldEnd();
    }
    if (isSetRankOrderForPad()) {
      oprot.writeFieldBegin(RANK_ORDER_FOR_PAD_FIELD_DESC);
      oprot.writeI64(this.rankOrderForPad);
      oprot.writeFieldEnd();
    }
    if (isSetLastWeekUpdateCount()) {
      oprot.writeFieldBegin(LAST_WEEK_UPDATE_COUNT_FIELD_DESC);
      oprot.writeI32(this.lastWeekUpdateCount);
      oprot.writeFieldEnd();
    }
    if (isSetLastMonthUpdateCount()) {
      oprot.writeFieldBegin(LAST_MONTH_UPDATE_COUNT_FIELD_DESC);
      oprot.writeI32(this.lastMonthUpdateCount);
      oprot.writeFieldEnd();
    }
    if (isSetFavoriteCount()) {
      oprot.writeFieldBegin(FAVORITE_COUNT_FIELD_DESC);
      oprot.writeI32(this.favoriteCount);
      oprot.writeFieldEnd();
    }
    if (isSetFeedbackCount()) {
      oprot.writeFieldBegin(FEEDBACK_COUNT_FIELD_DESC);
      oprot.writeI32(this.feedbackCount);
      oprot.writeFieldEnd();
    }
    if (isSetPermissionCount()) {
      oprot.writeFieldBegin(PERMISSION_COUNT_FIELD_DESC);
      oprot.writeI32(this.permissionCount);
      oprot.writeFieldEnd();
    }
    if (isSetCreateTime()) {
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(this.createTime);
      oprot.writeFieldEnd();
    }
    if (isSetBadCmt()) {
      oprot.writeFieldBegin(BAD_CMT_FIELD_DESC);
      oprot.writeI32(this.badCmt);
      oprot.writeFieldEnd();
    }
    if (isSetGoodCmt()) {
      oprot.writeFieldBegin(GOOD_CMT_FIELD_DESC);
      oprot.writeI32(this.goodCmt);
      oprot.writeFieldEnd();
    }
    if (isSetYstdDownload()) {
      oprot.writeFieldBegin(YSTD_DOWNLOAD_FIELD_DESC);
      oprot.writeI32(this.ystdDownload);
      oprot.writeFieldEnd();
    }
    if (isSetYstdInstall()) {
      oprot.writeFieldBegin(YSTD_INSTALL_FIELD_DESC);
      oprot.writeI32(this.ystdInstall);
      oprot.writeFieldEnd();
    }
    if (isSetYstdBrowser()) {
      oprot.writeFieldBegin(YSTD_BROWSER_FIELD_DESC);
      oprot.writeI32(this.ystdBrowser);
      oprot.writeFieldEnd();
    }
    if (isSetYstdActive()) {
      oprot.writeFieldBegin(YSTD_ACTIVE_FIELD_DESC);
      oprot.writeI32(this.ystdActive);
      oprot.writeFieldEnd();
    }
    if (isSetLastWeekDownload()) {
      oprot.writeFieldBegin(LAST_WEEK_DOWNLOAD_FIELD_DESC);
      oprot.writeI32(this.lastWeekDownload);
      oprot.writeFieldEnd();
    }
    if (isSetLastWeekInstall()) {
      oprot.writeFieldBegin(LAST_WEEK_INSTALL_FIELD_DESC);
      oprot.writeI32(this.lastWeekInstall);
      oprot.writeFieldEnd();
    }
    if (isSetLastWeekBrowser()) {
      oprot.writeFieldBegin(LAST_WEEK_BROWSER_FIELD_DESC);
      oprot.writeI32(this.lastWeekBrowser);
      oprot.writeFieldEnd();
    }
    if (isSetLastWeekActive()) {
      oprot.writeFieldBegin(LAST_WEEK_ACTIVE_FIELD_DESC);
      oprot.writeI32(this.lastWeekActive);
      oprot.writeFieldEnd();
    }
    if (isSetLastMonthDownload()) {
      oprot.writeFieldBegin(LAST_MONTH_DOWNLOAD_FIELD_DESC);
      oprot.writeI32(this.lastMonthDownload);
      oprot.writeFieldEnd();
    }
    if (isSetLastMonthInstall()) {
      oprot.writeFieldBegin(LAST_MONTH_INSTALL_FIELD_DESC);
      oprot.writeI32(this.lastMonthInstall);
      oprot.writeFieldEnd();
    }
    if (isSetLastMonthBrowser()) {
      oprot.writeFieldBegin(LAST_MONTH_BROWSER_FIELD_DESC);
      oprot.writeI32(this.lastMonthBrowser);
      oprot.writeFieldEnd();
    }
    if (isSetLastMonthActive()) {
      oprot.writeFieldBegin(LAST_MONTH_ACTIVE_FIELD_DESC);
      oprot.writeI32(this.lastMonthActive);
      oprot.writeFieldEnd();
    }
    if (this.displayNameSeg != null) {
      if (isSetDisplayNameSeg()) {
        oprot.writeFieldBegin(DISPLAY_NAME_SEG_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.displayNameSeg.size()));
          for (String _iter53 : this.displayNameSeg)
          {
            oprot.writeString(_iter53);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.descSeg != null) {
      if (isSetDescSeg()) {
        oprot.writeFieldBegin(DESC_SEG_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.descSeg.size()));
          for (String _iter54 : this.descSeg)
          {
            oprot.writeString(_iter54);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.briefSeg != null) {
      if (isSetBriefSeg()) {
        oprot.writeFieldBegin(BRIEF_SEG_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.briefSeg.size()));
          for (String _iter55 : this.briefSeg)
          {
            oprot.writeString(_iter55);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.coclickTfIdf != null) {
      if (isSetCoclickTfIdf()) {
        oprot.writeFieldBegin(COCLICK_TF_IDF_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.coclickTfIdf.size()));
          for (String _iter56 : this.coclickTfIdf)
          {
            oprot.writeString(_iter56);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (isSetAppActiveRank()) {
      oprot.writeFieldBegin(APP_ACTIVE_RANK_FIELD_DESC);
      oprot.writeDouble(this.appActiveRank);
      oprot.writeFieldEnd();
    }
    if (isSetAppCdr()) {
      oprot.writeFieldBegin(APP_CDR_FIELD_DESC);
      oprot.writeDouble(this.appCdr);
      oprot.writeFieldEnd();
    }
    if (isSetAppDownloadRank()) {
      oprot.writeFieldBegin(APP_DOWNLOAD_RANK_FIELD_DESC);
      oprot.writeDouble(this.appDownloadRank);
      oprot.writeFieldEnd();
    }
    if (isSetAppHot()) {
      oprot.writeFieldBegin(APP_HOT_FIELD_DESC);
      oprot.writeDouble(this.appHot);
      oprot.writeFieldEnd();
    }
    if (isSetAppRank()) {
      oprot.writeFieldBegin(APP_RANK_FIELD_DESC);
      oprot.writeDouble(this.appRank);
      oprot.writeFieldEnd();
    }
    if (this.folderTags != null) {
      if (isSetFolderTags()) {
        oprot.writeFieldBegin(FOLDER_TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.folderTags.size()));
          for (String _iter57 : this.folderTags)
          {
            oprot.writeString(_iter57);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (isSetGameArpu()) {
      oprot.writeFieldBegin(GAME_ARPU_FIELD_DESC);
      oprot.writeDouble(this.gameArpu);
      oprot.writeFieldEnd();
    }
    if (isSetGameCdr()) {
      oprot.writeFieldBegin(GAME_CDR_FIELD_DESC);
      oprot.writeDouble(this.gameCdr);
      oprot.writeFieldEnd();
    }
    if (isSetGameRank()) {
      oprot.writeFieldBegin(GAME_RANK_FIELD_DESC);
      oprot.writeDouble(this.gameRank);
      oprot.writeFieldEnd();
    }
    if (isSetRatingScore()) {
      oprot.writeFieldBegin(RATING_SCORE_FIELD_DESC);
      oprot.writeDouble(this.ratingScore);
      oprot.writeFieldEnd();
    }
    if (this.keywords != null) {
      if (isSetKeywords()) {
        oprot.writeFieldBegin(KEYWORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.keywords.size()));
          for (String _iter58 : this.keywords)
          {
            oprot.writeString(_iter58);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.relatedTags != null) {
      if (isSetRelatedTags()) {
        oprot.writeFieldBegin(RELATED_TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.relatedTags.size()));
          for (String _iter59 : this.relatedTags)
          {
            oprot.writeString(_iter59);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.searchKeywords != null) {
      if (isSetSearchKeywords()) {
        oprot.writeFieldBegin(SEARCH_KEYWORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.searchKeywords.size()));
          for (String _iter60 : this.searchKeywords)
          {
            oprot.writeString(_iter60);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.publisher != null) {
      if (isSetPublisher()) {
        oprot.writeFieldBegin(PUBLISHER_FIELD_DESC);
        oprot.writeString(this.publisher);
        oprot.writeFieldEnd();
      }
    }
    if (this.wdjCategory != null) {
      if (isSetWdjCategory()) {
        oprot.writeFieldBegin(WDJ_CATEGORY_FIELD_DESC);
        oprot.writeString(this.wdjCategory);
        oprot.writeFieldEnd();
      }
    }
    if (this.googleCates != null) {
      if (isSetGoogleCates()) {
        oprot.writeFieldBegin(GOOGLE_CATES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.googleCates.size()));
          for (Cate _iter61 : this.googleCates)
          {
            _iter61.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.emiCates != null) {
      if (isSetEmiCates()) {
        oprot.writeFieldBegin(EMI_CATES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.emiCates.size()));
          for (Cate _iter62 : this.emiCates)
          {
            _iter62.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.topics != null) {
      if (isSetTopics()) {
        oprot.writeFieldBegin(TOPICS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.topics.size()));
          for (Cate _iter63 : this.topics)
          {
            _iter63.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.similarApps != null) {
      if (isSetSimilarApps()) {
        oprot.writeFieldBegin(SIMILAR_APPS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.similarApps.size()));
          for (SimilarApp _iter64 : this.similarApps)
          {
            _iter64.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.storeQueries != null) {
      if (isSetStoreQueries()) {
        oprot.writeFieldBegin(STORE_QUERIES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.storeQueries.size()));
          for (StoreQuery _iter65 : this.storeQueries)
          {
            _iter65.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.browserQueries != null) {
      if (isSetBrowserQueries()) {
        oprot.writeFieldBegin(BROWSER_QUERIES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.browserQueries.size()));
          for (BrowserQuery _iter66 : this.browserQueries)
          {
            _iter66.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.specialWords != null) {
      if (isSetSpecialWords()) {
        oprot.writeFieldBegin(SPECIAL_WORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.specialWords.size()));
          for (SpecialWord _iter67 : this.specialWords)
          {
            _iter67.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AppExt(");
    boolean first = true;

    if (isSetAppId()) {
      sb.append("appId:");
      sb.append(this.appId);
      first = false;
    }
    if (isSetPackageName()) {
      if (!first) sb.append(", ");
      sb.append("packageName:");
      if (this.packageName == null) {
        sb.append("null");
      } else {
        sb.append(this.packageName);
      }
      first = false;
    }
    if (isSetDisplayName()) {
      if (!first) sb.append(", ");
      sb.append("displayName:");
      if (this.displayName == null) {
        sb.append("null");
      } else {
        sb.append(this.displayName);
      }
      first = false;
    }
    if (isSetLevel1CategoryName()) {
      if (!first) sb.append(", ");
      sb.append("level1CategoryName:");
      if (this.level1CategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.level1CategoryName);
      }
      first = false;
    }
    if (isSetLevel2CategoryName()) {
      if (!first) sb.append(", ");
      sb.append("level2CategoryName:");
      if (this.level2CategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.level2CategoryName);
      }
      first = false;
    }
    if (isSetTags()) {
      if (!first) sb.append(", ");
      sb.append("tags:");
      if (this.tags == null) {
        sb.append("null");
      } else {
        sb.append(this.tags);
      }
      first = false;
    }
    if (isSetDesc()) {
      if (!first) sb.append(", ");
      sb.append("desc:");
      if (this.desc == null) {
        sb.append("null");
      } else {
        sb.append(this.desc);
      }
      first = false;
    }
    if (isSetBrief()) {
      if (!first) sb.append(", ");
      sb.append("brief:");
      if (this.brief == null) {
        sb.append("null");
      } else {
        sb.append(this.brief);
      }
      first = false;
    }
    if (isSetDeveloperAppCount()) {
      if (!first) sb.append(", ");
      sb.append("developerAppCount:");
      sb.append(this.developerAppCount);
      first = false;
    }
    if (isSetApkSize()) {
      if (!first) sb.append(", ");
      sb.append("apkSize:");
      sb.append(this.apkSize);
      first = false;
    }
    if (isSetStar()) {
      if (!first) sb.append(", ");
      sb.append("star:");
      sb.append(this.star);
      first = false;
    }
    if (isSetRankOrder()) {
      if (!first) sb.append(", ");
      sb.append("rankOrder:");
      sb.append(this.rankOrder);
      first = false;
    }
    if (isSetRankOrderForPad()) {
      if (!first) sb.append(", ");
      sb.append("rankOrderForPad:");
      sb.append(this.rankOrderForPad);
      first = false;
    }
    if (isSetLastWeekUpdateCount()) {
      if (!first) sb.append(", ");
      sb.append("lastWeekUpdateCount:");
      sb.append(this.lastWeekUpdateCount);
      first = false;
    }
    if (isSetLastMonthUpdateCount()) {
      if (!first) sb.append(", ");
      sb.append("lastMonthUpdateCount:");
      sb.append(this.lastMonthUpdateCount);
      first = false;
    }
    if (isSetFavoriteCount()) {
      if (!first) sb.append(", ");
      sb.append("favoriteCount:");
      sb.append(this.favoriteCount);
      first = false;
    }
    if (isSetFeedbackCount()) {
      if (!first) sb.append(", ");
      sb.append("feedbackCount:");
      sb.append(this.feedbackCount);
      first = false;
    }
    if (isSetPermissionCount()) {
      if (!first) sb.append(", ");
      sb.append("permissionCount:");
      sb.append(this.permissionCount);
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      sb.append(this.createTime);
      first = false;
    }
    if (isSetBadCmt()) {
      if (!first) sb.append(", ");
      sb.append("badCmt:");
      sb.append(this.badCmt);
      first = false;
    }
    if (isSetGoodCmt()) {
      if (!first) sb.append(", ");
      sb.append("goodCmt:");
      sb.append(this.goodCmt);
      first = false;
    }
    if (isSetYstdDownload()) {
      if (!first) sb.append(", ");
      sb.append("ystdDownload:");
      sb.append(this.ystdDownload);
      first = false;
    }
    if (isSetYstdInstall()) {
      if (!first) sb.append(", ");
      sb.append("ystdInstall:");
      sb.append(this.ystdInstall);
      first = false;
    }
    if (isSetYstdBrowser()) {
      if (!first) sb.append(", ");
      sb.append("ystdBrowser:");
      sb.append(this.ystdBrowser);
      first = false;
    }
    if (isSetYstdActive()) {
      if (!first) sb.append(", ");
      sb.append("ystdActive:");
      sb.append(this.ystdActive);
      first = false;
    }
    if (isSetLastWeekDownload()) {
      if (!first) sb.append(", ");
      sb.append("lastWeekDownload:");
      sb.append(this.lastWeekDownload);
      first = false;
    }
    if (isSetLastWeekInstall()) {
      if (!first) sb.append(", ");
      sb.append("lastWeekInstall:");
      sb.append(this.lastWeekInstall);
      first = false;
    }
    if (isSetLastWeekBrowser()) {
      if (!first) sb.append(", ");
      sb.append("lastWeekBrowser:");
      sb.append(this.lastWeekBrowser);
      first = false;
    }
    if (isSetLastWeekActive()) {
      if (!first) sb.append(", ");
      sb.append("lastWeekActive:");
      sb.append(this.lastWeekActive);
      first = false;
    }
    if (isSetLastMonthDownload()) {
      if (!first) sb.append(", ");
      sb.append("lastMonthDownload:");
      sb.append(this.lastMonthDownload);
      first = false;
    }
    if (isSetLastMonthInstall()) {
      if (!first) sb.append(", ");
      sb.append("lastMonthInstall:");
      sb.append(this.lastMonthInstall);
      first = false;
    }
    if (isSetLastMonthBrowser()) {
      if (!first) sb.append(", ");
      sb.append("lastMonthBrowser:");
      sb.append(this.lastMonthBrowser);
      first = false;
    }
    if (isSetLastMonthActive()) {
      if (!first) sb.append(", ");
      sb.append("lastMonthActive:");
      sb.append(this.lastMonthActive);
      first = false;
    }
    if (isSetDisplayNameSeg()) {
      if (!first) sb.append(", ");
      sb.append("displayNameSeg:");
      if (this.displayNameSeg == null) {
        sb.append("null");
      } else {
        sb.append(this.displayNameSeg);
      }
      first = false;
    }
    if (isSetDescSeg()) {
      if (!first) sb.append(", ");
      sb.append("descSeg:");
      if (this.descSeg == null) {
        sb.append("null");
      } else {
        sb.append(this.descSeg);
      }
      first = false;
    }
    if (isSetBriefSeg()) {
      if (!first) sb.append(", ");
      sb.append("briefSeg:");
      if (this.briefSeg == null) {
        sb.append("null");
      } else {
        sb.append(this.briefSeg);
      }
      first = false;
    }
    if (isSetCoclickTfIdf()) {
      if (!first) sb.append(", ");
      sb.append("coclickTfIdf:");
      if (this.coclickTfIdf == null) {
        sb.append("null");
      } else {
        sb.append(this.coclickTfIdf);
      }
      first = false;
    }
    if (isSetAppActiveRank()) {
      if (!first) sb.append(", ");
      sb.append("appActiveRank:");
      sb.append(this.appActiveRank);
      first = false;
    }
    if (isSetAppCdr()) {
      if (!first) sb.append(", ");
      sb.append("appCdr:");
      sb.append(this.appCdr);
      first = false;
    }
    if (isSetAppDownloadRank()) {
      if (!first) sb.append(", ");
      sb.append("appDownloadRank:");
      sb.append(this.appDownloadRank);
      first = false;
    }
    if (isSetAppHot()) {
      if (!first) sb.append(", ");
      sb.append("appHot:");
      sb.append(this.appHot);
      first = false;
    }
    if (isSetAppRank()) {
      if (!first) sb.append(", ");
      sb.append("appRank:");
      sb.append(this.appRank);
      first = false;
    }
    if (isSetFolderTags()) {
      if (!first) sb.append(", ");
      sb.append("folderTags:");
      if (this.folderTags == null) {
        sb.append("null");
      } else {
        sb.append(this.folderTags);
      }
      first = false;
    }
    if (isSetGameArpu()) {
      if (!first) sb.append(", ");
      sb.append("gameArpu:");
      sb.append(this.gameArpu);
      first = false;
    }
    if (isSetGameCdr()) {
      if (!first) sb.append(", ");
      sb.append("gameCdr:");
      sb.append(this.gameCdr);
      first = false;
    }
    if (isSetGameRank()) {
      if (!first) sb.append(", ");
      sb.append("gameRank:");
      sb.append(this.gameRank);
      first = false;
    }
    if (isSetRatingScore()) {
      if (!first) sb.append(", ");
      sb.append("ratingScore:");
      sb.append(this.ratingScore);
      first = false;
    }
    if (isSetKeywords()) {
      if (!first) sb.append(", ");
      sb.append("keywords:");
      if (this.keywords == null) {
        sb.append("null");
      } else {
        sb.append(this.keywords);
      }
      first = false;
    }
    if (isSetRelatedTags()) {
      if (!first) sb.append(", ");
      sb.append("relatedTags:");
      if (this.relatedTags == null) {
        sb.append("null");
      } else {
        sb.append(this.relatedTags);
      }
      first = false;
    }
    if (isSetSearchKeywords()) {
      if (!first) sb.append(", ");
      sb.append("searchKeywords:");
      if (this.searchKeywords == null) {
        sb.append("null");
      } else {
        sb.append(this.searchKeywords);
      }
      first = false;
    }
    if (isSetPublisher()) {
      if (!first) sb.append(", ");
      sb.append("publisher:");
      if (this.publisher == null) {
        sb.append("null");
      } else {
        sb.append(this.publisher);
      }
      first = false;
    }
    if (isSetWdjCategory()) {
      if (!first) sb.append(", ");
      sb.append("wdjCategory:");
      if (this.wdjCategory == null) {
        sb.append("null");
      } else {
        sb.append(this.wdjCategory);
      }
      first = false;
    }
    if (isSetGoogleCates()) {
      if (!first) sb.append(", ");
      sb.append("googleCates:");
      if (this.googleCates == null) {
        sb.append("null");
      } else {
        sb.append(this.googleCates);
      }
      first = false;
    }
    if (isSetEmiCates()) {
      if (!first) sb.append(", ");
      sb.append("emiCates:");
      if (this.emiCates == null) {
        sb.append("null");
      } else {
        sb.append(this.emiCates);
      }
      first = false;
    }
    if (isSetTopics()) {
      if (!first) sb.append(", ");
      sb.append("topics:");
      if (this.topics == null) {
        sb.append("null");
      } else {
        sb.append(this.topics);
      }
      first = false;
    }
    if (isSetSimilarApps()) {
      if (!first) sb.append(", ");
      sb.append("similarApps:");
      if (this.similarApps == null) {
        sb.append("null");
      } else {
        sb.append(this.similarApps);
      }
      first = false;
    }
    if (isSetStoreQueries()) {
      if (!first) sb.append(", ");
      sb.append("storeQueries:");
      if (this.storeQueries == null) {
        sb.append("null");
      } else {
        sb.append(this.storeQueries);
      }
      first = false;
    }
    if (isSetBrowserQueries()) {
      if (!first) sb.append(", ");
      sb.append("browserQueries:");
      if (this.browserQueries == null) {
        sb.append("null");
      } else {
        sb.append(this.browserQueries);
      }
      first = false;
    }
    if (isSetSpecialWords()) {
      if (!first) sb.append(", ");
      sb.append("specialWords:");
      if (this.specialWords == null) {
        sb.append("null");
      } else {
        sb.append(this.specialWords);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

