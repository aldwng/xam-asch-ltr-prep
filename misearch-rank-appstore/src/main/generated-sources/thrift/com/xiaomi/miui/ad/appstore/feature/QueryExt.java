/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.xiaomi.miui.ad.appstore.feature;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class QueryExt implements TBase<QueryExt, QueryExt._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("QueryExt");

  private static final TField QUERY_FIELD_DESC = new TField("query", TType.STRING, (short)1);
  private static final TField EXTS_FIELD_DESC = new TField("exts", TType.LIST, (short)2);
  private static final TField EXT_TF_IDF_FIELD_DESC = new TField("extTfIdf", TType.LIST, (short)3);
  private static final TField APP_LEVEL1_CATEGORY_NAME_FIELD_DESC = new TField("appLevel1CategoryName", TType.LIST, (short)4);
  private static final TField APP_LEVEL2_CATEGORY_NAME_FIELD_DESC = new TField("appLevel2CategoryName", TType.LIST, (short)5);
  private static final TField APP_TAGS_FIELD_DESC = new TField("appTags", TType.LIST, (short)6);
  private static final TField APP_IDS_FIELD_DESC = new TField("appIds", TType.LIST, (short)7);
  private static final TField KEYWORDS_FIELD_DESC = new TField("keywords", TType.LIST, (short)8);
  private static final TField RELATED_TAGS_FIELD_DESC = new TField("relatedTags", TType.LIST, (short)9);
  private static final TField FOLDER_TAGS_FIELD_DESC = new TField("folderTags", TType.LIST, (short)10);
  private static final TField SEARCH_KEYWORDS_FIELD_DESC = new TField("searchKeywords", TType.LIST, (short)11);
  private static final TField DISPLAY_NAMES_FIELD_DESC = new TField("displayNames", TType.LIST, (short)12);
  private static final TField PUBLISHER_FIELD_DESC = new TField("publisher", TType.LIST, (short)13);
  private static final TField GOOGLE_CATES_FIELD_DESC = new TField("googleCates", TType.LIST, (short)14);

  private String query;
  private List<QueryExtItem> exts;
  private List<String> extTfIdf;
  private List<String> appLevel1CategoryName;
  private List<String> appLevel2CategoryName;
  private List<String> appTags;
  private List<Long> appIds;
  private List<String> keywords;
  private List<String> relatedTags;
  private List<String> folderTags;
  private List<String> searchKeywords;
  private List<String> displayNames;
  private List<String> publisher;
  private List<Integer> googleCates;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    QUERY((short)1, "query"),
    EXTS((short)2, "exts"),
    EXT_TF_IDF((short)3, "extTfIdf"),
    APP_LEVEL1_CATEGORY_NAME((short)4, "appLevel1CategoryName"),
    APP_LEVEL2_CATEGORY_NAME((short)5, "appLevel2CategoryName"),
    APP_TAGS((short)6, "appTags"),
    APP_IDS((short)7, "appIds"),
    KEYWORDS((short)8, "keywords"),
    RELATED_TAGS((short)9, "relatedTags"),
    FOLDER_TAGS((short)10, "folderTags"),
    SEARCH_KEYWORDS((short)11, "searchKeywords"),
    DISPLAY_NAMES((short)12, "displayNames"),
    PUBLISHER((short)13, "publisher"),
    GOOGLE_CATES((short)14, "googleCates");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // QUERY
          return QUERY;
        case 2: // EXTS
          return EXTS;
        case 3: // EXT_TF_IDF
          return EXT_TF_IDF;
        case 4: // APP_LEVEL1_CATEGORY_NAME
          return APP_LEVEL1_CATEGORY_NAME;
        case 5: // APP_LEVEL2_CATEGORY_NAME
          return APP_LEVEL2_CATEGORY_NAME;
        case 6: // APP_TAGS
          return APP_TAGS;
        case 7: // APP_IDS
          return APP_IDS;
        case 8: // KEYWORDS
          return KEYWORDS;
        case 9: // RELATED_TAGS
          return RELATED_TAGS;
        case 10: // FOLDER_TAGS
          return FOLDER_TAGS;
        case 11: // SEARCH_KEYWORDS
          return SEARCH_KEYWORDS;
        case 12: // DISPLAY_NAMES
          return DISPLAY_NAMES;
        case 13: // PUBLISHER
          return PUBLISHER;
        case 14: // GOOGLE_CATES
          return GOOGLE_CATES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.QUERY, new FieldMetaData("query", TFieldRequirementType.OPTIONAL, 
        new FieldValueMetaData(TType.STRING)));
    tmpMap.put(_Fields.EXTS, new FieldMetaData("exts", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new StructMetaData(TType.STRUCT, QueryExtItem.class))));
    tmpMap.put(_Fields.EXT_TF_IDF, new FieldMetaData("extTfIdf", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.APP_LEVEL1_CATEGORY_NAME, new FieldMetaData("appLevel1CategoryName", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.APP_LEVEL2_CATEGORY_NAME, new FieldMetaData("appLevel2CategoryName", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.APP_TAGS, new FieldMetaData("appTags", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.APP_IDS, new FieldMetaData("appIds", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.I64))));
    tmpMap.put(_Fields.KEYWORDS, new FieldMetaData("keywords", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.RELATED_TAGS, new FieldMetaData("relatedTags", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.FOLDER_TAGS, new FieldMetaData("folderTags", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.SEARCH_KEYWORDS, new FieldMetaData("searchKeywords", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.DISPLAY_NAMES, new FieldMetaData("displayNames", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.PUBLISHER, new FieldMetaData("publisher", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    tmpMap.put(_Fields.GOOGLE_CATES, new FieldMetaData("googleCates", TFieldRequirementType.OPTIONAL, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.I32))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(QueryExt.class, metaDataMap);
  }

  public QueryExt() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueryExt(QueryExt other) {
    if (other.isSetQuery()) {
      this.query = other.query;
    }
    if (other.isSetExts()) {
      List<QueryExtItem> __this__exts = new ArrayList<QueryExtItem>();
      for (QueryExtItem other_element : other.exts) {
        __this__exts.add(new QueryExtItem(other_element));
      }
      this.exts = __this__exts;
    }
    if (other.isSetExtTfIdf()) {
      List<String> __this__extTfIdf = new ArrayList<String>();
      for (String other_element : other.extTfIdf) {
        __this__extTfIdf.add(other_element);
      }
      this.extTfIdf = __this__extTfIdf;
    }
    if (other.isSetAppLevel1CategoryName()) {
      List<String> __this__appLevel1CategoryName = new ArrayList<String>();
      for (String other_element : other.appLevel1CategoryName) {
        __this__appLevel1CategoryName.add(other_element);
      }
      this.appLevel1CategoryName = __this__appLevel1CategoryName;
    }
    if (other.isSetAppLevel2CategoryName()) {
      List<String> __this__appLevel2CategoryName = new ArrayList<String>();
      for (String other_element : other.appLevel2CategoryName) {
        __this__appLevel2CategoryName.add(other_element);
      }
      this.appLevel2CategoryName = __this__appLevel2CategoryName;
    }
    if (other.isSetAppTags()) {
      List<String> __this__appTags = new ArrayList<String>();
      for (String other_element : other.appTags) {
        __this__appTags.add(other_element);
      }
      this.appTags = __this__appTags;
    }
    if (other.isSetAppIds()) {
      List<Long> __this__appIds = new ArrayList<Long>();
      for (Long other_element : other.appIds) {
        __this__appIds.add(other_element);
      }
      this.appIds = __this__appIds;
    }
    if (other.isSetKeywords()) {
      List<String> __this__keywords = new ArrayList<String>();
      for (String other_element : other.keywords) {
        __this__keywords.add(other_element);
      }
      this.keywords = __this__keywords;
    }
    if (other.isSetRelatedTags()) {
      List<String> __this__relatedTags = new ArrayList<String>();
      for (String other_element : other.relatedTags) {
        __this__relatedTags.add(other_element);
      }
      this.relatedTags = __this__relatedTags;
    }
    if (other.isSetFolderTags()) {
      List<String> __this__folderTags = new ArrayList<String>();
      for (String other_element : other.folderTags) {
        __this__folderTags.add(other_element);
      }
      this.folderTags = __this__folderTags;
    }
    if (other.isSetSearchKeywords()) {
      List<String> __this__searchKeywords = new ArrayList<String>();
      for (String other_element : other.searchKeywords) {
        __this__searchKeywords.add(other_element);
      }
      this.searchKeywords = __this__searchKeywords;
    }
    if (other.isSetDisplayNames()) {
      List<String> __this__displayNames = new ArrayList<String>();
      for (String other_element : other.displayNames) {
        __this__displayNames.add(other_element);
      }
      this.displayNames = __this__displayNames;
    }
    if (other.isSetPublisher()) {
      List<String> __this__publisher = new ArrayList<String>();
      for (String other_element : other.publisher) {
        __this__publisher.add(other_element);
      }
      this.publisher = __this__publisher;
    }
    if (other.isSetGoogleCates()) {
      List<Integer> __this__googleCates = new ArrayList<Integer>();
      for (Integer other_element : other.googleCates) {
        __this__googleCates.add(other_element);
      }
      this.googleCates = __this__googleCates;
    }
  }

  public QueryExt deepCopy() {
    return new QueryExt(this);
  }

  @Override
  public void clear() {
    this.query = null;
    this.exts = null;
    this.extTfIdf = null;
    this.appLevel1CategoryName = null;
    this.appLevel2CategoryName = null;
    this.appTags = null;
    this.appIds = null;
    this.keywords = null;
    this.relatedTags = null;
    this.folderTags = null;
    this.searchKeywords = null;
    this.displayNames = null;
    this.publisher = null;
    this.googleCates = null;
  }

  public String getQuery() {
    return this.query;
  }

  public QueryExt setQuery(String query) {
    this.query = query;
    return this;
  }

  public void unsetQuery() {
    this.query = null;
  }

  /** Returns true if field query is set (has been asigned a value) and false otherwise */
  public boolean isSetQuery() {
    return this.query != null;
  }

  public void setQueryIsSet(boolean value) {
    if (!value) {
      this.query = null;
    }
  }

  public int getExtsSize() {
    return (this.exts == null) ? 0 : this.exts.size();
  }

  public java.util.Iterator<QueryExtItem> getExtsIterator() {
    return (this.exts == null) ? null : this.exts.iterator();
  }

  public void addToExts(QueryExtItem elem) {
    if (this.exts == null) {
      this.exts = new ArrayList<QueryExtItem>();
    }
    this.exts.add(elem);
  }

  public List<QueryExtItem> getExts() {
    return this.exts;
  }

  public QueryExt setExts(List<QueryExtItem> exts) {
    this.exts = exts;
    return this;
  }

  public void unsetExts() {
    this.exts = null;
  }

  /** Returns true if field exts is set (has been asigned a value) and false otherwise */
  public boolean isSetExts() {
    return this.exts != null;
  }

  public void setExtsIsSet(boolean value) {
    if (!value) {
      this.exts = null;
    }
  }

  public int getExtTfIdfSize() {
    return (this.extTfIdf == null) ? 0 : this.extTfIdf.size();
  }

  public java.util.Iterator<String> getExtTfIdfIterator() {
    return (this.extTfIdf == null) ? null : this.extTfIdf.iterator();
  }

  public void addToExtTfIdf(String elem) {
    if (this.extTfIdf == null) {
      this.extTfIdf = new ArrayList<String>();
    }
    this.extTfIdf.add(elem);
  }

  public List<String> getExtTfIdf() {
    return this.extTfIdf;
  }

  public QueryExt setExtTfIdf(List<String> extTfIdf) {
    this.extTfIdf = extTfIdf;
    return this;
  }

  public void unsetExtTfIdf() {
    this.extTfIdf = null;
  }

  /** Returns true if field extTfIdf is set (has been asigned a value) and false otherwise */
  public boolean isSetExtTfIdf() {
    return this.extTfIdf != null;
  }

  public void setExtTfIdfIsSet(boolean value) {
    if (!value) {
      this.extTfIdf = null;
    }
  }

  public int getAppLevel1CategoryNameSize() {
    return (this.appLevel1CategoryName == null) ? 0 : this.appLevel1CategoryName.size();
  }

  public java.util.Iterator<String> getAppLevel1CategoryNameIterator() {
    return (this.appLevel1CategoryName == null) ? null : this.appLevel1CategoryName.iterator();
  }

  public void addToAppLevel1CategoryName(String elem) {
    if (this.appLevel1CategoryName == null) {
      this.appLevel1CategoryName = new ArrayList<String>();
    }
    this.appLevel1CategoryName.add(elem);
  }

  public List<String> getAppLevel1CategoryName() {
    return this.appLevel1CategoryName;
  }

  public QueryExt setAppLevel1CategoryName(List<String> appLevel1CategoryName) {
    this.appLevel1CategoryName = appLevel1CategoryName;
    return this;
  }

  public void unsetAppLevel1CategoryName() {
    this.appLevel1CategoryName = null;
  }

  /** Returns true if field appLevel1CategoryName is set (has been asigned a value) and false otherwise */
  public boolean isSetAppLevel1CategoryName() {
    return this.appLevel1CategoryName != null;
  }

  public void setAppLevel1CategoryNameIsSet(boolean value) {
    if (!value) {
      this.appLevel1CategoryName = null;
    }
  }

  public int getAppLevel2CategoryNameSize() {
    return (this.appLevel2CategoryName == null) ? 0 : this.appLevel2CategoryName.size();
  }

  public java.util.Iterator<String> getAppLevel2CategoryNameIterator() {
    return (this.appLevel2CategoryName == null) ? null : this.appLevel2CategoryName.iterator();
  }

  public void addToAppLevel2CategoryName(String elem) {
    if (this.appLevel2CategoryName == null) {
      this.appLevel2CategoryName = new ArrayList<String>();
    }
    this.appLevel2CategoryName.add(elem);
  }

  public List<String> getAppLevel2CategoryName() {
    return this.appLevel2CategoryName;
  }

  public QueryExt setAppLevel2CategoryName(List<String> appLevel2CategoryName) {
    this.appLevel2CategoryName = appLevel2CategoryName;
    return this;
  }

  public void unsetAppLevel2CategoryName() {
    this.appLevel2CategoryName = null;
  }

  /** Returns true if field appLevel2CategoryName is set (has been asigned a value) and false otherwise */
  public boolean isSetAppLevel2CategoryName() {
    return this.appLevel2CategoryName != null;
  }

  public void setAppLevel2CategoryNameIsSet(boolean value) {
    if (!value) {
      this.appLevel2CategoryName = null;
    }
  }

  public int getAppTagsSize() {
    return (this.appTags == null) ? 0 : this.appTags.size();
  }

  public java.util.Iterator<String> getAppTagsIterator() {
    return (this.appTags == null) ? null : this.appTags.iterator();
  }

  public void addToAppTags(String elem) {
    if (this.appTags == null) {
      this.appTags = new ArrayList<String>();
    }
    this.appTags.add(elem);
  }

  public List<String> getAppTags() {
    return this.appTags;
  }

  public QueryExt setAppTags(List<String> appTags) {
    this.appTags = appTags;
    return this;
  }

  public void unsetAppTags() {
    this.appTags = null;
  }

  /** Returns true if field appTags is set (has been asigned a value) and false otherwise */
  public boolean isSetAppTags() {
    return this.appTags != null;
  }

  public void setAppTagsIsSet(boolean value) {
    if (!value) {
      this.appTags = null;
    }
  }

  public int getAppIdsSize() {
    return (this.appIds == null) ? 0 : this.appIds.size();
  }

  public java.util.Iterator<Long> getAppIdsIterator() {
    return (this.appIds == null) ? null : this.appIds.iterator();
  }

  public void addToAppIds(long elem) {
    if (this.appIds == null) {
      this.appIds = new ArrayList<Long>();
    }
    this.appIds.add(elem);
  }

  public List<Long> getAppIds() {
    return this.appIds;
  }

  public QueryExt setAppIds(List<Long> appIds) {
    this.appIds = appIds;
    return this;
  }

  public void unsetAppIds() {
    this.appIds = null;
  }

  /** Returns true if field appIds is set (has been asigned a value) and false otherwise */
  public boolean isSetAppIds() {
    return this.appIds != null;
  }

  public void setAppIdsIsSet(boolean value) {
    if (!value) {
      this.appIds = null;
    }
  }

  public int getKeywordsSize() {
    return (this.keywords == null) ? 0 : this.keywords.size();
  }

  public java.util.Iterator<String> getKeywordsIterator() {
    return (this.keywords == null) ? null : this.keywords.iterator();
  }

  public void addToKeywords(String elem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<String>();
    }
    this.keywords.add(elem);
  }

  public List<String> getKeywords() {
    return this.keywords;
  }

  public QueryExt setKeywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public void unsetKeywords() {
    this.keywords = null;
  }

  /** Returns true if field keywords is set (has been asigned a value) and false otherwise */
  public boolean isSetKeywords() {
    return this.keywords != null;
  }

  public void setKeywordsIsSet(boolean value) {
    if (!value) {
      this.keywords = null;
    }
  }

  public int getRelatedTagsSize() {
    return (this.relatedTags == null) ? 0 : this.relatedTags.size();
  }

  public java.util.Iterator<String> getRelatedTagsIterator() {
    return (this.relatedTags == null) ? null : this.relatedTags.iterator();
  }

  public void addToRelatedTags(String elem) {
    if (this.relatedTags == null) {
      this.relatedTags = new ArrayList<String>();
    }
    this.relatedTags.add(elem);
  }

  public List<String> getRelatedTags() {
    return this.relatedTags;
  }

  public QueryExt setRelatedTags(List<String> relatedTags) {
    this.relatedTags = relatedTags;
    return this;
  }

  public void unsetRelatedTags() {
    this.relatedTags = null;
  }

  /** Returns true if field relatedTags is set (has been asigned a value) and false otherwise */
  public boolean isSetRelatedTags() {
    return this.relatedTags != null;
  }

  public void setRelatedTagsIsSet(boolean value) {
    if (!value) {
      this.relatedTags = null;
    }
  }

  public int getFolderTagsSize() {
    return (this.folderTags == null) ? 0 : this.folderTags.size();
  }

  public java.util.Iterator<String> getFolderTagsIterator() {
    return (this.folderTags == null) ? null : this.folderTags.iterator();
  }

  public void addToFolderTags(String elem) {
    if (this.folderTags == null) {
      this.folderTags = new ArrayList<String>();
    }
    this.folderTags.add(elem);
  }

  public List<String> getFolderTags() {
    return this.folderTags;
  }

  public QueryExt setFolderTags(List<String> folderTags) {
    this.folderTags = folderTags;
    return this;
  }

  public void unsetFolderTags() {
    this.folderTags = null;
  }

  /** Returns true if field folderTags is set (has been asigned a value) and false otherwise */
  public boolean isSetFolderTags() {
    return this.folderTags != null;
  }

  public void setFolderTagsIsSet(boolean value) {
    if (!value) {
      this.folderTags = null;
    }
  }

  public int getSearchKeywordsSize() {
    return (this.searchKeywords == null) ? 0 : this.searchKeywords.size();
  }

  public java.util.Iterator<String> getSearchKeywordsIterator() {
    return (this.searchKeywords == null) ? null : this.searchKeywords.iterator();
  }

  public void addToSearchKeywords(String elem) {
    if (this.searchKeywords == null) {
      this.searchKeywords = new ArrayList<String>();
    }
    this.searchKeywords.add(elem);
  }

  public List<String> getSearchKeywords() {
    return this.searchKeywords;
  }

  public QueryExt setSearchKeywords(List<String> searchKeywords) {
    this.searchKeywords = searchKeywords;
    return this;
  }

  public void unsetSearchKeywords() {
    this.searchKeywords = null;
  }

  /** Returns true if field searchKeywords is set (has been asigned a value) and false otherwise */
  public boolean isSetSearchKeywords() {
    return this.searchKeywords != null;
  }

  public void setSearchKeywordsIsSet(boolean value) {
    if (!value) {
      this.searchKeywords = null;
    }
  }

  public int getDisplayNamesSize() {
    return (this.displayNames == null) ? 0 : this.displayNames.size();
  }

  public java.util.Iterator<String> getDisplayNamesIterator() {
    return (this.displayNames == null) ? null : this.displayNames.iterator();
  }

  public void addToDisplayNames(String elem) {
    if (this.displayNames == null) {
      this.displayNames = new ArrayList<String>();
    }
    this.displayNames.add(elem);
  }

  public List<String> getDisplayNames() {
    return this.displayNames;
  }

  public QueryExt setDisplayNames(List<String> displayNames) {
    this.displayNames = displayNames;
    return this;
  }

  public void unsetDisplayNames() {
    this.displayNames = null;
  }

  /** Returns true if field displayNames is set (has been asigned a value) and false otherwise */
  public boolean isSetDisplayNames() {
    return this.displayNames != null;
  }

  public void setDisplayNamesIsSet(boolean value) {
    if (!value) {
      this.displayNames = null;
    }
  }

  public int getPublisherSize() {
    return (this.publisher == null) ? 0 : this.publisher.size();
  }

  public java.util.Iterator<String> getPublisherIterator() {
    return (this.publisher == null) ? null : this.publisher.iterator();
  }

  public void addToPublisher(String elem) {
    if (this.publisher == null) {
      this.publisher = new ArrayList<String>();
    }
    this.publisher.add(elem);
  }

  public List<String> getPublisher() {
    return this.publisher;
  }

  public QueryExt setPublisher(List<String> publisher) {
    this.publisher = publisher;
    return this;
  }

  public void unsetPublisher() {
    this.publisher = null;
  }

  /** Returns true if field publisher is set (has been asigned a value) and false otherwise */
  public boolean isSetPublisher() {
    return this.publisher != null;
  }

  public void setPublisherIsSet(boolean value) {
    if (!value) {
      this.publisher = null;
    }
  }

  public int getGoogleCatesSize() {
    return (this.googleCates == null) ? 0 : this.googleCates.size();
  }

  public java.util.Iterator<Integer> getGoogleCatesIterator() {
    return (this.googleCates == null) ? null : this.googleCates.iterator();
  }

  public void addToGoogleCates(int elem) {
    if (this.googleCates == null) {
      this.googleCates = new ArrayList<Integer>();
    }
    this.googleCates.add(elem);
  }

  public List<Integer> getGoogleCates() {
    return this.googleCates;
  }

  public QueryExt setGoogleCates(List<Integer> googleCates) {
    this.googleCates = googleCates;
    return this;
  }

  public void unsetGoogleCates() {
    this.googleCates = null;
  }

  /** Returns true if field googleCates is set (has been asigned a value) and false otherwise */
  public boolean isSetGoogleCates() {
    return this.googleCates != null;
  }

  public void setGoogleCatesIsSet(boolean value) {
    if (!value) {
      this.googleCates = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case QUERY:
      if (value == null) {
        unsetQuery();
      } else {
        setQuery((String)value);
      }
      break;

    case EXTS:
      if (value == null) {
        unsetExts();
      } else {
        setExts((List<QueryExtItem>)value);
      }
      break;

    case EXT_TF_IDF:
      if (value == null) {
        unsetExtTfIdf();
      } else {
        setExtTfIdf((List<String>)value);
      }
      break;

    case APP_LEVEL1_CATEGORY_NAME:
      if (value == null) {
        unsetAppLevel1CategoryName();
      } else {
        setAppLevel1CategoryName((List<String>)value);
      }
      break;

    case APP_LEVEL2_CATEGORY_NAME:
      if (value == null) {
        unsetAppLevel2CategoryName();
      } else {
        setAppLevel2CategoryName((List<String>)value);
      }
      break;

    case APP_TAGS:
      if (value == null) {
        unsetAppTags();
      } else {
        setAppTags((List<String>)value);
      }
      break;

    case APP_IDS:
      if (value == null) {
        unsetAppIds();
      } else {
        setAppIds((List<Long>)value);
      }
      break;

    case KEYWORDS:
      if (value == null) {
        unsetKeywords();
      } else {
        setKeywords((List<String>)value);
      }
      break;

    case RELATED_TAGS:
      if (value == null) {
        unsetRelatedTags();
      } else {
        setRelatedTags((List<String>)value);
      }
      break;

    case FOLDER_TAGS:
      if (value == null) {
        unsetFolderTags();
      } else {
        setFolderTags((List<String>)value);
      }
      break;

    case SEARCH_KEYWORDS:
      if (value == null) {
        unsetSearchKeywords();
      } else {
        setSearchKeywords((List<String>)value);
      }
      break;

    case DISPLAY_NAMES:
      if (value == null) {
        unsetDisplayNames();
      } else {
        setDisplayNames((List<String>)value);
      }
      break;

    case PUBLISHER:
      if (value == null) {
        unsetPublisher();
      } else {
        setPublisher((List<String>)value);
      }
      break;

    case GOOGLE_CATES:
      if (value == null) {
        unsetGoogleCates();
      } else {
        setGoogleCates((List<Integer>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case QUERY:
      return getQuery();

    case EXTS:
      return getExts();

    case EXT_TF_IDF:
      return getExtTfIdf();

    case APP_LEVEL1_CATEGORY_NAME:
      return getAppLevel1CategoryName();

    case APP_LEVEL2_CATEGORY_NAME:
      return getAppLevel2CategoryName();

    case APP_TAGS:
      return getAppTags();

    case APP_IDS:
      return getAppIds();

    case KEYWORDS:
      return getKeywords();

    case RELATED_TAGS:
      return getRelatedTags();

    case FOLDER_TAGS:
      return getFolderTags();

    case SEARCH_KEYWORDS:
      return getSearchKeywords();

    case DISPLAY_NAMES:
      return getDisplayNames();

    case PUBLISHER:
      return getPublisher();

    case GOOGLE_CATES:
      return getGoogleCates();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case QUERY:
      return isSetQuery();
    case EXTS:
      return isSetExts();
    case EXT_TF_IDF:
      return isSetExtTfIdf();
    case APP_LEVEL1_CATEGORY_NAME:
      return isSetAppLevel1CategoryName();
    case APP_LEVEL2_CATEGORY_NAME:
      return isSetAppLevel2CategoryName();
    case APP_TAGS:
      return isSetAppTags();
    case APP_IDS:
      return isSetAppIds();
    case KEYWORDS:
      return isSetKeywords();
    case RELATED_TAGS:
      return isSetRelatedTags();
    case FOLDER_TAGS:
      return isSetFolderTags();
    case SEARCH_KEYWORDS:
      return isSetSearchKeywords();
    case DISPLAY_NAMES:
      return isSetDisplayNames();
    case PUBLISHER:
      return isSetPublisher();
    case GOOGLE_CATES:
      return isSetGoogleCates();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QueryExt)
      return this.equals((QueryExt)that);
    return false;
  }

  public boolean equals(QueryExt that) {
    if (that == null)
      return false;

    boolean this_present_query = true && this.isSetQuery();
    boolean that_present_query = true && that.isSetQuery();
    if (this_present_query || that_present_query) {
      if (!(this_present_query && that_present_query))
        return false;
      if (!this.query.equals(that.query))
        return false;
    }

    boolean this_present_exts = true && this.isSetExts();
    boolean that_present_exts = true && that.isSetExts();
    if (this_present_exts || that_present_exts) {
      if (!(this_present_exts && that_present_exts))
        return false;
      if (!this.exts.equals(that.exts))
        return false;
    }

    boolean this_present_extTfIdf = true && this.isSetExtTfIdf();
    boolean that_present_extTfIdf = true && that.isSetExtTfIdf();
    if (this_present_extTfIdf || that_present_extTfIdf) {
      if (!(this_present_extTfIdf && that_present_extTfIdf))
        return false;
      if (!this.extTfIdf.equals(that.extTfIdf))
        return false;
    }

    boolean this_present_appLevel1CategoryName = true && this.isSetAppLevel1CategoryName();
    boolean that_present_appLevel1CategoryName = true && that.isSetAppLevel1CategoryName();
    if (this_present_appLevel1CategoryName || that_present_appLevel1CategoryName) {
      if (!(this_present_appLevel1CategoryName && that_present_appLevel1CategoryName))
        return false;
      if (!this.appLevel1CategoryName.equals(that.appLevel1CategoryName))
        return false;
    }

    boolean this_present_appLevel2CategoryName = true && this.isSetAppLevel2CategoryName();
    boolean that_present_appLevel2CategoryName = true && that.isSetAppLevel2CategoryName();
    if (this_present_appLevel2CategoryName || that_present_appLevel2CategoryName) {
      if (!(this_present_appLevel2CategoryName && that_present_appLevel2CategoryName))
        return false;
      if (!this.appLevel2CategoryName.equals(that.appLevel2CategoryName))
        return false;
    }

    boolean this_present_appTags = true && this.isSetAppTags();
    boolean that_present_appTags = true && that.isSetAppTags();
    if (this_present_appTags || that_present_appTags) {
      if (!(this_present_appTags && that_present_appTags))
        return false;
      if (!this.appTags.equals(that.appTags))
        return false;
    }

    boolean this_present_appIds = true && this.isSetAppIds();
    boolean that_present_appIds = true && that.isSetAppIds();
    if (this_present_appIds || that_present_appIds) {
      if (!(this_present_appIds && that_present_appIds))
        return false;
      if (!this.appIds.equals(that.appIds))
        return false;
    }

    boolean this_present_keywords = true && this.isSetKeywords();
    boolean that_present_keywords = true && that.isSetKeywords();
    if (this_present_keywords || that_present_keywords) {
      if (!(this_present_keywords && that_present_keywords))
        return false;
      if (!this.keywords.equals(that.keywords))
        return false;
    }

    boolean this_present_relatedTags = true && this.isSetRelatedTags();
    boolean that_present_relatedTags = true && that.isSetRelatedTags();
    if (this_present_relatedTags || that_present_relatedTags) {
      if (!(this_present_relatedTags && that_present_relatedTags))
        return false;
      if (!this.relatedTags.equals(that.relatedTags))
        return false;
    }

    boolean this_present_folderTags = true && this.isSetFolderTags();
    boolean that_present_folderTags = true && that.isSetFolderTags();
    if (this_present_folderTags || that_present_folderTags) {
      if (!(this_present_folderTags && that_present_folderTags))
        return false;
      if (!this.folderTags.equals(that.folderTags))
        return false;
    }

    boolean this_present_searchKeywords = true && this.isSetSearchKeywords();
    boolean that_present_searchKeywords = true && that.isSetSearchKeywords();
    if (this_present_searchKeywords || that_present_searchKeywords) {
      if (!(this_present_searchKeywords && that_present_searchKeywords))
        return false;
      if (!this.searchKeywords.equals(that.searchKeywords))
        return false;
    }

    boolean this_present_displayNames = true && this.isSetDisplayNames();
    boolean that_present_displayNames = true && that.isSetDisplayNames();
    if (this_present_displayNames || that_present_displayNames) {
      if (!(this_present_displayNames && that_present_displayNames))
        return false;
      if (!this.displayNames.equals(that.displayNames))
        return false;
    }

    boolean this_present_publisher = true && this.isSetPublisher();
    boolean that_present_publisher = true && that.isSetPublisher();
    if (this_present_publisher || that_present_publisher) {
      if (!(this_present_publisher && that_present_publisher))
        return false;
      if (!this.publisher.equals(that.publisher))
        return false;
    }

    boolean this_present_googleCates = true && this.isSetGoogleCates();
    boolean that_present_googleCates = true && that.isSetGoogleCates();
    if (this_present_googleCates || that_present_googleCates) {
      if (!(this_present_googleCates && that_present_googleCates))
        return false;
      if (!this.googleCates.equals(that.googleCates))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_query = true && (isSetQuery());
    builder.append(present_query);
    if (present_query)
      builder.append(query);

    boolean present_exts = true && (isSetExts());
    builder.append(present_exts);
    if (present_exts)
      builder.append(exts);

    boolean present_extTfIdf = true && (isSetExtTfIdf());
    builder.append(present_extTfIdf);
    if (present_extTfIdf)
      builder.append(extTfIdf);

    boolean present_appLevel1CategoryName = true && (isSetAppLevel1CategoryName());
    builder.append(present_appLevel1CategoryName);
    if (present_appLevel1CategoryName)
      builder.append(appLevel1CategoryName);

    boolean present_appLevel2CategoryName = true && (isSetAppLevel2CategoryName());
    builder.append(present_appLevel2CategoryName);
    if (present_appLevel2CategoryName)
      builder.append(appLevel2CategoryName);

    boolean present_appTags = true && (isSetAppTags());
    builder.append(present_appTags);
    if (present_appTags)
      builder.append(appTags);

    boolean present_appIds = true && (isSetAppIds());
    builder.append(present_appIds);
    if (present_appIds)
      builder.append(appIds);

    boolean present_keywords = true && (isSetKeywords());
    builder.append(present_keywords);
    if (present_keywords)
      builder.append(keywords);

    boolean present_relatedTags = true && (isSetRelatedTags());
    builder.append(present_relatedTags);
    if (present_relatedTags)
      builder.append(relatedTags);

    boolean present_folderTags = true && (isSetFolderTags());
    builder.append(present_folderTags);
    if (present_folderTags)
      builder.append(folderTags);

    boolean present_searchKeywords = true && (isSetSearchKeywords());
    builder.append(present_searchKeywords);
    if (present_searchKeywords)
      builder.append(searchKeywords);

    boolean present_displayNames = true && (isSetDisplayNames());
    builder.append(present_displayNames);
    if (present_displayNames)
      builder.append(displayNames);

    boolean present_publisher = true && (isSetPublisher());
    builder.append(present_publisher);
    if (present_publisher)
      builder.append(publisher);

    boolean present_googleCates = true && (isSetGoogleCates());
    builder.append(present_googleCates);
    if (present_googleCates)
      builder.append(googleCates);

    return builder.toHashCode();
  }

  public int compareTo(QueryExt other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    QueryExt typedOther = (QueryExt)other;

    lastComparison = Boolean.valueOf(isSetQuery()).compareTo(typedOther.isSetQuery());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery()) {
      lastComparison = TBaseHelper.compareTo(this.query, typedOther.query);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExts()).compareTo(typedOther.isSetExts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExts()) {
      lastComparison = TBaseHelper.compareTo(this.exts, typedOther.exts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtTfIdf()).compareTo(typedOther.isSetExtTfIdf());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtTfIdf()) {
      lastComparison = TBaseHelper.compareTo(this.extTfIdf, typedOther.extTfIdf);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppLevel1CategoryName()).compareTo(typedOther.isSetAppLevel1CategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppLevel1CategoryName()) {
      lastComparison = TBaseHelper.compareTo(this.appLevel1CategoryName, typedOther.appLevel1CategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppLevel2CategoryName()).compareTo(typedOther.isSetAppLevel2CategoryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppLevel2CategoryName()) {
      lastComparison = TBaseHelper.compareTo(this.appLevel2CategoryName, typedOther.appLevel2CategoryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppTags()).compareTo(typedOther.isSetAppTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppTags()) {
      lastComparison = TBaseHelper.compareTo(this.appTags, typedOther.appTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppIds()).compareTo(typedOther.isSetAppIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppIds()) {
      lastComparison = TBaseHelper.compareTo(this.appIds, typedOther.appIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKeywords()).compareTo(typedOther.isSetKeywords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeywords()) {
      lastComparison = TBaseHelper.compareTo(this.keywords, typedOther.keywords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRelatedTags()).compareTo(typedOther.isSetRelatedTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelatedTags()) {
      lastComparison = TBaseHelper.compareTo(this.relatedTags, typedOther.relatedTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFolderTags()).compareTo(typedOther.isSetFolderTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFolderTags()) {
      lastComparison = TBaseHelper.compareTo(this.folderTags, typedOther.folderTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSearchKeywords()).compareTo(typedOther.isSetSearchKeywords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSearchKeywords()) {
      lastComparison = TBaseHelper.compareTo(this.searchKeywords, typedOther.searchKeywords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayNames()).compareTo(typedOther.isSetDisplayNames());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayNames()) {
      lastComparison = TBaseHelper.compareTo(this.displayNames, typedOther.displayNames);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublisher()).compareTo(typedOther.isSetPublisher());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublisher()) {
      lastComparison = TBaseHelper.compareTo(this.publisher, typedOther.publisher);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoogleCates()).compareTo(typedOther.isSetGoogleCates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoogleCates()) {
      lastComparison = TBaseHelper.compareTo(this.googleCates, typedOther.googleCates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // QUERY
          if (field.type == TType.STRING) {
            this.query = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // EXTS
          if (field.type == TType.LIST) {
            {
              TList _list72 = iprot.readListBegin();
              this.exts = new ArrayList<QueryExtItem>(_list72.size);
              for (int _i73 = 0; _i73 < _list72.size; ++_i73)
              {
                QueryExtItem _elem74;
                _elem74 = new QueryExtItem();
                _elem74.read(iprot);
                this.exts.add(_elem74);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // EXT_TF_IDF
          if (field.type == TType.LIST) {
            {
              TList _list75 = iprot.readListBegin();
              this.extTfIdf = new ArrayList<String>(_list75.size);
              for (int _i76 = 0; _i76 < _list75.size; ++_i76)
              {
                String _elem77;
                _elem77 = iprot.readString();
                this.extTfIdf.add(_elem77);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // APP_LEVEL1_CATEGORY_NAME
          if (field.type == TType.LIST) {
            {
              TList _list78 = iprot.readListBegin();
              this.appLevel1CategoryName = new ArrayList<String>(_list78.size);
              for (int _i79 = 0; _i79 < _list78.size; ++_i79)
              {
                String _elem80;
                _elem80 = iprot.readString();
                this.appLevel1CategoryName.add(_elem80);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // APP_LEVEL2_CATEGORY_NAME
          if (field.type == TType.LIST) {
            {
              TList _list81 = iprot.readListBegin();
              this.appLevel2CategoryName = new ArrayList<String>(_list81.size);
              for (int _i82 = 0; _i82 < _list81.size; ++_i82)
              {
                String _elem83;
                _elem83 = iprot.readString();
                this.appLevel2CategoryName.add(_elem83);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // APP_TAGS
          if (field.type == TType.LIST) {
            {
              TList _list84 = iprot.readListBegin();
              this.appTags = new ArrayList<String>(_list84.size);
              for (int _i85 = 0; _i85 < _list84.size; ++_i85)
              {
                String _elem86;
                _elem86 = iprot.readString();
                this.appTags.add(_elem86);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // APP_IDS
          if (field.type == TType.LIST) {
            {
              TList _list87 = iprot.readListBegin();
              this.appIds = new ArrayList<Long>(_list87.size);
              for (int _i88 = 0; _i88 < _list87.size; ++_i88)
              {
                long _elem89;
                _elem89 = iprot.readI64();
                this.appIds.add(_elem89);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // KEYWORDS
          if (field.type == TType.LIST) {
            {
              TList _list90 = iprot.readListBegin();
              this.keywords = new ArrayList<String>(_list90.size);
              for (int _i91 = 0; _i91 < _list90.size; ++_i91)
              {
                String _elem92;
                _elem92 = iprot.readString();
                this.keywords.add(_elem92);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // RELATED_TAGS
          if (field.type == TType.LIST) {
            {
              TList _list93 = iprot.readListBegin();
              this.relatedTags = new ArrayList<String>(_list93.size);
              for (int _i94 = 0; _i94 < _list93.size; ++_i94)
              {
                String _elem95;
                _elem95 = iprot.readString();
                this.relatedTags.add(_elem95);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // FOLDER_TAGS
          if (field.type == TType.LIST) {
            {
              TList _list96 = iprot.readListBegin();
              this.folderTags = new ArrayList<String>(_list96.size);
              for (int _i97 = 0; _i97 < _list96.size; ++_i97)
              {
                String _elem98;
                _elem98 = iprot.readString();
                this.folderTags.add(_elem98);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // SEARCH_KEYWORDS
          if (field.type == TType.LIST) {
            {
              TList _list99 = iprot.readListBegin();
              this.searchKeywords = new ArrayList<String>(_list99.size);
              for (int _i100 = 0; _i100 < _list99.size; ++_i100)
              {
                String _elem101;
                _elem101 = iprot.readString();
                this.searchKeywords.add(_elem101);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // DISPLAY_NAMES
          if (field.type == TType.LIST) {
            {
              TList _list102 = iprot.readListBegin();
              this.displayNames = new ArrayList<String>(_list102.size);
              for (int _i103 = 0; _i103 < _list102.size; ++_i103)
              {
                String _elem104;
                _elem104 = iprot.readString();
                this.displayNames.add(_elem104);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // PUBLISHER
          if (field.type == TType.LIST) {
            {
              TList _list105 = iprot.readListBegin();
              this.publisher = new ArrayList<String>(_list105.size);
              for (int _i106 = 0; _i106 < _list105.size; ++_i106)
              {
                String _elem107;
                _elem107 = iprot.readString();
                this.publisher.add(_elem107);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // GOOGLE_CATES
          if (field.type == TType.LIST) {
            {
              TList _list108 = iprot.readListBegin();
              this.googleCates = new ArrayList<Integer>(_list108.size);
              for (int _i109 = 0; _i109 < _list108.size; ++_i109)
              {
                int _elem110;
                _elem110 = iprot.readI32();
                this.googleCates.add(_elem110);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.query != null) {
      if (isSetQuery()) {
        oprot.writeFieldBegin(QUERY_FIELD_DESC);
        oprot.writeString(this.query);
        oprot.writeFieldEnd();
      }
    }
    if (this.exts != null) {
      if (isSetExts()) {
        oprot.writeFieldBegin(EXTS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.exts.size()));
          for (QueryExtItem _iter111 : this.exts)
          {
            _iter111.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.extTfIdf != null) {
      if (isSetExtTfIdf()) {
        oprot.writeFieldBegin(EXT_TF_IDF_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.extTfIdf.size()));
          for (String _iter112 : this.extTfIdf)
          {
            oprot.writeString(_iter112);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.appLevel1CategoryName != null) {
      if (isSetAppLevel1CategoryName()) {
        oprot.writeFieldBegin(APP_LEVEL1_CATEGORY_NAME_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.appLevel1CategoryName.size()));
          for (String _iter113 : this.appLevel1CategoryName)
          {
            oprot.writeString(_iter113);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.appLevel2CategoryName != null) {
      if (isSetAppLevel2CategoryName()) {
        oprot.writeFieldBegin(APP_LEVEL2_CATEGORY_NAME_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.appLevel2CategoryName.size()));
          for (String _iter114 : this.appLevel2CategoryName)
          {
            oprot.writeString(_iter114);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.appTags != null) {
      if (isSetAppTags()) {
        oprot.writeFieldBegin(APP_TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.appTags.size()));
          for (String _iter115 : this.appTags)
          {
            oprot.writeString(_iter115);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.appIds != null) {
      if (isSetAppIds()) {
        oprot.writeFieldBegin(APP_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.I64, this.appIds.size()));
          for (long _iter116 : this.appIds)
          {
            oprot.writeI64(_iter116);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.keywords != null) {
      if (isSetKeywords()) {
        oprot.writeFieldBegin(KEYWORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.keywords.size()));
          for (String _iter117 : this.keywords)
          {
            oprot.writeString(_iter117);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.relatedTags != null) {
      if (isSetRelatedTags()) {
        oprot.writeFieldBegin(RELATED_TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.relatedTags.size()));
          for (String _iter118 : this.relatedTags)
          {
            oprot.writeString(_iter118);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.folderTags != null) {
      if (isSetFolderTags()) {
        oprot.writeFieldBegin(FOLDER_TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.folderTags.size()));
          for (String _iter119 : this.folderTags)
          {
            oprot.writeString(_iter119);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.searchKeywords != null) {
      if (isSetSearchKeywords()) {
        oprot.writeFieldBegin(SEARCH_KEYWORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.searchKeywords.size()));
          for (String _iter120 : this.searchKeywords)
          {
            oprot.writeString(_iter120);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.displayNames != null) {
      if (isSetDisplayNames()) {
        oprot.writeFieldBegin(DISPLAY_NAMES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.displayNames.size()));
          for (String _iter121 : this.displayNames)
          {
            oprot.writeString(_iter121);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.publisher != null) {
      if (isSetPublisher()) {
        oprot.writeFieldBegin(PUBLISHER_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.publisher.size()));
          for (String _iter122 : this.publisher)
          {
            oprot.writeString(_iter122);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    if (this.googleCates != null) {
      if (isSetGoogleCates()) {
        oprot.writeFieldBegin(GOOGLE_CATES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.I32, this.googleCates.size()));
          for (int _iter123 : this.googleCates)
          {
            oprot.writeI32(_iter123);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QueryExt(");
    boolean first = true;

    if (isSetQuery()) {
      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
    }
    if (isSetExts()) {
      if (!first) sb.append(", ");
      sb.append("exts:");
      if (this.exts == null) {
        sb.append("null");
      } else {
        sb.append(this.exts);
      }
      first = false;
    }
    if (isSetExtTfIdf()) {
      if (!first) sb.append(", ");
      sb.append("extTfIdf:");
      if (this.extTfIdf == null) {
        sb.append("null");
      } else {
        sb.append(this.extTfIdf);
      }
      first = false;
    }
    if (isSetAppLevel1CategoryName()) {
      if (!first) sb.append(", ");
      sb.append("appLevel1CategoryName:");
      if (this.appLevel1CategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.appLevel1CategoryName);
      }
      first = false;
    }
    if (isSetAppLevel2CategoryName()) {
      if (!first) sb.append(", ");
      sb.append("appLevel2CategoryName:");
      if (this.appLevel2CategoryName == null) {
        sb.append("null");
      } else {
        sb.append(this.appLevel2CategoryName);
      }
      first = false;
    }
    if (isSetAppTags()) {
      if (!first) sb.append(", ");
      sb.append("appTags:");
      if (this.appTags == null) {
        sb.append("null");
      } else {
        sb.append(this.appTags);
      }
      first = false;
    }
    if (isSetAppIds()) {
      if (!first) sb.append(", ");
      sb.append("appIds:");
      if (this.appIds == null) {
        sb.append("null");
      } else {
        sb.append(this.appIds);
      }
      first = false;
    }
    if (isSetKeywords()) {
      if (!first) sb.append(", ");
      sb.append("keywords:");
      if (this.keywords == null) {
        sb.append("null");
      } else {
        sb.append(this.keywords);
      }
      first = false;
    }
    if (isSetRelatedTags()) {
      if (!first) sb.append(", ");
      sb.append("relatedTags:");
      if (this.relatedTags == null) {
        sb.append("null");
      } else {
        sb.append(this.relatedTags);
      }
      first = false;
    }
    if (isSetFolderTags()) {
      if (!first) sb.append(", ");
      sb.append("folderTags:");
      if (this.folderTags == null) {
        sb.append("null");
      } else {
        sb.append(this.folderTags);
      }
      first = false;
    }
    if (isSetSearchKeywords()) {
      if (!first) sb.append(", ");
      sb.append("searchKeywords:");
      if (this.searchKeywords == null) {
        sb.append("null");
      } else {
        sb.append(this.searchKeywords);
      }
      first = false;
    }
    if (isSetDisplayNames()) {
      if (!first) sb.append(", ");
      sb.append("displayNames:");
      if (this.displayNames == null) {
        sb.append("null");
      } else {
        sb.append(this.displayNames);
      }
      first = false;
    }
    if (isSetPublisher()) {
      if (!first) sb.append(", ");
      sb.append("publisher:");
      if (this.publisher == null) {
        sb.append("null");
      } else {
        sb.append(this.publisher);
      }
      first = false;
    }
    if (isSetGoogleCates()) {
      if (!first) sb.append(", ");
      sb.append("googleCates:");
      if (this.googleCates == null) {
        sb.append("null");
      } else {
        sb.append(this.googleCates);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

